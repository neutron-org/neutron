syntax = "proto3";
package neutron.interchainqueries;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/neutron-org/neutron/v5/x/interchainqueries/types";

// The parameters for the module.
message Params {
  option (gogoproto.goproto_stringer) = false;
  // The duration, measured in blocks, that must pass since the query's registration or its last
  // result submission before the query becomes eligible for removal by anyone. Is used to set
  // `submit_timeout` on Interchain Query registration.
  uint64 query_submit_timeout = 1;
  // Amount of coins required to be provided as deposit on Interchain Query registration.
  repeated cosmos.base.v1beta1.Coin query_deposit = 2 [
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins",
    (gogoproto.nullable) = false
  ];
  // Amount of tx hashes to be removed during a single EndBlock. Can vary to balance between
  // network cleaning speed and EndBlock duration. A zero value means no limit.
  uint64 tx_query_removal_limit = 3;

  // Maximum amount of keys in a registered key value query
  uint64 max_kv_query_keys_count = 4;

  // max_transactions_filters defines maximum allowed amount of tx filters in msgRegisterInterchainQuery
  uint64 max_transactions_filters = 5;
}
