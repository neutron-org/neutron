consumes:
  - application/json
definitions:
  cosmos.adminmodule.adminmodule.QueryAdminsResponse:
    properties:
      admins:
        items:
          type: string
        type: array
    type: object
  cosmos.adminmodule.adminmodule.QueryArchivedProposalsLegacyResponse:
    properties:
      proposalsLegacy:
        items:
          description: Proposal defines the core field members of a governance proposal.
          properties:
            content:
              description: content is the proposal's content.
              properties:
                type_url:
                  type: string
                value:
                  format: byte
                  type: string
              type: object
            deposit_end_time:
              description: deposit_end_time is the end time for deposition.
              format: date-time
              type: string
            final_tally_result:
              description: >-
                final_tally_result is the final tally result of the proposal.
                When

                querying a proposal via gRPC, this field is not populated until
                the

                proposal's voting period has ended.
              properties:
                abstain:
                  description: abstain is the number of abstain votes on a proposal.
                  type: string
                'no':
                  description: no is the number of no votes on a proposal.
                  type: string
                no_with_veto:
                  description: >-
                    no_with_veto is the number of no with veto votes on a
                    proposal.
                  type: string
                'yes':
                  description: yes is the number of yes votes on a proposal.
                  type: string
              type: object
            proposal_id:
              description: proposal_id defines the unique id of the proposal.
              format: uint64
              type: string
            status:
              description: status defines the proposal status.
              default: PROPOSAL_STATUS_UNSPECIFIED
              enum:
                - PROPOSAL_STATUS_UNSPECIFIED
                - PROPOSAL_STATUS_DEPOSIT_PERIOD
                - PROPOSAL_STATUS_VOTING_PERIOD
                - PROPOSAL_STATUS_PASSED
                - PROPOSAL_STATUS_REJECTED
                - PROPOSAL_STATUS_FAILED
              type: string
            submit_time:
              description: submit_time is the time of proposal submission.
              format: date-time
              type: string
            total_deposit:
              description: total_deposit is the total deposit on the proposal.
              items:
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            voting_end_time:
              description: voting_end_time is the end time of voting on a proposal.
              format: date-time
              type: string
            voting_start_time:
              description: voting_start_time is the starting time to vote on a proposal.
              format: date-time
              type: string
          type: object
        type: array
    type: object
  cosmos.adminmodule.adminmodule.QueryArchivedProposalsResponse:
    properties:
      proposals:
        items:
          description: Proposal defines the core field members of a governance proposal.
          properties:
            deposit_end_time:
              description: deposit_end_time is the end time for deposition.
              format: date-time
              type: string
            expedited:
              description: 'Since: cosmos-sdk 0.50'
              title: expedited defines if the proposal is expedited
              type: boolean
            failed_reason:
              description: 'Since: cosmos-sdk 0.50'
              title: failed_reason defines the reason why the proposal failed
              type: string
            final_tally_result:
              description: >-
                final_tally_result is the final tally result of the proposal.
                When

                querying a proposal via gRPC, this field is not populated until
                the

                proposal's voting period has ended.
              properties:
                abstain_count:
                  description: abstain_count is the number of abstain votes on a proposal.
                  type: string
                no_count:
                  description: no_count is the number of no votes on a proposal.
                  type: string
                no_with_veto_count:
                  description: >-
                    no_with_veto_count is the number of no with veto votes on a
                    proposal.
                  type: string
                yes_count:
                  description: yes_count is the number of yes votes on a proposal.
                  type: string
              type: object
            id:
              description: id defines the unique id of the proposal.
              format: uint64
              type: string
            messages:
              description: >-
                messages are the arbitrary messages to be executed if the
                proposal passes.
              items:
                properties:
                  type_url:
                    type: string
                  value:
                    format: byte
                    type: string
                type: object
              type: array
            metadata:
              title: >-
                metadata is any arbitrary metadata attached to the proposal.

                the recommended format of the metadata is to be found here:
                https://docs.cosmos.network/v0.47/modules/gov#proposal-3
              type: string
            proposer:
              description: 'Since: cosmos-sdk 0.47'
              title: proposer is the address of the proposal sumbitter
              type: string
            status:
              description: status defines the proposal status.
              default: PROPOSAL_STATUS_UNSPECIFIED
              enum:
                - PROPOSAL_STATUS_UNSPECIFIED
                - PROPOSAL_STATUS_DEPOSIT_PERIOD
                - PROPOSAL_STATUS_VOTING_PERIOD
                - PROPOSAL_STATUS_PASSED
                - PROPOSAL_STATUS_REJECTED
                - PROPOSAL_STATUS_FAILED
              type: string
            submit_time:
              description: submit_time is the time of proposal submission.
              format: date-time
              type: string
            summary:
              description: 'Since: cosmos-sdk 0.47'
              title: summary is a short summary of the proposal
              type: string
            title:
              description: 'Since: cosmos-sdk 0.47'
              title: title is the title of the proposal
              type: string
            total_deposit:
              description: total_deposit is the total deposit on the proposal.
              items:
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            voting_end_time:
              description: voting_end_time is the end time of voting on a proposal.
              format: date-time
              type: string
            voting_start_time:
              description: voting_start_time is the starting time to vote on a proposal.
              format: date-time
              type: string
          type: object
        type: array
    type: object
  cosmos.app.v1alpha1.Config:
    description: >-
      Config represents the configuration for a Cosmos SDK ABCI app.

      It is intended that all state machine logic including the version of

      baseapp and tx handlers (and possibly even Tendermint) that an app needs

      can be described in a config object. For compatibility, the framework
      should

      allow a mixture of declarative and imperative app wiring, however, apps

      that strive for the maximum ease of maintainability should be able to
      describe

      their state machine with a config object alone.
    properties:
      golang_bindings:
        description: >-
          golang_bindings specifies explicit interface to implementation type
          bindings which

          depinject uses to resolve interface inputs to provider functions.  The
          scope of this

          field's configuration is global (not module specific).
        items:
          description: >-
            GolangBinding is an explicit interface type to implementing type
            binding for dependency injection.
          properties:
            implementation:
              title: >-
                implementation is the implementing type which will be supplied
                when an input of type interface is requested
              type: string
            interface_type:
              title: >-
                interface_type is the interface type which will be bound to a
                specific implementation type
              type: string
          type: object
        type: array
      modules:
        description: modules are the module configurations for the app.
        items:
          description: ModuleConfig is a module configuration for an app.
          properties:
            config:
              properties:
                type_url:
                  type: string
                value:
                  format: byte
                  type: string
              type: object
              description: >-
                config is the config object for the module. Module config
                messages should

                define a ModuleDescriptor using the
                cosmos.app.v1alpha1.is_module extension.
            golang_bindings:
              description: >-
                golang_bindings specifies explicit interface to implementation
                type bindings which

                depinject uses to resolve interface inputs to provider
                functions.  The scope of this

                field's configuration is module specific.
              items:
                description: >-
                  GolangBinding is an explicit interface type to implementing
                  type binding for dependency injection.
                properties:
                  implementation:
                    title: >-
                      implementation is the implementing type which will be
                      supplied when an input of type interface is requested
                    type: string
                  interface_type:
                    title: >-
                      interface_type is the interface type which will be bound
                      to a specific implementation type
                    type: string
                type: object
              type: array
            name:
              description: >-
                name is the unique name of the module within the app. It should
                be a name

                that persists between different versions of a module so that
                modules

                can be smoothly upgraded to new versions.


                For example, for the module cosmos.bank.module.v1.Module, we may
                chose

                to simply name the module "bank" in the app. When we upgrade to

                cosmos.bank.module.v2.Module, the app-specific name "bank" stays
                the same

                and the framework knows that the v2 module should receive all
                the same state

                that the v1 module had. Note: modules should provide info on
                which versions

                they can migrate from in the ModuleDescriptor.can_migration_from
                field.
              type: string
          type: object
        type: array
    type: object
  cosmos.app.v1alpha1.GolangBinding:
    description: >-
      GolangBinding is an explicit interface type to implementing type binding
      for dependency injection.
    properties:
      implementation:
        title: >-
          implementation is the implementing type which will be supplied when an
          input of type interface is requested
        type: string
      interface_type:
        title: >-
          interface_type is the interface type which will be bound to a specific
          implementation type
        type: string
    type: object
  cosmos.app.v1alpha1.ModuleConfig:
    description: ModuleConfig is a module configuration for an app.
    properties:
      config:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
        description: >-
          config is the config object for the module. Module config messages
          should

          define a ModuleDescriptor using the cosmos.app.v1alpha1.is_module
          extension.
      golang_bindings:
        description: >-
          golang_bindings specifies explicit interface to implementation type
          bindings which

          depinject uses to resolve interface inputs to provider functions.  The
          scope of this

          field's configuration is module specific.
        items:
          description: >-
            GolangBinding is an explicit interface type to implementing type
            binding for dependency injection.
          properties:
            implementation:
              title: >-
                implementation is the implementing type which will be supplied
                when an input of type interface is requested
              type: string
            interface_type:
              title: >-
                interface_type is the interface type which will be bound to a
                specific implementation type
              type: string
          type: object
        type: array
      name:
        description: >-
          name is the unique name of the module within the app. It should be a
          name

          that persists between different versions of a module so that modules

          can be smoothly upgraded to new versions.


          For example, for the module cosmos.bank.module.v1.Module, we may chose

          to simply name the module "bank" in the app. When we upgrade to

          cosmos.bank.module.v2.Module, the app-specific name "bank" stays the
          same

          and the framework knows that the v2 module should receive all the same
          state

          that the v1 module had. Note: modules should provide info on which
          versions

          they can migrate from in the ModuleDescriptor.can_migration_from
          field.
        type: string
    type: object
  cosmos.app.v1alpha1.QueryConfigResponse:
    description: QueryConfigRequest is the Query/Config response type.
    properties:
      config:
        description: config is the current app config.
        properties:
          golang_bindings:
            description: >-
              golang_bindings specifies explicit interface to implementation
              type bindings which

              depinject uses to resolve interface inputs to provider functions. 
              The scope of this

              field's configuration is global (not module specific).
            items:
              description: >-
                GolangBinding is an explicit interface type to implementing type
                binding for dependency injection.
              properties:
                implementation:
                  title: >-
                    implementation is the implementing type which will be
                    supplied when an input of type interface is requested
                  type: string
                interface_type:
                  title: >-
                    interface_type is the interface type which will be bound to
                    a specific implementation type
                  type: string
              type: object
            type: array
          modules:
            description: modules are the module configurations for the app.
            items:
              description: ModuleConfig is a module configuration for an app.
              properties:
                config:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                  description: >-
                    config is the config object for the module. Module config
                    messages should

                    define a ModuleDescriptor using the
                    cosmos.app.v1alpha1.is_module extension.
                golang_bindings:
                  description: >-
                    golang_bindings specifies explicit interface to
                    implementation type bindings which

                    depinject uses to resolve interface inputs to provider
                    functions.  The scope of this

                    field's configuration is module specific.
                  items:
                    description: >-
                      GolangBinding is an explicit interface type to
                      implementing type binding for dependency injection.
                    properties:
                      implementation:
                        title: >-
                          implementation is the implementing type which will be
                          supplied when an input of type interface is requested
                        type: string
                      interface_type:
                        title: >-
                          interface_type is the interface type which will be
                          bound to a specific implementation type
                        type: string
                    type: object
                  type: array
                name:
                  description: >-
                    name is the unique name of the module within the app. It
                    should be a name

                    that persists between different versions of a module so that
                    modules

                    can be smoothly upgraded to new versions.


                    For example, for the module cosmos.bank.module.v1.Module, we
                    may chose

                    to simply name the module "bank" in the app. When we upgrade
                    to

                    cosmos.bank.module.v2.Module, the app-specific name "bank"
                    stays the same

                    and the framework knows that the v2 module should receive
                    all the same state

                    that the v1 module had. Note: modules should provide info on
                    which versions

                    they can migrate from in the
                    ModuleDescriptor.can_migration_from field.
                  type: string
              type: object
            type: array
        type: object
    type: object
  cosmos.auth.v1beta1.AddressBytesToStringResponse:
    description: >-
      AddressBytesToStringResponse is the response type for AddressString rpc
      method.


      Since: cosmos-sdk 0.46
    properties:
      address_string:
        type: string
    type: object
  cosmos.auth.v1beta1.AddressStringToBytesResponse:
    description: >-
      AddressStringToBytesResponse is the response type for AddressBytes rpc
      method.


      Since: cosmos-sdk 0.46
    properties:
      address_bytes:
        format: byte
        type: string
    type: object
  cosmos.auth.v1beta1.BaseAccount:
    description: >-
      BaseAccount defines a base account type. It contains all the necessary
      fields

      for basic account functionality. Any custom account type should extend
      this

      type for additional functionality (e.g. vesting).
    properties:
      account_number:
        format: uint64
        type: string
      address:
        type: string
      pub_key:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
      sequence:
        format: uint64
        type: string
    type: object
  cosmos.auth.v1beta1.Bech32PrefixResponse:
    description: |-
      Bech32PrefixResponse is the response type for Bech32Prefix rpc method.

      Since: cosmos-sdk 0.46
    properties:
      bech32_prefix:
        type: string
    type: object
  cosmos.auth.v1beta1.Params:
    description: Params defines the parameters for the auth module.
    properties:
      max_memo_characters:
        format: uint64
        type: string
      sig_verify_cost_ed25519:
        format: uint64
        type: string
      sig_verify_cost_secp256k1:
        format: uint64
        type: string
      tx_sig_limit:
        format: uint64
        type: string
      tx_size_cost_per_byte:
        format: uint64
        type: string
    type: object
  cosmos.auth.v1beta1.QueryAccountAddressByIDResponse:
    description: 'Since: cosmos-sdk 0.46.2'
    properties:
      account_address:
        type: string
    title: >-
      QueryAccountAddressByIDResponse is the response type for
      AccountAddressByID rpc method
    type: object
  cosmos.auth.v1beta1.QueryAccountInfoResponse:
    description: |-
      QueryAccountInfoResponse is the Query/AccountInfo response type.

      Since: cosmos-sdk 0.47
    properties:
      info:
        description: info is the account info which is represented by BaseAccount.
        properties:
          account_number:
            format: uint64
            type: string
          address:
            type: string
          pub_key:
            properties:
              type_url:
                type: string
              value:
                format: byte
                type: string
            type: object
          sequence:
            format: uint64
            type: string
        type: object
    type: object
  cosmos.auth.v1beta1.QueryAccountResponse:
    description: >-
      QueryAccountResponse is the response type for the Query/Account RPC
      method.
    properties:
      account:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
        description: account defines the account of the corresponding address.
    type: object
  cosmos.auth.v1beta1.QueryAccountsResponse:
    description: >-
      QueryAccountsResponse is the response type for the Query/Accounts RPC
      method.


      Since: cosmos-sdk 0.43
    properties:
      accounts:
        items:
          properties:
            type_url:
              type: string
            value:
              format: byte
              type: string
          type: object
        title: accounts are the existing accounts
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  cosmos.auth.v1beta1.QueryModuleAccountByNameResponse:
    description: >-
      QueryModuleAccountByNameResponse is the response type for the
      Query/ModuleAccountByName RPC method.
    properties:
      account:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
    type: object
  cosmos.auth.v1beta1.QueryModuleAccountsResponse:
    description: >-
      QueryModuleAccountsResponse is the response type for the
      Query/ModuleAccounts RPC method.


      Since: cosmos-sdk 0.46
    properties:
      accounts:
        items:
          properties:
            type_url:
              type: string
            value:
              format: byte
              type: string
          type: object
        type: array
    type: object
  cosmos.auth.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties:
          max_memo_characters:
            format: uint64
            type: string
          sig_verify_cost_ed25519:
            format: uint64
            type: string
          sig_verify_cost_secp256k1:
            format: uint64
            type: string
          tx_sig_limit:
            format: uint64
            type: string
          tx_size_cost_per_byte:
            format: uint64
            type: string
        type: object
    type: object
  cosmos.authz.v1beta1.Grant:
    description: |-
      Grant gives permissions to execute
      the provide method with expiration time.
    properties:
      authorization:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
      expiration:
        format: date-time
        title: >-
          time when the grant will expire and will be pruned. If null, then the
          grant

          doesn't have a time expiration (other conditions  in `authorization`

          may apply to invalidate the grant)
        type: string
    type: object
  cosmos.authz.v1beta1.GrantAuthorization:
    properties:
      authorization:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
      expiration:
        format: date-time
        type: string
      grantee:
        type: string
      granter:
        type: string
    title: >-
      GrantAuthorization extends a grant with both the addresses of the grantee
      and granter.

      It is used in genesis.proto and query.proto
    type: object
  cosmos.authz.v1beta1.QueryGranteeGrantsResponse:
    description: >-
      QueryGranteeGrantsResponse is the response type for the
      Query/GranteeGrants RPC method.
    properties:
      grants:
        description: grants is a list of grants granted to the grantee.
        items:
          properties:
            authorization:
              properties:
                type_url:
                  type: string
                value:
                  format: byte
                  type: string
              type: object
            expiration:
              format: date-time
              type: string
            grantee:
              type: string
            granter:
              type: string
          title: >-
            GrantAuthorization extends a grant with both the addresses of the
            grantee and granter.

            It is used in genesis.proto and query.proto
          type: object
        type: array
      pagination:
        description: pagination defines an pagination for the response.
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  cosmos.authz.v1beta1.QueryGranterGrantsResponse:
    description: >-
      QueryGranterGrantsResponse is the response type for the
      Query/GranterGrants RPC method.
    properties:
      grants:
        description: grants is a list of grants granted by the granter.
        items:
          properties:
            authorization:
              properties:
                type_url:
                  type: string
                value:
                  format: byte
                  type: string
              type: object
            expiration:
              format: date-time
              type: string
            grantee:
              type: string
            granter:
              type: string
          title: >-
            GrantAuthorization extends a grant with both the addresses of the
            grantee and granter.

            It is used in genesis.proto and query.proto
          type: object
        type: array
      pagination:
        description: pagination defines an pagination for the response.
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  cosmos.authz.v1beta1.QueryGrantsResponse:
    description: >-
      QueryGrantsResponse is the response type for the Query/Authorizations RPC
      method.
    properties:
      grants:
        description: authorizations is a list of grants granted for grantee by granter.
        items:
          description: |-
            Grant gives permissions to execute
            the provide method with expiration time.
          properties:
            authorization:
              properties:
                type_url:
                  type: string
                value:
                  format: byte
                  type: string
              type: object
            expiration:
              format: date-time
              title: >-
                time when the grant will expire and will be pruned. If null,
                then the grant

                doesn't have a time expiration (other conditions  in
                `authorization`

                may apply to invalidate the grant)
              type: string
          type: object
        type: array
      pagination:
        description: pagination defines an pagination for the response.
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  cosmos.autocli.v1.AppOptionsResponse:
    description: AppOptionsResponse is the RemoteInfoService/AppOptions response type.
    properties:
      module_options:
        additionalProperties:
          description: ModuleOptions describes the CLI options for a Cosmos SDK module.
          properties:
            query:
              description: query describes the queries commands for the module.
              properties:
                rpc_command_options:
                  description: >-
                    rpc_command_options are options for commands generated from
                    rpc methods.

                    If no options are specified for a given rpc method on the
                    service, a

                    command will be generated for that method with the default
                    options.
                  items:
                    description: >-
                      RpcCommandOptions specifies options for commands generated
                      from protobuf

                      rpc methods.
                    properties:
                      alias:
                        description: >-
                          alias is an array of aliases that can be used instead
                          of the first word in Use.
                        items:
                          type: string
                        type: array
                      deprecated:
                        description: >-
                          deprecated defines, if this command is deprecated and
                          should print this string when used.
                        type: string
                      example:
                        description: example is examples of how to use the command.
                        type: string
                      flag_options:
                        additionalProperties:
                          description: >-
                            FlagOptions are options for flags generated from rpc
                            request fields.

                            By default, all request fields are configured as
                            flags based on the

                            kebab-case name of the field. Fields can be turned
                            into positional arguments

                            instead by using RpcCommandOptions.positional_args.
                          properties:
                            default_value:
                              description: default_value is the default value as text.
                              type: string
                            deprecated:
                              description: >-
                                deprecated is the usage text to show if this
                                flag is deprecated.
                              type: string
                            hidden:
                              title: hidden hides the flag from help/usage text
                              type: boolean
                            name:
                              description: >-
                                name is an alternate name to use for the field
                                flag.
                              type: string
                            shorthand:
                              description: shorthand is a one-letter abbreviated flag.
                              type: string
                            shorthand_deprecated:
                              description: >-
                                shorthand_deprecated is the usage text to show
                                if the shorthand of this flag is deprecated.
                              type: string
                            usage:
                              description: usage is the help message.
                              type: string
                          type: object
                        description: >-
                          flag_options are options for flags generated from rpc
                          request fields.

                          By default all request fields are configured as flags.
                          They can

                          also be configured as positional args instead using
                          positional_args.
                        type: object
                      long:
                        description: >-
                          long is the long message shown in the 'help
                          <this-command>' output.
                        type: string
                      positional_args:
                        description: >-
                          positional_args specifies positional arguments for the
                          command.
                        items:
                          description: >-
                            PositionalArgDescriptor describes a positional
                            argument.
                          properties:
                            proto_field:
                              description: >-
                                proto_field specifies the proto field to use as
                                the positional arg. Any

                                fields used as positional args will not have a
                                flag generated.
                              type: string
                            varargs:
                              description: >-
                                varargs makes a positional parameter a varargs
                                parameter. This can only be

                                applied to last positional parameter and the
                                proto_field must a repeated

                                field.
                              type: boolean
                          type: object
                        type: array
                      rpc_method:
                        description: >-
                          rpc_method is short name of the protobuf rpc method
                          that this command is

                          generated from.
                        type: string
                      short:
                        description: >-
                          short is the short description shown in the 'help'
                          output.
                        type: string
                      skip:
                        description: >-
                          skip specifies whether to skip this rpc method when
                          generating commands.
                        type: boolean
                      suggest_for:
                        description: >-
                          suggest_for is an array of command names for which
                          this command will be suggested -

                          similar to aliases but only suggests.
                        items:
                          type: string
                        type: array
                      use:
                        description: >-
                          use is the one-line usage method. It also allows
                          specifying an alternate

                          name for the command as the first word of the usage
                          text.


                          By default the name of an rpc command is the
                          kebab-case short name of the

                          rpc method.
                        type: string
                      version:
                        description: >-
                          version defines the version for this command. If this
                          value is non-empty and the command does not

                          define a "version" flag, a "version" boolean flag will
                          be added to the command and, if specified,

                          will print content of the "Version" variable. A
                          shorthand "v" flag will also be added if the

                          command does not define one.
                        type: string
                    type: object
                  type: array
                service:
                  description: >-
                    service is the fully qualified name of the protobuf service
                    to build

                    the command from. It can be left empty if sub_commands are
                    used instead

                    which may be the case if a module provides multiple tx
                    and/or query services.
                  type: string
              type: object
            tx:
              description: tx describes the tx commands for the module.
              properties:
                rpc_command_options:
                  description: >-
                    rpc_command_options are options for commands generated from
                    rpc methods.

                    If no options are specified for a given rpc method on the
                    service, a

                    command will be generated for that method with the default
                    options.
                  items:
                    description: >-
                      RpcCommandOptions specifies options for commands generated
                      from protobuf

                      rpc methods.
                    properties:
                      alias:
                        description: >-
                          alias is an array of aliases that can be used instead
                          of the first word in Use.
                        items:
                          type: string
                        type: array
                      deprecated:
                        description: >-
                          deprecated defines, if this command is deprecated and
                          should print this string when used.
                        type: string
                      example:
                        description: example is examples of how to use the command.
                        type: string
                      flag_options:
                        additionalProperties:
                          description: >-
                            FlagOptions are options for flags generated from rpc
                            request fields.

                            By default, all request fields are configured as
                            flags based on the

                            kebab-case name of the field. Fields can be turned
                            into positional arguments

                            instead by using RpcCommandOptions.positional_args.
                          properties:
                            default_value:
                              description: default_value is the default value as text.
                              type: string
                            deprecated:
                              description: >-
                                deprecated is the usage text to show if this
                                flag is deprecated.
                              type: string
                            hidden:
                              title: hidden hides the flag from help/usage text
                              type: boolean
                            name:
                              description: >-
                                name is an alternate name to use for the field
                                flag.
                              type: string
                            shorthand:
                              description: shorthand is a one-letter abbreviated flag.
                              type: string
                            shorthand_deprecated:
                              description: >-
                                shorthand_deprecated is the usage text to show
                                if the shorthand of this flag is deprecated.
                              type: string
                            usage:
                              description: usage is the help message.
                              type: string
                          type: object
                        description: >-
                          flag_options are options for flags generated from rpc
                          request fields.

                          By default all request fields are configured as flags.
                          They can

                          also be configured as positional args instead using
                          positional_args.
                        type: object
                      long:
                        description: >-
                          long is the long message shown in the 'help
                          <this-command>' output.
                        type: string
                      positional_args:
                        description: >-
                          positional_args specifies positional arguments for the
                          command.
                        items:
                          description: >-
                            PositionalArgDescriptor describes a positional
                            argument.
                          properties:
                            proto_field:
                              description: >-
                                proto_field specifies the proto field to use as
                                the positional arg. Any

                                fields used as positional args will not have a
                                flag generated.
                              type: string
                            varargs:
                              description: >-
                                varargs makes a positional parameter a varargs
                                parameter. This can only be

                                applied to last positional parameter and the
                                proto_field must a repeated

                                field.
                              type: boolean
                          type: object
                        type: array
                      rpc_method:
                        description: >-
                          rpc_method is short name of the protobuf rpc method
                          that this command is

                          generated from.
                        type: string
                      short:
                        description: >-
                          short is the short description shown in the 'help'
                          output.
                        type: string
                      skip:
                        description: >-
                          skip specifies whether to skip this rpc method when
                          generating commands.
                        type: boolean
                      suggest_for:
                        description: >-
                          suggest_for is an array of command names for which
                          this command will be suggested -

                          similar to aliases but only suggests.
                        items:
                          type: string
                        type: array
                      use:
                        description: >-
                          use is the one-line usage method. It also allows
                          specifying an alternate

                          name for the command as the first word of the usage
                          text.


                          By default the name of an rpc command is the
                          kebab-case short name of the

                          rpc method.
                        type: string
                      version:
                        description: >-
                          version defines the version for this command. If this
                          value is non-empty and the command does not

                          define a "version" flag, a "version" boolean flag will
                          be added to the command and, if specified,

                          will print content of the "Version" variable. A
                          shorthand "v" flag will also be added if the

                          command does not define one.
                        type: string
                    type: object
                  type: array
                service:
                  description: >-
                    service is the fully qualified name of the protobuf service
                    to build

                    the command from. It can be left empty if sub_commands are
                    used instead

                    which may be the case if a module provides multiple tx
                    and/or query services.
                  type: string
              type: object
          type: object
        description: module_options is a map of module name to autocli module options.
        type: object
    type: object
  cosmos.autocli.v1.FlagOptions:
    description: >-
      FlagOptions are options for flags generated from rpc request fields.

      By default, all request fields are configured as flags based on the

      kebab-case name of the field. Fields can be turned into positional
      arguments

      instead by using RpcCommandOptions.positional_args.
    properties:
      default_value:
        description: default_value is the default value as text.
        type: string
      deprecated:
        description: deprecated is the usage text to show if this flag is deprecated.
        type: string
      hidden:
        title: hidden hides the flag from help/usage text
        type: boolean
      name:
        description: name is an alternate name to use for the field flag.
        type: string
      shorthand:
        description: shorthand is a one-letter abbreviated flag.
        type: string
      shorthand_deprecated:
        description: >-
          shorthand_deprecated is the usage text to show if the shorthand of
          this flag is deprecated.
        type: string
      usage:
        description: usage is the help message.
        type: string
    type: object
  cosmos.autocli.v1.ModuleOptions:
    description: ModuleOptions describes the CLI options for a Cosmos SDK module.
    properties:
      query:
        description: query describes the queries commands for the module.
        properties:
          rpc_command_options:
            description: >-
              rpc_command_options are options for commands generated from rpc
              methods.

              If no options are specified for a given rpc method on the service,
              a

              command will be generated for that method with the default
              options.
            items:
              description: >-
                RpcCommandOptions specifies options for commands generated from
                protobuf

                rpc methods.
              properties:
                alias:
                  description: >-
                    alias is an array of aliases that can be used instead of the
                    first word in Use.
                  items:
                    type: string
                  type: array
                deprecated:
                  description: >-
                    deprecated defines, if this command is deprecated and should
                    print this string when used.
                  type: string
                example:
                  description: example is examples of how to use the command.
                  type: string
                flag_options:
                  additionalProperties:
                    description: >-
                      FlagOptions are options for flags generated from rpc
                      request fields.

                      By default, all request fields are configured as flags
                      based on the

                      kebab-case name of the field. Fields can be turned into
                      positional arguments

                      instead by using RpcCommandOptions.positional_args.
                    properties:
                      default_value:
                        description: default_value is the default value as text.
                        type: string
                      deprecated:
                        description: >-
                          deprecated is the usage text to show if this flag is
                          deprecated.
                        type: string
                      hidden:
                        title: hidden hides the flag from help/usage text
                        type: boolean
                      name:
                        description: name is an alternate name to use for the field flag.
                        type: string
                      shorthand:
                        description: shorthand is a one-letter abbreviated flag.
                        type: string
                      shorthand_deprecated:
                        description: >-
                          shorthand_deprecated is the usage text to show if the
                          shorthand of this flag is deprecated.
                        type: string
                      usage:
                        description: usage is the help message.
                        type: string
                    type: object
                  description: >-
                    flag_options are options for flags generated from rpc
                    request fields.

                    By default all request fields are configured as flags. They
                    can

                    also be configured as positional args instead using
                    positional_args.
                  type: object
                long:
                  description: >-
                    long is the long message shown in the 'help <this-command>'
                    output.
                  type: string
                positional_args:
                  description: >-
                    positional_args specifies positional arguments for the
                    command.
                  items:
                    description: PositionalArgDescriptor describes a positional argument.
                    properties:
                      proto_field:
                        description: >-
                          proto_field specifies the proto field to use as the
                          positional arg. Any

                          fields used as positional args will not have a flag
                          generated.
                        type: string
                      varargs:
                        description: >-
                          varargs makes a positional parameter a varargs
                          parameter. This can only be

                          applied to last positional parameter and the
                          proto_field must a repeated

                          field.
                        type: boolean
                    type: object
                  type: array
                rpc_method:
                  description: >-
                    rpc_method is short name of the protobuf rpc method that
                    this command is

                    generated from.
                  type: string
                short:
                  description: short is the short description shown in the 'help' output.
                  type: string
                skip:
                  description: >-
                    skip specifies whether to skip this rpc method when
                    generating commands.
                  type: boolean
                suggest_for:
                  description: >-
                    suggest_for is an array of command names for which this
                    command will be suggested -

                    similar to aliases but only suggests.
                  items:
                    type: string
                  type: array
                use:
                  description: >-
                    use is the one-line usage method. It also allows specifying
                    an alternate

                    name for the command as the first word of the usage text.


                    By default the name of an rpc command is the kebab-case
                    short name of the

                    rpc method.
                  type: string
                version:
                  description: >-
                    version defines the version for this command. If this value
                    is non-empty and the command does not

                    define a "version" flag, a "version" boolean flag will be
                    added to the command and, if specified,

                    will print content of the "Version" variable. A shorthand
                    "v" flag will also be added if the

                    command does not define one.
                  type: string
              type: object
            type: array
          service:
            description: >-
              service is the fully qualified name of the protobuf service to
              build

              the command from. It can be left empty if sub_commands are used
              instead

              which may be the case if a module provides multiple tx and/or
              query services.
            type: string
        type: object
      tx:
        description: tx describes the tx commands for the module.
        properties:
          rpc_command_options:
            description: >-
              rpc_command_options are options for commands generated from rpc
              methods.

              If no options are specified for a given rpc method on the service,
              a

              command will be generated for that method with the default
              options.
            items:
              description: >-
                RpcCommandOptions specifies options for commands generated from
                protobuf

                rpc methods.
              properties:
                alias:
                  description: >-
                    alias is an array of aliases that can be used instead of the
                    first word in Use.
                  items:
                    type: string
                  type: array
                deprecated:
                  description: >-
                    deprecated defines, if this command is deprecated and should
                    print this string when used.
                  type: string
                example:
                  description: example is examples of how to use the command.
                  type: string
                flag_options:
                  additionalProperties:
                    description: >-
                      FlagOptions are options for flags generated from rpc
                      request fields.

                      By default, all request fields are configured as flags
                      based on the

                      kebab-case name of the field. Fields can be turned into
                      positional arguments

                      instead by using RpcCommandOptions.positional_args.
                    properties:
                      default_value:
                        description: default_value is the default value as text.
                        type: string
                      deprecated:
                        description: >-
                          deprecated is the usage text to show if this flag is
                          deprecated.
                        type: string
                      hidden:
                        title: hidden hides the flag from help/usage text
                        type: boolean
                      name:
                        description: name is an alternate name to use for the field flag.
                        type: string
                      shorthand:
                        description: shorthand is a one-letter abbreviated flag.
                        type: string
                      shorthand_deprecated:
                        description: >-
                          shorthand_deprecated is the usage text to show if the
                          shorthand of this flag is deprecated.
                        type: string
                      usage:
                        description: usage is the help message.
                        type: string
                    type: object
                  description: >-
                    flag_options are options for flags generated from rpc
                    request fields.

                    By default all request fields are configured as flags. They
                    can

                    also be configured as positional args instead using
                    positional_args.
                  type: object
                long:
                  description: >-
                    long is the long message shown in the 'help <this-command>'
                    output.
                  type: string
                positional_args:
                  description: >-
                    positional_args specifies positional arguments for the
                    command.
                  items:
                    description: PositionalArgDescriptor describes a positional argument.
                    properties:
                      proto_field:
                        description: >-
                          proto_field specifies the proto field to use as the
                          positional arg. Any

                          fields used as positional args will not have a flag
                          generated.
                        type: string
                      varargs:
                        description: >-
                          varargs makes a positional parameter a varargs
                          parameter. This can only be

                          applied to last positional parameter and the
                          proto_field must a repeated

                          field.
                        type: boolean
                    type: object
                  type: array
                rpc_method:
                  description: >-
                    rpc_method is short name of the protobuf rpc method that
                    this command is

                    generated from.
                  type: string
                short:
                  description: short is the short description shown in the 'help' output.
                  type: string
                skip:
                  description: >-
                    skip specifies whether to skip this rpc method when
                    generating commands.
                  type: boolean
                suggest_for:
                  description: >-
                    suggest_for is an array of command names for which this
                    command will be suggested -

                    similar to aliases but only suggests.
                  items:
                    type: string
                  type: array
                use:
                  description: >-
                    use is the one-line usage method. It also allows specifying
                    an alternate

                    name for the command as the first word of the usage text.


                    By default the name of an rpc command is the kebab-case
                    short name of the

                    rpc method.
                  type: string
                version:
                  description: >-
                    version defines the version for this command. If this value
                    is non-empty and the command does not

                    define a "version" flag, a "version" boolean flag will be
                    added to the command and, if specified,

                    will print content of the "Version" variable. A shorthand
                    "v" flag will also be added if the

                    command does not define one.
                  type: string
              type: object
            type: array
          service:
            description: >-
              service is the fully qualified name of the protobuf service to
              build

              the command from. It can be left empty if sub_commands are used
              instead

              which may be the case if a module provides multiple tx and/or
              query services.
            type: string
        type: object
    type: object
  cosmos.autocli.v1.PositionalArgDescriptor:
    description: PositionalArgDescriptor describes a positional argument.
    properties:
      proto_field:
        description: >-
          proto_field specifies the proto field to use as the positional arg.
          Any

          fields used as positional args will not have a flag generated.
        type: string
      varargs:
        description: >-
          varargs makes a positional parameter a varargs parameter. This can
          only be

          applied to last positional parameter and the proto_field must a
          repeated

          field.
        type: boolean
    type: object
  cosmos.autocli.v1.RpcCommandOptions:
    description: |-
      RpcCommandOptions specifies options for commands generated from protobuf
      rpc methods.
    properties:
      alias:
        description: >-
          alias is an array of aliases that can be used instead of the first
          word in Use.
        items:
          type: string
        type: array
      deprecated:
        description: >-
          deprecated defines, if this command is deprecated and should print
          this string when used.
        type: string
      example:
        description: example is examples of how to use the command.
        type: string
      flag_options:
        additionalProperties:
          description: >-
            FlagOptions are options for flags generated from rpc request fields.

            By default, all request fields are configured as flags based on the

            kebab-case name of the field. Fields can be turned into positional
            arguments

            instead by using RpcCommandOptions.positional_args.
          properties:
            default_value:
              description: default_value is the default value as text.
              type: string
            deprecated:
              description: deprecated is the usage text to show if this flag is deprecated.
              type: string
            hidden:
              title: hidden hides the flag from help/usage text
              type: boolean
            name:
              description: name is an alternate name to use for the field flag.
              type: string
            shorthand:
              description: shorthand is a one-letter abbreviated flag.
              type: string
            shorthand_deprecated:
              description: >-
                shorthand_deprecated is the usage text to show if the shorthand
                of this flag is deprecated.
              type: string
            usage:
              description: usage is the help message.
              type: string
          type: object
        description: |-
          flag_options are options for flags generated from rpc request fields.
          By default all request fields are configured as flags. They can
          also be configured as positional args instead using positional_args.
        type: object
      long:
        description: long is the long message shown in the 'help <this-command>' output.
        type: string
      positional_args:
        description: positional_args specifies positional arguments for the command.
        items:
          description: PositionalArgDescriptor describes a positional argument.
          properties:
            proto_field:
              description: >-
                proto_field specifies the proto field to use as the positional
                arg. Any

                fields used as positional args will not have a flag generated.
              type: string
            varargs:
              description: >-
                varargs makes a positional parameter a varargs parameter. This
                can only be

                applied to last positional parameter and the proto_field must a
                repeated

                field.
              type: boolean
          type: object
        type: array
      rpc_method:
        description: >-
          rpc_method is short name of the protobuf rpc method that this command
          is

          generated from.
        type: string
      short:
        description: short is the short description shown in the 'help' output.
        type: string
      skip:
        description: >-
          skip specifies whether to skip this rpc method when generating
          commands.
        type: boolean
      suggest_for:
        description: >-
          suggest_for is an array of command names for which this command will
          be suggested -

          similar to aliases but only suggests.
        items:
          type: string
        type: array
      use:
        description: >-
          use is the one-line usage method. It also allows specifying an
          alternate

          name for the command as the first word of the usage text.


          By default the name of an rpc command is the kebab-case short name of
          the

          rpc method.
        type: string
      version:
        description: >-
          version defines the version for this command. If this value is
          non-empty and the command does not

          define a "version" flag, a "version" boolean flag will be added to the
          command and, if specified,

          will print content of the "Version" variable. A shorthand "v" flag
          will also be added if the

          command does not define one.
        type: string
    type: object
  cosmos.autocli.v1.ServiceCommandDescriptor:
    description: >-
      ServiceCommandDescriptor describes a CLI command based on a protobuf
      service.
    properties:
      rpc_command_options:
        description: >-
          rpc_command_options are options for commands generated from rpc
          methods.

          If no options are specified for a given rpc method on the service, a

          command will be generated for that method with the default options.
        items:
          description: >-
            RpcCommandOptions specifies options for commands generated from
            protobuf

            rpc methods.
          properties:
            alias:
              description: >-
                alias is an array of aliases that can be used instead of the
                first word in Use.
              items:
                type: string
              type: array
            deprecated:
              description: >-
                deprecated defines, if this command is deprecated and should
                print this string when used.
              type: string
            example:
              description: example is examples of how to use the command.
              type: string
            flag_options:
              additionalProperties:
                description: >-
                  FlagOptions are options for flags generated from rpc request
                  fields.

                  By default, all request fields are configured as flags based
                  on the

                  kebab-case name of the field. Fields can be turned into
                  positional arguments

                  instead by using RpcCommandOptions.positional_args.
                properties:
                  default_value:
                    description: default_value is the default value as text.
                    type: string
                  deprecated:
                    description: >-
                      deprecated is the usage text to show if this flag is
                      deprecated.
                    type: string
                  hidden:
                    title: hidden hides the flag from help/usage text
                    type: boolean
                  name:
                    description: name is an alternate name to use for the field flag.
                    type: string
                  shorthand:
                    description: shorthand is a one-letter abbreviated flag.
                    type: string
                  shorthand_deprecated:
                    description: >-
                      shorthand_deprecated is the usage text to show if the
                      shorthand of this flag is deprecated.
                    type: string
                  usage:
                    description: usage is the help message.
                    type: string
                type: object
              description: >-
                flag_options are options for flags generated from rpc request
                fields.

                By default all request fields are configured as flags. They can

                also be configured as positional args instead using
                positional_args.
              type: object
            long:
              description: >-
                long is the long message shown in the 'help <this-command>'
                output.
              type: string
            positional_args:
              description: positional_args specifies positional arguments for the command.
              items:
                description: PositionalArgDescriptor describes a positional argument.
                properties:
                  proto_field:
                    description: >-
                      proto_field specifies the proto field to use as the
                      positional arg. Any

                      fields used as positional args will not have a flag
                      generated.
                    type: string
                  varargs:
                    description: >-
                      varargs makes a positional parameter a varargs parameter.
                      This can only be

                      applied to last positional parameter and the proto_field
                      must a repeated

                      field.
                    type: boolean
                type: object
              type: array
            rpc_method:
              description: >-
                rpc_method is short name of the protobuf rpc method that this
                command is

                generated from.
              type: string
            short:
              description: short is the short description shown in the 'help' output.
              type: string
            skip:
              description: >-
                skip specifies whether to skip this rpc method when generating
                commands.
              type: boolean
            suggest_for:
              description: >-
                suggest_for is an array of command names for which this command
                will be suggested -

                similar to aliases but only suggests.
              items:
                type: string
              type: array
            use:
              description: >-
                use is the one-line usage method. It also allows specifying an
                alternate

                name for the command as the first word of the usage text.


                By default the name of an rpc command is the kebab-case short
                name of the

                rpc method.
              type: string
            version:
              description: >-
                version defines the version for this command. If this value is
                non-empty and the command does not

                define a "version" flag, a "version" boolean flag will be added
                to the command and, if specified,

                will print content of the "Version" variable. A shorthand "v"
                flag will also be added if the

                command does not define one.
              type: string
          type: object
        type: array
      service:
        description: >-
          service is the fully qualified name of the protobuf service to build

          the command from. It can be left empty if sub_commands are used
          instead

          which may be the case if a module provides multiple tx and/or query
          services.
        type: string
    type: object
  cosmos.bank.v1beta1.DenomOwner:
    description: |-
      DenomOwner defines structure representing an account that owns or holds a
      particular denominated token. It contains the account address and account
      balance of the denominated token.

      Since: cosmos-sdk 0.46
    properties:
      address:
        description: address defines the address that owns a particular denomination.
        type: string
      balance:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.DenomUnit:
    description: |-
      DenomUnit represents a struct that describes a given
      denomination unit of the basic token.
    properties:
      aliases:
        items:
          type: string
        title: aliases is a list of string aliases for the given denom
        type: array
      denom:
        description: denom represents the string name of the given denom unit (e.g uatom).
        type: string
      exponent:
        description: >-
          exponent represents power of 10 exponent that one must

          raise the base_denom to in order to equal the given DenomUnit's denom

          1 denom = 10^exponent base_denom

          (e.g. with a base_denom of uatom, one can create a DenomUnit of 'atom'
          with

          exponent = 6, thus: 1 atom = 10^6 uatom).
        format: int64
        type: integer
    type: object
  cosmos.bank.v1beta1.Metadata:
    description: |-
      Metadata represents a struct that describes
      a basic token.
    properties:
      base:
        description: >-
          base represents the base denom (should be the DenomUnit with exponent
          = 0).
        type: string
      denom_units:
        items:
          description: |-
            DenomUnit represents a struct that describes a given
            denomination unit of the basic token.
          properties:
            aliases:
              items:
                type: string
              title: aliases is a list of string aliases for the given denom
              type: array
            denom:
              description: >-
                denom represents the string name of the given denom unit (e.g
                uatom).
              type: string
            exponent:
              description: >-
                exponent represents power of 10 exponent that one must

                raise the base_denom to in order to equal the given DenomUnit's
                denom

                1 denom = 10^exponent base_denom

                (e.g. with a base_denom of uatom, one can create a DenomUnit of
                'atom' with

                exponent = 6, thus: 1 atom = 10^6 uatom).
              format: int64
              type: integer
          type: object
        title: denom_units represents the list of DenomUnit's for a given coin
        type: array
      description:
        type: string
      display:
        description: |-
          display indicates the suggested denom that should be
          displayed in clients.
        type: string
      name:
        description: 'Since: cosmos-sdk 0.43'
        title: 'name defines the name of the token (eg: Cosmos Atom)'
        type: string
      symbol:
        description: >-
          symbol is the token symbol usually shown on exchanges (eg: ATOM). This
          can

          be the same as the display.


          Since: cosmos-sdk 0.43
        type: string
      uri:
        description: >-
          URI to a document (on or off-chain) that contains additional
          information. Optional.


          Since: cosmos-sdk 0.46
        type: string
      uri_hash:
        description: >-
          URIHash is a sha256 hash of a document pointed by URI. It's used to
          verify that

          the document didn't change. Optional.


          Since: cosmos-sdk 0.46
        type: string
    type: object
  cosmos.bank.v1beta1.Params:
    description: Params defines the parameters for the bank module.
    properties:
      default_send_enabled:
        type: boolean
      send_enabled:
        description: >-
          Deprecated: Use of SendEnabled in params is deprecated.

          For genesis, use the newly added send_enabled field in the genesis
          object.

          Storage, lookup, and manipulation of this information is now in the
          keeper.


          As of cosmos-sdk 0.47, this only exists for backwards compatibility of
          genesis files.
        items:
          description: >-
            SendEnabled maps coin denom to a send_enabled status (whether a
            denom is

            sendable).
          properties:
            denom:
              type: string
            enabled:
              type: boolean
          type: object
        type: array
    type: object
  cosmos.bank.v1beta1.QueryAllBalancesResponse:
    description: >-
      QueryAllBalancesResponse is the response type for the Query/AllBalances
      RPC

      method.
    properties:
      balances:
        description: balances is the balances of all the coins.
        items:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QueryBalanceResponse:
    description: >-
      QueryBalanceResponse is the response type for the Query/Balance RPC
      method.
    properties:
      balance:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QueryDenomMetadataByQueryStringResponse:
    description: >-
      QueryDenomMetadataByQueryStringResponse is the response type for the
      Query/DenomMetadata RPC

      method. Identical with QueryDenomMetadataResponse but receives denom as
      query string in request.
    properties:
      metadata:
        description: >-
          metadata describes and provides all the client information for the
          requested token.
        properties:
          base:
            description: >-
              base represents the base denom (should be the DenomUnit with
              exponent = 0).
            type: string
          denom_units:
            items:
              description: |-
                DenomUnit represents a struct that describes a given
                denomination unit of the basic token.
              properties:
                aliases:
                  items:
                    type: string
                  title: aliases is a list of string aliases for the given denom
                  type: array
                denom:
                  description: >-
                    denom represents the string name of the given denom unit
                    (e.g uatom).
                  type: string
                exponent:
                  description: >-
                    exponent represents power of 10 exponent that one must

                    raise the base_denom to in order to equal the given
                    DenomUnit's denom

                    1 denom = 10^exponent base_denom

                    (e.g. with a base_denom of uatom, one can create a DenomUnit
                    of 'atom' with

                    exponent = 6, thus: 1 atom = 10^6 uatom).
                  format: int64
                  type: integer
              type: object
            title: denom_units represents the list of DenomUnit's for a given coin
            type: array
          description:
            type: string
          display:
            description: |-
              display indicates the suggested denom that should be
              displayed in clients.
            type: string
          name:
            description: 'Since: cosmos-sdk 0.43'
            title: 'name defines the name of the token (eg: Cosmos Atom)'
            type: string
          symbol:
            description: >-
              symbol is the token symbol usually shown on exchanges (eg: ATOM).
              This can

              be the same as the display.


              Since: cosmos-sdk 0.43
            type: string
          uri:
            description: >-
              URI to a document (on or off-chain) that contains additional
              information. Optional.


              Since: cosmos-sdk 0.46
            type: string
          uri_hash:
            description: >-
              URIHash is a sha256 hash of a document pointed by URI. It's used
              to verify that

              the document didn't change. Optional.


              Since: cosmos-sdk 0.46
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QueryDenomMetadataResponse:
    description: >-
      QueryDenomMetadataResponse is the response type for the
      Query/DenomMetadata RPC

      method.
    properties:
      metadata:
        description: >-
          metadata describes and provides all the client information for the
          requested token.
        properties:
          base:
            description: >-
              base represents the base denom (should be the DenomUnit with
              exponent = 0).
            type: string
          denom_units:
            items:
              description: |-
                DenomUnit represents a struct that describes a given
                denomination unit of the basic token.
              properties:
                aliases:
                  items:
                    type: string
                  title: aliases is a list of string aliases for the given denom
                  type: array
                denom:
                  description: >-
                    denom represents the string name of the given denom unit
                    (e.g uatom).
                  type: string
                exponent:
                  description: >-
                    exponent represents power of 10 exponent that one must

                    raise the base_denom to in order to equal the given
                    DenomUnit's denom

                    1 denom = 10^exponent base_denom

                    (e.g. with a base_denom of uatom, one can create a DenomUnit
                    of 'atom' with

                    exponent = 6, thus: 1 atom = 10^6 uatom).
                  format: int64
                  type: integer
              type: object
            title: denom_units represents the list of DenomUnit's for a given coin
            type: array
          description:
            type: string
          display:
            description: |-
              display indicates the suggested denom that should be
              displayed in clients.
            type: string
          name:
            description: 'Since: cosmos-sdk 0.43'
            title: 'name defines the name of the token (eg: Cosmos Atom)'
            type: string
          symbol:
            description: >-
              symbol is the token symbol usually shown on exchanges (eg: ATOM).
              This can

              be the same as the display.


              Since: cosmos-sdk 0.43
            type: string
          uri:
            description: >-
              URI to a document (on or off-chain) that contains additional
              information. Optional.


              Since: cosmos-sdk 0.46
            type: string
          uri_hash:
            description: >-
              URIHash is a sha256 hash of a document pointed by URI. It's used
              to verify that

              the document didn't change. Optional.


              Since: cosmos-sdk 0.46
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QueryDenomOwnersByQueryResponse:
    description: >-
      QueryDenomOwnersByQueryResponse defines the RPC response of a
      DenomOwnersByQuery RPC query.


      Since: cosmos-sdk 0.50.3
    properties:
      denom_owners:
        items:
          description: >-
            DenomOwner defines structure representing an account that owns or
            holds a

            particular denominated token. It contains the account address and
            account

            balance of the denominated token.


            Since: cosmos-sdk 0.46
          properties:
            address:
              description: address defines the address that owns a particular denomination.
              type: string
            balance:
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QueryDenomOwnersResponse:
    description: >-
      QueryDenomOwnersResponse defines the RPC response of a DenomOwners RPC
      query.


      Since: cosmos-sdk 0.46
    properties:
      denom_owners:
        items:
          description: >-
            DenomOwner defines structure representing an account that owns or
            holds a

            particular denominated token. It contains the account address and
            account

            balance of the denominated token.


            Since: cosmos-sdk 0.46
          properties:
            address:
              description: address defines the address that owns a particular denomination.
              type: string
            balance:
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QueryDenomsMetadataResponse:
    description: >-
      QueryDenomsMetadataResponse is the response type for the
      Query/DenomsMetadata RPC

      method.
    properties:
      metadatas:
        description: >-
          metadata provides the client information for all the registered
          tokens.
        items:
          description: |-
            Metadata represents a struct that describes
            a basic token.
          properties:
            base:
              description: >-
                base represents the base denom (should be the DenomUnit with
                exponent = 0).
              type: string
            denom_units:
              items:
                description: |-
                  DenomUnit represents a struct that describes a given
                  denomination unit of the basic token.
                properties:
                  aliases:
                    items:
                      type: string
                    title: aliases is a list of string aliases for the given denom
                    type: array
                  denom:
                    description: >-
                      denom represents the string name of the given denom unit
                      (e.g uatom).
                    type: string
                  exponent:
                    description: >-
                      exponent represents power of 10 exponent that one must

                      raise the base_denom to in order to equal the given
                      DenomUnit's denom

                      1 denom = 10^exponent base_denom

                      (e.g. with a base_denom of uatom, one can create a
                      DenomUnit of 'atom' with

                      exponent = 6, thus: 1 atom = 10^6 uatom).
                    format: int64
                    type: integer
                type: object
              title: denom_units represents the list of DenomUnit's for a given coin
              type: array
            description:
              type: string
            display:
              description: |-
                display indicates the suggested denom that should be
                displayed in clients.
              type: string
            name:
              description: 'Since: cosmos-sdk 0.43'
              title: 'name defines the name of the token (eg: Cosmos Atom)'
              type: string
            symbol:
              description: >-
                symbol is the token symbol usually shown on exchanges (eg:
                ATOM). This can

                be the same as the display.


                Since: cosmos-sdk 0.43
              type: string
            uri:
              description: >-
                URI to a document (on or off-chain) that contains additional
                information. Optional.


                Since: cosmos-sdk 0.46
              type: string
            uri_hash:
              description: >-
                URIHash is a sha256 hash of a document pointed by URI. It's used
                to verify that

                the document didn't change. Optional.


                Since: cosmos-sdk 0.46
              type: string
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QueryParamsResponse:
    description: >-
      QueryParamsResponse defines the response type for querying x/bank
      parameters.
    properties:
      params:
        description: params provides the parameters of the bank module.
        properties:
          default_send_enabled:
            type: boolean
          send_enabled:
            description: >-
              Deprecated: Use of SendEnabled in params is deprecated.

              For genesis, use the newly added send_enabled field in the genesis
              object.

              Storage, lookup, and manipulation of this information is now in
              the keeper.


              As of cosmos-sdk 0.47, this only exists for backwards
              compatibility of genesis files.
            items:
              description: >-
                SendEnabled maps coin denom to a send_enabled status (whether a
                denom is

                sendable).
              properties:
                denom:
                  type: string
                enabled:
                  type: boolean
              type: object
            type: array
        type: object
    type: object
  cosmos.bank.v1beta1.QuerySendEnabledResponse:
    description: |-
      QuerySendEnabledResponse defines the RPC response of a SendEnable query.

      Since: cosmos-sdk 0.47
    properties:
      pagination:
        description: |-
          pagination defines the pagination in the response. This field is only
          populated if the denoms field in the request is empty.
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
      send_enabled:
        items:
          description: >-
            SendEnabled maps coin denom to a send_enabled status (whether a
            denom is

            sendable).
          properties:
            denom:
              type: string
            enabled:
              type: boolean
          type: object
        type: array
    type: object
  cosmos.bank.v1beta1.QuerySpendableBalanceByDenomResponse:
    description: >-
      QuerySpendableBalanceByDenomResponse defines the gRPC response structure
      for

      querying an account's spendable balance for a specific denom.


      Since: cosmos-sdk 0.47
    properties:
      balance:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QuerySpendableBalancesResponse:
    description: >-
      QuerySpendableBalancesResponse defines the gRPC response structure for
      querying

      an account's spendable balances.


      Since: cosmos-sdk 0.46
    properties:
      balances:
        description: balances is the spendable balances of all the coins.
        items:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QuerySupplyOfResponse:
    description: >-
      QuerySupplyOfResponse is the response type for the Query/SupplyOf RPC
      method.
    properties:
      amount:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
    type: object
  cosmos.bank.v1beta1.QueryTotalSupplyResponse:
    properties:
      pagination:
        description: |-
          pagination defines the pagination in the response.

          Since: cosmos-sdk 0.43
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
      supply:
        items:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        title: supply is the supply of the coins
        type: array
    title: >-
      QueryTotalSupplyResponse is the response type for the Query/TotalSupply
      RPC

      method
    type: object
  cosmos.bank.v1beta1.SendEnabled:
    description: |-
      SendEnabled maps coin denom to a send_enabled status (whether a denom is
      sendable).
    properties:
      denom:
        type: string
      enabled:
        type: boolean
    type: object
  cosmos.base.abci.v1beta1.ABCIMessageLog:
    description: >-
      ABCIMessageLog defines a structure containing an indexed tx ABCI message
      log.
    properties:
      events:
        description: |-
          Events contains a slice of Event objects that were emitted during some
          execution.
        items:
          description: |-
            StringEvent defines en Event object wrapper where all the attributes
            contain key/value pairs that are strings instead of raw bytes.
          properties:
            attributes:
              items:
                description: >-
                  Attribute defines an attribute wrapper where the key and value
                  are

                  strings instead of raw bytes.
                properties:
                  key:
                    type: string
                  value:
                    type: string
                type: object
              type: array
            type:
              type: string
          type: object
        type: array
      log:
        type: string
      msg_index:
        format: int64
        type: integer
    type: object
  cosmos.base.abci.v1beta1.Attribute:
    description: |-
      Attribute defines an attribute wrapper where the key and value are
      strings instead of raw bytes.
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  cosmos.base.abci.v1beta1.GasInfo:
    description: GasInfo defines tx execution gas context.
    properties:
      gas_used:
        description: GasUsed is the amount of gas actually consumed.
        format: uint64
        type: string
      gas_wanted:
        description: GasWanted is the maximum units of work we allow this tx to perform.
        format: uint64
        type: string
    type: object
  cosmos.base.abci.v1beta1.Result:
    description: Result is the union of ResponseFormat and ResponseCheckTx.
    properties:
      data:
        description: >-
          Data is any data returned from message or handler execution. It MUST
          be

          length prefixed in order to separate data from multiple message
          executions.

          Deprecated. This field is still populated, but prefer msg_response
          instead

          because it also contains the Msg response typeURL.
        format: byte
        type: string
      events:
        description: >-
          Events contains a slice of Event objects that were emitted during
          message

          or handler execution.
        items:
          description: >-
            Event allows application developers to attach additional information
            to

            ResponseFinalizeBlock and ResponseCheckTx.

            Later, transactions may be queried using these events.
          properties:
            attributes:
              items:
                description: >-
                  EventAttribute is a single key-value pair, associated with an
                  event.
                properties:
                  index:
                    type: boolean
                  key:
                    type: string
                  value:
                    type: string
                type: object
              type: array
            type:
              type: string
          type: object
        type: array
      log:
        description: Log contains the log information from message or handler execution.
        type: string
      msg_responses:
        description: |-
          msg_responses contains the Msg handler responses type packed in Anys.

          Since: cosmos-sdk 0.46
        items:
          properties:
            type_url:
              type: string
            value:
              format: byte
              type: string
          type: object
        type: array
    type: object
  cosmos.base.abci.v1beta1.StringEvent:
    description: |-
      StringEvent defines en Event object wrapper where all the attributes
      contain key/value pairs that are strings instead of raw bytes.
    properties:
      attributes:
        items:
          description: |-
            Attribute defines an attribute wrapper where the key and value are
            strings instead of raw bytes.
          properties:
            key:
              type: string
            value:
              type: string
          type: object
        type: array
      type:
        type: string
    type: object
  cosmos.base.abci.v1beta1.TxResponse:
    description: >-
      TxResponse defines a structure containing relevant tx data and metadata.
      The

      tags are stringified and the log is JSON decoded.
    properties:
      code:
        description: Response code.
        format: int64
        type: integer
      codespace:
        title: Namespace for the Code
        type: string
      data:
        description: Result bytes, if any.
        type: string
      events:
        description: >-
          Events defines all the events emitted by processing a transaction.
          Note,

          these events include those emitted by processing all the messages and
          those

          emitted from the ante. Whereas Logs contains the events, with

          additional metadata, emitted only by processing the messages.


          Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
        items:
          description: >-
            Event allows application developers to attach additional information
            to

            ResponseFinalizeBlock and ResponseCheckTx.

            Later, transactions may be queried using these events.
          properties:
            attributes:
              items:
                description: >-
                  EventAttribute is a single key-value pair, associated with an
                  event.
                properties:
                  index:
                    type: boolean
                  key:
                    type: string
                  value:
                    type: string
                type: object
              type: array
            type:
              type: string
          type: object
        type: array
      gas_used:
        description: Amount of gas consumed by transaction.
        format: int64
        type: string
      gas_wanted:
        description: Amount of gas requested for transaction.
        format: int64
        type: string
      height:
        format: int64
        title: The block height
        type: string
      info:
        description: Additional information. May be non-deterministic.
        type: string
      logs:
        description: >-
          The output of the application's logger (typed). May be
          non-deterministic.
        items:
          description: >-
            ABCIMessageLog defines a structure containing an indexed tx ABCI
            message log.
          properties:
            events:
              description: >-
                Events contains a slice of Event objects that were emitted
                during some

                execution.
              items:
                description: >-
                  StringEvent defines en Event object wrapper where all the
                  attributes

                  contain key/value pairs that are strings instead of raw bytes.
                properties:
                  attributes:
                    items:
                      description: >-
                        Attribute defines an attribute wrapper where the key and
                        value are

                        strings instead of raw bytes.
                      properties:
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  type:
                    type: string
                type: object
              type: array
            log:
              type: string
            msg_index:
              format: int64
              type: integer
          type: object
        type: array
      raw_log:
        description: |-
          The output of the application's logger (raw string). May be
          non-deterministic.
        type: string
      timestamp:
        description: >-
          Time of the previous block. For heights > 1, it's the weighted median
          of

          the timestamps of the valid votes in the block.LastCommit. For height
          == 1,

          it's genesis time.
        type: string
      tx:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
        description: The request transaction bytes.
      txhash:
        description: The transaction hash.
        type: string
    type: object
  cosmos.base.node.v1beta1.ConfigResponse:
    description: ConfigResponse defines the response structure for the Config gRPC query.
    properties:
      halt_height:
        format: uint64
        type: string
      minimum_gas_price:
        type: string
      pruning_interval:
        type: string
      pruning_keep_recent:
        type: string
    type: object
  cosmos.base.node.v1beta1.StatusResponse:
    description: StateResponse defines the response structure for the status of a node.
    properties:
      app_hash:
        format: byte
        type: string
      earliest_store_height:
        format: uint64
        type: string
      height:
        format: uint64
        type: string
      timestamp:
        format: date-time
        type: string
      validator_hash:
        format: byte
        type: string
    type: object
  cosmos.base.query.v1beta1.PageRequest:
    description: |-
      message SomeRequest {
               Foo some_parameter = 1;
               PageRequest pagination = 2;
       }
    properties:
      count_total:
        description: >-
          count_total is set to true  to indicate that the result set should
          include

          a count of the total number of items available for pagination in UIs.

          count_total is only respected when offset is used. It is ignored when
          key

          is set.
        type: boolean
      key:
        description: |-
          key is a value returned in PageResponse.next_key to begin
          querying the next page most efficiently. Only one of offset or key
          should be set.
        format: byte
        type: string
      limit:
        description: >-
          limit is the total number of results to be returned in the result
          page.

          If left empty it will default to a value to be set by each app.
        format: uint64
        type: string
      offset:
        description: |-
          offset is a numeric offset that can be used when key is unavailable.
          It is less efficient than using key. Only one of offset or key should
          be set.
        format: uint64
        type: string
      reverse:
        description: >-
          reverse is set to true if results are to be returned in the descending
          order.


          Since: cosmos-sdk 0.43
        type: boolean
    title: |-
      PageRequest is to be embedded in gRPC request messages for efficient
      pagination. Ex:
    type: object
  cosmos.base.query.v1beta1.PageResponse:
    description: |-
      PageResponse is to be embedded in gRPC response messages where the
      corresponding request message has used PageRequest.

       message SomeResponse {
               repeated Bar results = 1;
               PageResponse page = 2;
       }
    properties:
      next_key:
        description: |-
          next_key is the key to be passed to PageRequest.key to
          query the next page most efficiently. It will be empty if
          there are no more results.
        format: byte
        type: string
      total:
        format: uint64
        title: |-
          total is total number of results available if PageRequest.count_total
          was set, its value is undefined otherwise
        type: string
    type: object
  cosmos.base.tendermint.v1beta1.ABCIQueryResponse:
    description: >-
      ABCIQueryResponse defines the response structure for the ABCIQuery gRPC
      query.


      Note: This type is a duplicate of the ResponseQuery proto type defined in

      Tendermint.
    properties:
      code:
        format: int64
        type: integer
      codespace:
        type: string
      height:
        format: int64
        type: string
      index:
        format: int64
        type: string
      info:
        type: string
      key:
        format: byte
        type: string
      log:
        type: string
      proof_ops:
        description: >-
          ProofOps is Merkle proof defined by the list of ProofOps.


          Note: This type is a duplicate of the ProofOps proto type defined in
          Tendermint.
        properties:
          ops:
            items:
              description: >-
                ProofOp defines an operation used for calculating Merkle root.
                The data could

                be arbitrary format, providing necessary data for example
                neighbouring node

                hash.


                Note: This type is a duplicate of the ProofOp proto type defined
                in Tendermint.
              properties:
                data:
                  format: byte
                  type: string
                key:
                  format: byte
                  type: string
                type:
                  type: string
              type: object
            type: array
        type: object
      value:
        format: byte
        type: string
    type: object
  cosmos.base.tendermint.v1beta1.Block:
    description: |-
      Block is tendermint type Block, with the Header proposer address
      field converted to bech32 string.
    properties:
      data:
        properties:
          txs:
            description: >-
              Txs that will be applied by state @ block.Height+1.

              NOTE: not all txs here are valid.  We're just agreeing on the
              order first.

              This means that block.AppHash does not include these txs.
            items:
              format: byte
              type: string
            type: array
        title: Data contains the set of transactions included in the block
        type: object
      evidence:
        properties:
          evidence:
            items:
              properties:
                duplicate_vote_evidence:
                  description: >-
                    DuplicateVoteEvidence contains evidence of a validator
                    signed two conflicting votes.
                  properties:
                    timestamp:
                      format: date-time
                      type: string
                    total_voting_power:
                      format: int64
                      type: string
                    validator_power:
                      format: int64
                      type: string
                    vote_a:
                      description: >-
                        Vote represents a prevote or precommit vote from
                        validators for

                        consensus.
                      properties:
                        block_id:
                          properties:
                            hash:
                              format: byte
                              type: string
                            part_set_header:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                total:
                                  format: int64
                                  type: integer
                              title: PartsetHeader
                              type: object
                          title: BlockID
                          type: object
                        extension:
                          description: >-
                            Vote extension provided by the application. Only
                            valid for precommit

                            messages.
                          format: byte
                          type: string
                        extension_signature:
                          description: >-
                            Vote extension signature by the validator if they
                            participated in

                            consensus for the associated block.

                            Only valid for precommit messages.
                          format: byte
                          type: string
                        height:
                          format: int64
                          type: string
                        round:
                          format: int32
                          type: integer
                        signature:
                          description: >-
                            Vote signature by the validator if they participated
                            in consensus for the

                            associated block.
                          format: byte
                          type: string
                        timestamp:
                          format: date-time
                          type: string
                        type:
                          default: SIGNED_MSG_TYPE_UNKNOWN
                          description: >-
                            SignedMsgType is a type of signed message in the
                            consensus.

                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                          enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                          type: string
                        validator_address:
                          format: byte
                          type: string
                        validator_index:
                          format: int32
                          type: integer
                      type: object
                    vote_b:
                      description: >-
                        Vote represents a prevote or precommit vote from
                        validators for

                        consensus.
                      properties:
                        block_id:
                          properties:
                            hash:
                              format: byte
                              type: string
                            part_set_header:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                total:
                                  format: int64
                                  type: integer
                              title: PartsetHeader
                              type: object
                          title: BlockID
                          type: object
                        extension:
                          description: >-
                            Vote extension provided by the application. Only
                            valid for precommit

                            messages.
                          format: byte
                          type: string
                        extension_signature:
                          description: >-
                            Vote extension signature by the validator if they
                            participated in

                            consensus for the associated block.

                            Only valid for precommit messages.
                          format: byte
                          type: string
                        height:
                          format: int64
                          type: string
                        round:
                          format: int32
                          type: integer
                        signature:
                          description: >-
                            Vote signature by the validator if they participated
                            in consensus for the

                            associated block.
                          format: byte
                          type: string
                        timestamp:
                          format: date-time
                          type: string
                        type:
                          default: SIGNED_MSG_TYPE_UNKNOWN
                          description: >-
                            SignedMsgType is a type of signed message in the
                            consensus.

                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                          enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                          type: string
                        validator_address:
                          format: byte
                          type: string
                        validator_index:
                          format: int32
                          type: integer
                      type: object
                  type: object
                light_client_attack_evidence:
                  description: >-
                    LightClientAttackEvidence contains evidence of a set of
                    validators attempting to mislead a light client.
                  properties:
                    byzantine_validators:
                      items:
                        properties:
                          address:
                            format: byte
                            type: string
                          proposer_priority:
                            format: int64
                            type: string
                          pub_key:
                            properties:
                              ed25519:
                                format: byte
                                type: string
                              secp256k1:
                                format: byte
                                type: string
                            title: >-
                              PublicKey defines the keys available for use with
                              Validators
                            type: object
                          voting_power:
                            format: int64
                            type: string
                        type: object
                      type: array
                    common_height:
                      format: int64
                      type: string
                    conflicting_block:
                      properties:
                        signed_header:
                          properties:
                            commit:
                              description: >-
                                Commit contains the evidence that a block was
                                committed by a set of validators.
                              properties:
                                block_id:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    part_set_header:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        total:
                                          format: int64
                                          type: integer
                                      title: PartsetHeader
                                      type: object
                                  title: BlockID
                                  type: object
                                height:
                                  format: int64
                                  type: string
                                round:
                                  format: int32
                                  type: integer
                                signatures:
                                  items:
                                    description: >-
                                      CommitSig is a part of the Vote included
                                      in a Commit.
                                    properties:
                                      block_id_flag:
                                        default: BLOCK_ID_FLAG_UNKNOWN
                                        enum:
                                          - BLOCK_ID_FLAG_UNKNOWN
                                          - BLOCK_ID_FLAG_ABSENT
                                          - BLOCK_ID_FLAG_COMMIT
                                          - BLOCK_ID_FLAG_NIL
                                        title: >-
                                          BlockIdFlag indicates which BlockID the
                                          signature is for
                                        type: string
                                      signature:
                                        format: byte
                                        type: string
                                      timestamp:
                                        format: date-time
                                        type: string
                                      validator_address:
                                        format: byte
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            header:
                              description: Header defines the structure of a block header.
                              properties:
                                app_hash:
                                  format: byte
                                  type: string
                                chain_id:
                                  type: string
                                consensus_hash:
                                  format: byte
                                  type: string
                                data_hash:
                                  format: byte
                                  type: string
                                evidence_hash:
                                  format: byte
                                  title: consensus info
                                  type: string
                                height:
                                  format: int64
                                  type: string
                                last_block_id:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    part_set_header:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        total:
                                          format: int64
                                          type: integer
                                      title: PartsetHeader
                                      type: object
                                  title: BlockID
                                  type: object
                                last_commit_hash:
                                  format: byte
                                  title: hashes of block data
                                  type: string
                                last_results_hash:
                                  format: byte
                                  type: string
                                next_validators_hash:
                                  format: byte
                                  type: string
                                proposer_address:
                                  format: byte
                                  type: string
                                time:
                                  format: date-time
                                  type: string
                                validators_hash:
                                  format: byte
                                  title: >-
                                    hashes from the app output from the prev
                                    block
                                  type: string
                                version:
                                  title: basic block info
                                  description: >-
                                    Consensus captures the consensus rules for
                                    processing a block in the blockchain,

                                    including all blockchain data structures and
                                    the rules of the application's

                                    state transition machine.
                                  properties:
                                    app:
                                      format: uint64
                                      type: string
                                    block:
                                      format: uint64
                                      type: string
                                  type: object
                              type: object
                          type: object
                        validator_set:
                          properties:
                            proposer:
                              properties:
                                address:
                                  format: byte
                                  type: string
                                proposer_priority:
                                  format: int64
                                  type: string
                                pub_key:
                                  properties:
                                    ed25519:
                                      format: byte
                                      type: string
                                    secp256k1:
                                      format: byte
                                      type: string
                                  title: >-
                                    PublicKey defines the keys available for use
                                    with Validators
                                  type: object
                                voting_power:
                                  format: int64
                                  type: string
                              type: object
                            total_voting_power:
                              format: int64
                              type: string
                            validators:
                              items:
                                properties:
                                  address:
                                    format: byte
                                    type: string
                                  proposer_priority:
                                    format: int64
                                    type: string
                                  pub_key:
                                    properties:
                                      ed25519:
                                        format: byte
                                        type: string
                                      secp256k1:
                                        format: byte
                                        type: string
                                    title: >-
                                      PublicKey defines the keys available for
                                      use with Validators
                                    type: object
                                  voting_power:
                                    format: int64
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                    timestamp:
                      format: date-time
                      type: string
                    total_voting_power:
                      format: int64
                      type: string
                  type: object
              type: object
            type: array
        type: object
      header:
        description: Header defines the structure of a Tendermint block header.
        properties:
          app_hash:
            format: byte
            type: string
          chain_id:
            type: string
          consensus_hash:
            format: byte
            type: string
          data_hash:
            format: byte
            type: string
          evidence_hash:
            format: byte
            title: consensus info
            type: string
          height:
            format: int64
            type: string
          last_block_id:
            properties:
              hash:
                format: byte
                type: string
              part_set_header:
                properties:
                  hash:
                    format: byte
                    type: string
                  total:
                    format: int64
                    type: integer
                title: PartsetHeader
                type: object
            title: BlockID
            type: object
          last_commit_hash:
            format: byte
            title: hashes of block data
            type: string
          last_results_hash:
            format: byte
            type: string
          next_validators_hash:
            format: byte
            type: string
          proposer_address:
            description: >-
              proposer_address is the original block proposer address, formatted
              as a Bech32 string.

              In Tendermint, this type is `bytes`, but in the SDK, we convert it
              to a Bech32 string

              for better UX.
            type: string
          time:
            format: date-time
            type: string
          validators_hash:
            format: byte
            title: hashes from the app output from the prev block
            type: string
          version:
            title: basic block info
            description: >-
              Consensus captures the consensus rules for processing a block in
              the blockchain,

              including all blockchain data structures and the rules of the
              application's

              state transition machine.
            properties:
              app:
                format: uint64
                type: string
              block:
                format: uint64
                type: string
            type: object
        type: object
      last_commit:
        description: >-
          Commit contains the evidence that a block was committed by a set of
          validators.
        properties:
          block_id:
            properties:
              hash:
                format: byte
                type: string
              part_set_header:
                properties:
                  hash:
                    format: byte
                    type: string
                  total:
                    format: int64
                    type: integer
                title: PartsetHeader
                type: object
            title: BlockID
            type: object
          height:
            format: int64
            type: string
          round:
            format: int32
            type: integer
          signatures:
            items:
              description: CommitSig is a part of the Vote included in a Commit.
              properties:
                block_id_flag:
                  default: BLOCK_ID_FLAG_UNKNOWN
                  enum:
                    - BLOCK_ID_FLAG_UNKNOWN
                    - BLOCK_ID_FLAG_ABSENT
                    - BLOCK_ID_FLAG_COMMIT
                    - BLOCK_ID_FLAG_NIL
                  title: BlockIdFlag indicates which BlockID the signature is for
                  type: string
                signature:
                  format: byte
                  type: string
                timestamp:
                  format: date-time
                  type: string
                validator_address:
                  format: byte
                  type: string
              type: object
            type: array
        type: object
    type: object
  cosmos.base.tendermint.v1beta1.GetBlockByHeightResponse:
    description: >-
      GetBlockByHeightResponse is the response type for the
      Query/GetBlockByHeight RPC method.
    properties:
      block:
        title: 'Deprecated: please use `sdk_block` instead'
        properties:
          data:
            properties:
              txs:
                description: >-
                  Txs that will be applied by state @ block.Height+1.

                  NOTE: not all txs here are valid.  We're just agreeing on the
                  order first.

                  This means that block.AppHash does not include these txs.
                items:
                  format: byte
                  type: string
                type: array
            title: Data contains the set of transactions included in the block
            type: object
          evidence:
            properties:
              evidence:
                items:
                  properties:
                    duplicate_vote_evidence:
                      description: >-
                        DuplicateVoteEvidence contains evidence of a validator
                        signed two conflicting votes.
                      properties:
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                        validator_power:
                          format: int64
                          type: string
                        vote_a:
                          description: >-
                            Vote represents a prevote or precommit vote from
                            validators for

                            consensus.
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: >-
                                Vote extension provided by the application. Only
                                valid for precommit

                                messages.
                              format: byte
                              type: string
                            extension_signature:
                              description: >-
                                Vote extension signature by the validator if
                                they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: >-
                                Vote signature by the validator if they
                                participated in consensus for the

                                associated block.
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: >-
                                SignedMsgType is a type of signed message in the
                                consensus.

                                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                              enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                        vote_b:
                          description: >-
                            Vote represents a prevote or precommit vote from
                            validators for

                            consensus.
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: >-
                                Vote extension provided by the application. Only
                                valid for precommit

                                messages.
                              format: byte
                              type: string
                            extension_signature:
                              description: >-
                                Vote extension signature by the validator if
                                they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: >-
                                Vote signature by the validator if they
                                participated in consensus for the

                                associated block.
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: >-
                                SignedMsgType is a type of signed message in the
                                consensus.

                                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                              enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                      type: object
                    light_client_attack_evidence:
                      description: >-
                        LightClientAttackEvidence contains evidence of a set of
                        validators attempting to mislead a light client.
                      properties:
                        byzantine_validators:
                          items:
                            properties:
                              address:
                                format: byte
                                type: string
                              proposer_priority:
                                format: int64
                                type: string
                              pub_key:
                                properties:
                                  ed25519:
                                    format: byte
                                    type: string
                                  secp256k1:
                                    format: byte
                                    type: string
                                title: >-
                                  PublicKey defines the keys available for use
                                  with Validators
                                type: object
                              voting_power:
                                format: int64
                                type: string
                            type: object
                          type: array
                        common_height:
                          format: int64
                          type: string
                        conflicting_block:
                          properties:
                            signed_header:
                              properties:
                                commit:
                                  description: >-
                                    Commit contains the evidence that a block
                                    was committed by a set of validators.
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signatures:
                                      items:
                                        description: >-
                                          CommitSig is a part of the Vote included
                                          in a Commit.
                                        properties:
                                          block_id_flag:
                                            default: BLOCK_ID_FLAG_UNKNOWN
                                            enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            title: >-
                                              BlockIdFlag indicates which BlockID the
                                              signature is for
                                            type: string
                                          signature:
                                            format: byte
                                            type: string
                                          timestamp:
                                            format: date-time
                                            type: string
                                          validator_address:
                                            format: byte
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                header:
                                  description: >-
                                    Header defines the structure of a block
                                    header.
                                  properties:
                                    app_hash:
                                      format: byte
                                      type: string
                                    chain_id:
                                      type: string
                                    consensus_hash:
                                      format: byte
                                      type: string
                                    data_hash:
                                      format: byte
                                      type: string
                                    evidence_hash:
                                      format: byte
                                      title: consensus info
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    last_block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    last_commit_hash:
                                      format: byte
                                      title: hashes of block data
                                      type: string
                                    last_results_hash:
                                      format: byte
                                      type: string
                                    next_validators_hash:
                                      format: byte
                                      type: string
                                    proposer_address:
                                      format: byte
                                      type: string
                                    time:
                                      format: date-time
                                      type: string
                                    validators_hash:
                                      format: byte
                                      title: >-
                                        hashes from the app output from the prev
                                        block
                                      type: string
                                    version:
                                      title: basic block info
                                      description: >-
                                        Consensus captures the consensus rules
                                        for processing a block in the
                                        blockchain,

                                        including all blockchain data structures
                                        and the rules of the application's

                                        state transition machine.
                                      properties:
                                        app:
                                          format: uint64
                                          type: string
                                        block:
                                          format: uint64
                                          type: string
                                      type: object
                                  type: object
                              type: object
                            validator_set:
                              properties:
                                proposer:
                                  properties:
                                    address:
                                      format: byte
                                      type: string
                                    proposer_priority:
                                      format: int64
                                      type: string
                                    pub_key:
                                      properties:
                                        ed25519:
                                          format: byte
                                          type: string
                                        secp256k1:
                                          format: byte
                                          type: string
                                      title: >-
                                        PublicKey defines the keys available for
                                        use with Validators
                                      type: object
                                    voting_power:
                                      format: int64
                                      type: string
                                  type: object
                                total_voting_power:
                                  format: int64
                                  type: string
                                validators:
                                  items:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: >-
                                          PublicKey defines the keys available for
                                          use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          header:
            description: Header defines the structure of a block header.
            properties:
              app_hash:
                format: byte
                type: string
              chain_id:
                type: string
              consensus_hash:
                format: byte
                type: string
              data_hash:
                format: byte
                type: string
              evidence_hash:
                format: byte
                title: consensus info
                type: string
              height:
                format: int64
                type: string
              last_block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              last_commit_hash:
                format: byte
                title: hashes of block data
                type: string
              last_results_hash:
                format: byte
                type: string
              next_validators_hash:
                format: byte
                type: string
              proposer_address:
                format: byte
                type: string
              time:
                format: date-time
                type: string
              validators_hash:
                format: byte
                title: hashes from the app output from the prev block
                type: string
              version:
                title: basic block info
                description: >-
                  Consensus captures the consensus rules for processing a block
                  in the blockchain,

                  including all blockchain data structures and the rules of the
                  application's

                  state transition machine.
                properties:
                  app:
                    format: uint64
                    type: string
                  block:
                    format: uint64
                    type: string
                type: object
            type: object
          last_commit:
            description: >-
              Commit contains the evidence that a block was committed by a set
              of validators.
            properties:
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              height:
                format: int64
                type: string
              round:
                format: int32
                type: integer
              signatures:
                items:
                  description: CommitSig is a part of the Vote included in a Commit.
                  properties:
                    block_id_flag:
                      default: BLOCK_ID_FLAG_UNKNOWN
                      enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      title: BlockIdFlag indicates which BlockID the signature is for
                      type: string
                    signature:
                      format: byte
                      type: string
                    timestamp:
                      format: date-time
                      type: string
                    validator_address:
                      format: byte
                      type: string
                  type: object
                type: array
            type: object
        type: object
      block_id:
        properties:
          hash:
            format: byte
            type: string
          part_set_header:
            properties:
              hash:
                format: byte
                type: string
              total:
                format: int64
                type: integer
            title: PartsetHeader
            type: object
        title: BlockID
        type: object
      sdk_block:
        title: 'Since: cosmos-sdk 0.47'
        description: |-
          Block is tendermint type Block, with the Header proposer address
          field converted to bech32 string.
        properties:
          data:
            properties:
              txs:
                description: >-
                  Txs that will be applied by state @ block.Height+1.

                  NOTE: not all txs here are valid.  We're just agreeing on the
                  order first.

                  This means that block.AppHash does not include these txs.
                items:
                  format: byte
                  type: string
                type: array
            title: Data contains the set of transactions included in the block
            type: object
          evidence:
            properties:
              evidence:
                items:
                  properties:
                    duplicate_vote_evidence:
                      description: >-
                        DuplicateVoteEvidence contains evidence of a validator
                        signed two conflicting votes.
                      properties:
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                        validator_power:
                          format: int64
                          type: string
                        vote_a:
                          description: >-
                            Vote represents a prevote or precommit vote from
                            validators for

                            consensus.
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: >-
                                Vote extension provided by the application. Only
                                valid for precommit

                                messages.
                              format: byte
                              type: string
                            extension_signature:
                              description: >-
                                Vote extension signature by the validator if
                                they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: >-
                                Vote signature by the validator if they
                                participated in consensus for the

                                associated block.
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: >-
                                SignedMsgType is a type of signed message in the
                                consensus.

                                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                              enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                        vote_b:
                          description: >-
                            Vote represents a prevote or precommit vote from
                            validators for

                            consensus.
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: >-
                                Vote extension provided by the application. Only
                                valid for precommit

                                messages.
                              format: byte
                              type: string
                            extension_signature:
                              description: >-
                                Vote extension signature by the validator if
                                they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: >-
                                Vote signature by the validator if they
                                participated in consensus for the

                                associated block.
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: >-
                                SignedMsgType is a type of signed message in the
                                consensus.

                                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                              enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                      type: object
                    light_client_attack_evidence:
                      description: >-
                        LightClientAttackEvidence contains evidence of a set of
                        validators attempting to mislead a light client.
                      properties:
                        byzantine_validators:
                          items:
                            properties:
                              address:
                                format: byte
                                type: string
                              proposer_priority:
                                format: int64
                                type: string
                              pub_key:
                                properties:
                                  ed25519:
                                    format: byte
                                    type: string
                                  secp256k1:
                                    format: byte
                                    type: string
                                title: >-
                                  PublicKey defines the keys available for use
                                  with Validators
                                type: object
                              voting_power:
                                format: int64
                                type: string
                            type: object
                          type: array
                        common_height:
                          format: int64
                          type: string
                        conflicting_block:
                          properties:
                            signed_header:
                              properties:
                                commit:
                                  description: >-
                                    Commit contains the evidence that a block
                                    was committed by a set of validators.
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signatures:
                                      items:
                                        description: >-
                                          CommitSig is a part of the Vote included
                                          in a Commit.
                                        properties:
                                          block_id_flag:
                                            default: BLOCK_ID_FLAG_UNKNOWN
                                            enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            title: >-
                                              BlockIdFlag indicates which BlockID the
                                              signature is for
                                            type: string
                                          signature:
                                            format: byte
                                            type: string
                                          timestamp:
                                            format: date-time
                                            type: string
                                          validator_address:
                                            format: byte
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                header:
                                  description: >-
                                    Header defines the structure of a block
                                    header.
                                  properties:
                                    app_hash:
                                      format: byte
                                      type: string
                                    chain_id:
                                      type: string
                                    consensus_hash:
                                      format: byte
                                      type: string
                                    data_hash:
                                      format: byte
                                      type: string
                                    evidence_hash:
                                      format: byte
                                      title: consensus info
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    last_block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    last_commit_hash:
                                      format: byte
                                      title: hashes of block data
                                      type: string
                                    last_results_hash:
                                      format: byte
                                      type: string
                                    next_validators_hash:
                                      format: byte
                                      type: string
                                    proposer_address:
                                      format: byte
                                      type: string
                                    time:
                                      format: date-time
                                      type: string
                                    validators_hash:
                                      format: byte
                                      title: >-
                                        hashes from the app output from the prev
                                        block
                                      type: string
                                    version:
                                      title: basic block info
                                      description: >-
                                        Consensus captures the consensus rules
                                        for processing a block in the
                                        blockchain,

                                        including all blockchain data structures
                                        and the rules of the application's

                                        state transition machine.
                                      properties:
                                        app:
                                          format: uint64
                                          type: string
                                        block:
                                          format: uint64
                                          type: string
                                      type: object
                                  type: object
                              type: object
                            validator_set:
                              properties:
                                proposer:
                                  properties:
                                    address:
                                      format: byte
                                      type: string
                                    proposer_priority:
                                      format: int64
                                      type: string
                                    pub_key:
                                      properties:
                                        ed25519:
                                          format: byte
                                          type: string
                                        secp256k1:
                                          format: byte
                                          type: string
                                      title: >-
                                        PublicKey defines the keys available for
                                        use with Validators
                                      type: object
                                    voting_power:
                                      format: int64
                                      type: string
                                  type: object
                                total_voting_power:
                                  format: int64
                                  type: string
                                validators:
                                  items:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: >-
                                          PublicKey defines the keys available for
                                          use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          header:
            description: Header defines the structure of a Tendermint block header.
            properties:
              app_hash:
                format: byte
                type: string
              chain_id:
                type: string
              consensus_hash:
                format: byte
                type: string
              data_hash:
                format: byte
                type: string
              evidence_hash:
                format: byte
                title: consensus info
                type: string
              height:
                format: int64
                type: string
              last_block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              last_commit_hash:
                format: byte
                title: hashes of block data
                type: string
              last_results_hash:
                format: byte
                type: string
              next_validators_hash:
                format: byte
                type: string
              proposer_address:
                description: >-
                  proposer_address is the original block proposer address,
                  formatted as a Bech32 string.

                  In Tendermint, this type is `bytes`, but in the SDK, we
                  convert it to a Bech32 string

                  for better UX.
                type: string
              time:
                format: date-time
                type: string
              validators_hash:
                format: byte
                title: hashes from the app output from the prev block
                type: string
              version:
                title: basic block info
                description: >-
                  Consensus captures the consensus rules for processing a block
                  in the blockchain,

                  including all blockchain data structures and the rules of the
                  application's

                  state transition machine.
                properties:
                  app:
                    format: uint64
                    type: string
                  block:
                    format: uint64
                    type: string
                type: object
            type: object
          last_commit:
            description: >-
              Commit contains the evidence that a block was committed by a set
              of validators.
            properties:
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              height:
                format: int64
                type: string
              round:
                format: int32
                type: integer
              signatures:
                items:
                  description: CommitSig is a part of the Vote included in a Commit.
                  properties:
                    block_id_flag:
                      default: BLOCK_ID_FLAG_UNKNOWN
                      enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      title: BlockIdFlag indicates which BlockID the signature is for
                      type: string
                    signature:
                      format: byte
                      type: string
                    timestamp:
                      format: date-time
                      type: string
                    validator_address:
                      format: byte
                      type: string
                  type: object
                type: array
            type: object
        type: object
    type: object
  cosmos.base.tendermint.v1beta1.GetLatestBlockResponse:
    description: >-
      GetLatestBlockResponse is the response type for the Query/GetLatestBlock
      RPC method.
    properties:
      block:
        title: 'Deprecated: please use `sdk_block` instead'
        properties:
          data:
            properties:
              txs:
                description: >-
                  Txs that will be applied by state @ block.Height+1.

                  NOTE: not all txs here are valid.  We're just agreeing on the
                  order first.

                  This means that block.AppHash does not include these txs.
                items:
                  format: byte
                  type: string
                type: array
            title: Data contains the set of transactions included in the block
            type: object
          evidence:
            properties:
              evidence:
                items:
                  properties:
                    duplicate_vote_evidence:
                      description: >-
                        DuplicateVoteEvidence contains evidence of a validator
                        signed two conflicting votes.
                      properties:
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                        validator_power:
                          format: int64
                          type: string
                        vote_a:
                          description: >-
                            Vote represents a prevote or precommit vote from
                            validators for

                            consensus.
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: >-
                                Vote extension provided by the application. Only
                                valid for precommit

                                messages.
                              format: byte
                              type: string
                            extension_signature:
                              description: >-
                                Vote extension signature by the validator if
                                they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: >-
                                Vote signature by the validator if they
                                participated in consensus for the

                                associated block.
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: >-
                                SignedMsgType is a type of signed message in the
                                consensus.

                                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                              enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                        vote_b:
                          description: >-
                            Vote represents a prevote or precommit vote from
                            validators for

                            consensus.
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: >-
                                Vote extension provided by the application. Only
                                valid for precommit

                                messages.
                              format: byte
                              type: string
                            extension_signature:
                              description: >-
                                Vote extension signature by the validator if
                                they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: >-
                                Vote signature by the validator if they
                                participated in consensus for the

                                associated block.
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: >-
                                SignedMsgType is a type of signed message in the
                                consensus.

                                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                              enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                      type: object
                    light_client_attack_evidence:
                      description: >-
                        LightClientAttackEvidence contains evidence of a set of
                        validators attempting to mislead a light client.
                      properties:
                        byzantine_validators:
                          items:
                            properties:
                              address:
                                format: byte
                                type: string
                              proposer_priority:
                                format: int64
                                type: string
                              pub_key:
                                properties:
                                  ed25519:
                                    format: byte
                                    type: string
                                  secp256k1:
                                    format: byte
                                    type: string
                                title: >-
                                  PublicKey defines the keys available for use
                                  with Validators
                                type: object
                              voting_power:
                                format: int64
                                type: string
                            type: object
                          type: array
                        common_height:
                          format: int64
                          type: string
                        conflicting_block:
                          properties:
                            signed_header:
                              properties:
                                commit:
                                  description: >-
                                    Commit contains the evidence that a block
                                    was committed by a set of validators.
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signatures:
                                      items:
                                        description: >-
                                          CommitSig is a part of the Vote included
                                          in a Commit.
                                        properties:
                                          block_id_flag:
                                            default: BLOCK_ID_FLAG_UNKNOWN
                                            enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            title: >-
                                              BlockIdFlag indicates which BlockID the
                                              signature is for
                                            type: string
                                          signature:
                                            format: byte
                                            type: string
                                          timestamp:
                                            format: date-time
                                            type: string
                                          validator_address:
                                            format: byte
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                header:
                                  description: >-
                                    Header defines the structure of a block
                                    header.
                                  properties:
                                    app_hash:
                                      format: byte
                                      type: string
                                    chain_id:
                                      type: string
                                    consensus_hash:
                                      format: byte
                                      type: string
                                    data_hash:
                                      format: byte
                                      type: string
                                    evidence_hash:
                                      format: byte
                                      title: consensus info
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    last_block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    last_commit_hash:
                                      format: byte
                                      title: hashes of block data
                                      type: string
                                    last_results_hash:
                                      format: byte
                                      type: string
                                    next_validators_hash:
                                      format: byte
                                      type: string
                                    proposer_address:
                                      format: byte
                                      type: string
                                    time:
                                      format: date-time
                                      type: string
                                    validators_hash:
                                      format: byte
                                      title: >-
                                        hashes from the app output from the prev
                                        block
                                      type: string
                                    version:
                                      title: basic block info
                                      description: >-
                                        Consensus captures the consensus rules
                                        for processing a block in the
                                        blockchain,

                                        including all blockchain data structures
                                        and the rules of the application's

                                        state transition machine.
                                      properties:
                                        app:
                                          format: uint64
                                          type: string
                                        block:
                                          format: uint64
                                          type: string
                                      type: object
                                  type: object
                              type: object
                            validator_set:
                              properties:
                                proposer:
                                  properties:
                                    address:
                                      format: byte
                                      type: string
                                    proposer_priority:
                                      format: int64
                                      type: string
                                    pub_key:
                                      properties:
                                        ed25519:
                                          format: byte
                                          type: string
                                        secp256k1:
                                          format: byte
                                          type: string
                                      title: >-
                                        PublicKey defines the keys available for
                                        use with Validators
                                      type: object
                                    voting_power:
                                      format: int64
                                      type: string
                                  type: object
                                total_voting_power:
                                  format: int64
                                  type: string
                                validators:
                                  items:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: >-
                                          PublicKey defines the keys available for
                                          use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          header:
            description: Header defines the structure of a block header.
            properties:
              app_hash:
                format: byte
                type: string
              chain_id:
                type: string
              consensus_hash:
                format: byte
                type: string
              data_hash:
                format: byte
                type: string
              evidence_hash:
                format: byte
                title: consensus info
                type: string
              height:
                format: int64
                type: string
              last_block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              last_commit_hash:
                format: byte
                title: hashes of block data
                type: string
              last_results_hash:
                format: byte
                type: string
              next_validators_hash:
                format: byte
                type: string
              proposer_address:
                format: byte
                type: string
              time:
                format: date-time
                type: string
              validators_hash:
                format: byte
                title: hashes from the app output from the prev block
                type: string
              version:
                title: basic block info
                description: >-
                  Consensus captures the consensus rules for processing a block
                  in the blockchain,

                  including all blockchain data structures and the rules of the
                  application's

                  state transition machine.
                properties:
                  app:
                    format: uint64
                    type: string
                  block:
                    format: uint64
                    type: string
                type: object
            type: object
          last_commit:
            description: >-
              Commit contains the evidence that a block was committed by a set
              of validators.
            properties:
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              height:
                format: int64
                type: string
              round:
                format: int32
                type: integer
              signatures:
                items:
                  description: CommitSig is a part of the Vote included in a Commit.
                  properties:
                    block_id_flag:
                      default: BLOCK_ID_FLAG_UNKNOWN
                      enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      title: BlockIdFlag indicates which BlockID the signature is for
                      type: string
                    signature:
                      format: byte
                      type: string
                    timestamp:
                      format: date-time
                      type: string
                    validator_address:
                      format: byte
                      type: string
                  type: object
                type: array
            type: object
        type: object
      block_id:
        properties:
          hash:
            format: byte
            type: string
          part_set_header:
            properties:
              hash:
                format: byte
                type: string
              total:
                format: int64
                type: integer
            title: PartsetHeader
            type: object
        title: BlockID
        type: object
      sdk_block:
        title: 'Since: cosmos-sdk 0.47'
        description: |-
          Block is tendermint type Block, with the Header proposer address
          field converted to bech32 string.
        properties:
          data:
            properties:
              txs:
                description: >-
                  Txs that will be applied by state @ block.Height+1.

                  NOTE: not all txs here are valid.  We're just agreeing on the
                  order first.

                  This means that block.AppHash does not include these txs.
                items:
                  format: byte
                  type: string
                type: array
            title: Data contains the set of transactions included in the block
            type: object
          evidence:
            properties:
              evidence:
                items:
                  properties:
                    duplicate_vote_evidence:
                      description: >-
                        DuplicateVoteEvidence contains evidence of a validator
                        signed two conflicting votes.
                      properties:
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                        validator_power:
                          format: int64
                          type: string
                        vote_a:
                          description: >-
                            Vote represents a prevote or precommit vote from
                            validators for

                            consensus.
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: >-
                                Vote extension provided by the application. Only
                                valid for precommit

                                messages.
                              format: byte
                              type: string
                            extension_signature:
                              description: >-
                                Vote extension signature by the validator if
                                they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: >-
                                Vote signature by the validator if they
                                participated in consensus for the

                                associated block.
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: >-
                                SignedMsgType is a type of signed message in the
                                consensus.

                                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                              enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                        vote_b:
                          description: >-
                            Vote represents a prevote or precommit vote from
                            validators for

                            consensus.
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: >-
                                Vote extension provided by the application. Only
                                valid for precommit

                                messages.
                              format: byte
                              type: string
                            extension_signature:
                              description: >-
                                Vote extension signature by the validator if
                                they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: >-
                                Vote signature by the validator if they
                                participated in consensus for the

                                associated block.
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: >-
                                SignedMsgType is a type of signed message in the
                                consensus.

                                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                              enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                      type: object
                    light_client_attack_evidence:
                      description: >-
                        LightClientAttackEvidence contains evidence of a set of
                        validators attempting to mislead a light client.
                      properties:
                        byzantine_validators:
                          items:
                            properties:
                              address:
                                format: byte
                                type: string
                              proposer_priority:
                                format: int64
                                type: string
                              pub_key:
                                properties:
                                  ed25519:
                                    format: byte
                                    type: string
                                  secp256k1:
                                    format: byte
                                    type: string
                                title: >-
                                  PublicKey defines the keys available for use
                                  with Validators
                                type: object
                              voting_power:
                                format: int64
                                type: string
                            type: object
                          type: array
                        common_height:
                          format: int64
                          type: string
                        conflicting_block:
                          properties:
                            signed_header:
                              properties:
                                commit:
                                  description: >-
                                    Commit contains the evidence that a block
                                    was committed by a set of validators.
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signatures:
                                      items:
                                        description: >-
                                          CommitSig is a part of the Vote included
                                          in a Commit.
                                        properties:
                                          block_id_flag:
                                            default: BLOCK_ID_FLAG_UNKNOWN
                                            enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            title: >-
                                              BlockIdFlag indicates which BlockID the
                                              signature is for
                                            type: string
                                          signature:
                                            format: byte
                                            type: string
                                          timestamp:
                                            format: date-time
                                            type: string
                                          validator_address:
                                            format: byte
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                header:
                                  description: >-
                                    Header defines the structure of a block
                                    header.
                                  properties:
                                    app_hash:
                                      format: byte
                                      type: string
                                    chain_id:
                                      type: string
                                    consensus_hash:
                                      format: byte
                                      type: string
                                    data_hash:
                                      format: byte
                                      type: string
                                    evidence_hash:
                                      format: byte
                                      title: consensus info
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    last_block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    last_commit_hash:
                                      format: byte
                                      title: hashes of block data
                                      type: string
                                    last_results_hash:
                                      format: byte
                                      type: string
                                    next_validators_hash:
                                      format: byte
                                      type: string
                                    proposer_address:
                                      format: byte
                                      type: string
                                    time:
                                      format: date-time
                                      type: string
                                    validators_hash:
                                      format: byte
                                      title: >-
                                        hashes from the app output from the prev
                                        block
                                      type: string
                                    version:
                                      title: basic block info
                                      description: >-
                                        Consensus captures the consensus rules
                                        for processing a block in the
                                        blockchain,

                                        including all blockchain data structures
                                        and the rules of the application's

                                        state transition machine.
                                      properties:
                                        app:
                                          format: uint64
                                          type: string
                                        block:
                                          format: uint64
                                          type: string
                                      type: object
                                  type: object
                              type: object
                            validator_set:
                              properties:
                                proposer:
                                  properties:
                                    address:
                                      format: byte
                                      type: string
                                    proposer_priority:
                                      format: int64
                                      type: string
                                    pub_key:
                                      properties:
                                        ed25519:
                                          format: byte
                                          type: string
                                        secp256k1:
                                          format: byte
                                          type: string
                                      title: >-
                                        PublicKey defines the keys available for
                                        use with Validators
                                      type: object
                                    voting_power:
                                      format: int64
                                      type: string
                                  type: object
                                total_voting_power:
                                  format: int64
                                  type: string
                                validators:
                                  items:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: >-
                                          PublicKey defines the keys available for
                                          use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          header:
            description: Header defines the structure of a Tendermint block header.
            properties:
              app_hash:
                format: byte
                type: string
              chain_id:
                type: string
              consensus_hash:
                format: byte
                type: string
              data_hash:
                format: byte
                type: string
              evidence_hash:
                format: byte
                title: consensus info
                type: string
              height:
                format: int64
                type: string
              last_block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              last_commit_hash:
                format: byte
                title: hashes of block data
                type: string
              last_results_hash:
                format: byte
                type: string
              next_validators_hash:
                format: byte
                type: string
              proposer_address:
                description: >-
                  proposer_address is the original block proposer address,
                  formatted as a Bech32 string.

                  In Tendermint, this type is `bytes`, but in the SDK, we
                  convert it to a Bech32 string

                  for better UX.
                type: string
              time:
                format: date-time
                type: string
              validators_hash:
                format: byte
                title: hashes from the app output from the prev block
                type: string
              version:
                title: basic block info
                description: >-
                  Consensus captures the consensus rules for processing a block
                  in the blockchain,

                  including all blockchain data structures and the rules of the
                  application's

                  state transition machine.
                properties:
                  app:
                    format: uint64
                    type: string
                  block:
                    format: uint64
                    type: string
                type: object
            type: object
          last_commit:
            description: >-
              Commit contains the evidence that a block was committed by a set
              of validators.
            properties:
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              height:
                format: int64
                type: string
              round:
                format: int32
                type: integer
              signatures:
                items:
                  description: CommitSig is a part of the Vote included in a Commit.
                  properties:
                    block_id_flag:
                      default: BLOCK_ID_FLAG_UNKNOWN
                      enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      title: BlockIdFlag indicates which BlockID the signature is for
                      type: string
                    signature:
                      format: byte
                      type: string
                    timestamp:
                      format: date-time
                      type: string
                    validator_address:
                      format: byte
                      type: string
                  type: object
                type: array
            type: object
        type: object
    type: object
  cosmos.base.tendermint.v1beta1.GetLatestValidatorSetResponse:
    description: >-
      GetLatestValidatorSetResponse is the response type for the
      Query/GetValidatorSetByHeight RPC method.
    properties:
      block_height:
        format: int64
        type: string
      pagination:
        description: pagination defines an pagination for the response.
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
      validators:
        items:
          description: Validator is the type for the validator-set.
          properties:
            address:
              type: string
            proposer_priority:
              format: int64
              type: string
            pub_key:
              properties:
                type_url:
                  type: string
                value:
                  format: byte
                  type: string
              type: object
            voting_power:
              format: int64
              type: string
          type: object
        type: array
    type: object
  cosmos.base.tendermint.v1beta1.GetNodeInfoResponse:
    description: >-
      GetNodeInfoResponse is the response type for the Query/GetNodeInfo RPC
      method.
    properties:
      application_version:
        description: VersionInfo is the type for the GetNodeInfoResponse message.
        properties:
          app_name:
            type: string
          build_deps:
            items:
              properties:
                path:
                  title: module path
                  type: string
                sum:
                  title: checksum
                  type: string
                version:
                  title: module version
                  type: string
              title: Module is the type for VersionInfo
              type: object
            type: array
          build_tags:
            type: string
          cosmos_sdk_version:
            title: 'Since: cosmos-sdk 0.43'
            type: string
          git_commit:
            type: string
          go_version:
            type: string
          name:
            type: string
          version:
            type: string
        type: object
      default_node_info:
        properties:
          channels:
            format: byte
            type: string
          default_node_id:
            type: string
          listen_addr:
            type: string
          moniker:
            type: string
          network:
            type: string
          other:
            properties:
              rpc_address:
                type: string
              tx_index:
                type: string
            type: object
          protocol_version:
            properties:
              app:
                format: uint64
                type: string
              block:
                format: uint64
                type: string
              p2p:
                format: uint64
                type: string
            type: object
          version:
            type: string
        type: object
    type: object
  cosmos.base.tendermint.v1beta1.GetSyncingResponse:
    description: >-
      GetSyncingResponse is the response type for the Query/GetSyncing RPC
      method.
    properties:
      syncing:
        type: boolean
    type: object
  cosmos.base.tendermint.v1beta1.GetValidatorSetByHeightResponse:
    description: >-
      GetValidatorSetByHeightResponse is the response type for the
      Query/GetValidatorSetByHeight RPC method.
    properties:
      block_height:
        format: int64
        type: string
      pagination:
        description: pagination defines an pagination for the response.
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
      validators:
        items:
          description: Validator is the type for the validator-set.
          properties:
            address:
              type: string
            proposer_priority:
              format: int64
              type: string
            pub_key:
              properties:
                type_url:
                  type: string
                value:
                  format: byte
                  type: string
              type: object
            voting_power:
              format: int64
              type: string
          type: object
        type: array
    type: object
  cosmos.base.tendermint.v1beta1.Header:
    description: Header defines the structure of a Tendermint block header.
    properties:
      app_hash:
        format: byte
        type: string
      chain_id:
        type: string
      consensus_hash:
        format: byte
        type: string
      data_hash:
        format: byte
        type: string
      evidence_hash:
        format: byte
        title: consensus info
        type: string
      height:
        format: int64
        type: string
      last_block_id:
        properties:
          hash:
            format: byte
            type: string
          part_set_header:
            properties:
              hash:
                format: byte
                type: string
              total:
                format: int64
                type: integer
            title: PartsetHeader
            type: object
        title: BlockID
        type: object
      last_commit_hash:
        format: byte
        title: hashes of block data
        type: string
      last_results_hash:
        format: byte
        type: string
      next_validators_hash:
        format: byte
        type: string
      proposer_address:
        description: >-
          proposer_address is the original block proposer address, formatted as
          a Bech32 string.

          In Tendermint, this type is `bytes`, but in the SDK, we convert it to
          a Bech32 string

          for better UX.
        type: string
      time:
        format: date-time
        type: string
      validators_hash:
        format: byte
        title: hashes from the app output from the prev block
        type: string
      version:
        title: basic block info
        description: >-
          Consensus captures the consensus rules for processing a block in the
          blockchain,

          including all blockchain data structures and the rules of the
          application's

          state transition machine.
        properties:
          app:
            format: uint64
            type: string
          block:
            format: uint64
            type: string
        type: object
    type: object
  cosmos.base.tendermint.v1beta1.Module:
    properties:
      path:
        title: module path
        type: string
      sum:
        title: checksum
        type: string
      version:
        title: module version
        type: string
    title: Module is the type for VersionInfo
    type: object
  cosmos.base.tendermint.v1beta1.ProofOp:
    description: >-
      ProofOp defines an operation used for calculating Merkle root. The data
      could

      be arbitrary format, providing necessary data for example neighbouring
      node

      hash.


      Note: This type is a duplicate of the ProofOp proto type defined in
      Tendermint.
    properties:
      data:
        format: byte
        type: string
      key:
        format: byte
        type: string
      type:
        type: string
    type: object
  cosmos.base.tendermint.v1beta1.ProofOps:
    description: >-
      ProofOps is Merkle proof defined by the list of ProofOps.


      Note: This type is a duplicate of the ProofOps proto type defined in
      Tendermint.
    properties:
      ops:
        items:
          description: >-
            ProofOp defines an operation used for calculating Merkle root. The
            data could

            be arbitrary format, providing necessary data for example
            neighbouring node

            hash.


            Note: This type is a duplicate of the ProofOp proto type defined in
            Tendermint.
          properties:
            data:
              format: byte
              type: string
            key:
              format: byte
              type: string
            type:
              type: string
          type: object
        type: array
    type: object
  cosmos.base.tendermint.v1beta1.Validator:
    description: Validator is the type for the validator-set.
    properties:
      address:
        type: string
      proposer_priority:
        format: int64
        type: string
      pub_key:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
      voting_power:
        format: int64
        type: string
    type: object
  cosmos.base.tendermint.v1beta1.VersionInfo:
    description: VersionInfo is the type for the GetNodeInfoResponse message.
    properties:
      app_name:
        type: string
      build_deps:
        items:
          properties:
            path:
              title: module path
              type: string
            sum:
              title: checksum
              type: string
            version:
              title: module version
              type: string
          title: Module is the type for VersionInfo
          type: object
        type: array
      build_tags:
        type: string
      cosmos_sdk_version:
        title: 'Since: cosmos-sdk 0.43'
        type: string
      git_commit:
        type: string
      go_version:
        type: string
      name:
        type: string
      version:
        type: string
    type: object
  cosmos.base.v1beta1.Coin:
    description: |-
      Coin defines a token with a denomination and an amount.

      NOTE: The amount field is an Int which implements the custom method
      signatures required by gogoproto.
    properties:
      amount:
        type: string
      denom:
        type: string
    type: object
  cosmos.base.v1beta1.DecCoin:
    description: |-
      DecCoin defines a token with a denomination and a decimal amount.

      NOTE: The amount field is an Dec which implements the custom method
      signatures required by gogoproto.
    properties:
      amount:
        type: string
      denom:
        type: string
    type: object
  cosmos.circuit.v1.AccountResponse:
    description: AccountResponse is the response type for the Query/Account RPC method.
    properties:
      permission:
        description: |-
          Permissions are the permissions that an account has to trip
          or reset the circuit breaker.
        properties:
          level:
            description: level is the level of permissions granted to this account.
            default: LEVEL_NONE_UNSPECIFIED
            enum:
              - LEVEL_NONE_UNSPECIFIED
              - LEVEL_SOME_MSGS
              - LEVEL_ALL_MSGS
              - LEVEL_SUPER_ADMIN
            type: string
          limit_type_urls:
            description: >-
              limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of
              Msg type

              URLs that the account can trip. It is an error to use
              limit_type_urls with

              a level other than LEVEL_SOME_MSGS.
            items:
              type: string
            type: array
        type: object
    type: object
  cosmos.circuit.v1.AccountsResponse:
    description: AccountsResponse is the response type for the Query/Accounts RPC method.
    properties:
      accounts:
        items:
          properties:
            address:
              type: string
            permissions:
              description: |-
                Permissions are the permissions that an account has to trip
                or reset the circuit breaker.
              properties:
                level:
                  description: level is the level of permissions granted to this account.
                  default: LEVEL_NONE_UNSPECIFIED
                  enum:
                    - LEVEL_NONE_UNSPECIFIED
                    - LEVEL_SOME_MSGS
                    - LEVEL_ALL_MSGS
                    - LEVEL_SUPER_ADMIN
                  type: string
                limit_type_urls:
                  description: >-
                    limit_type_urls is used with LEVEL_SOME_MSGS to limit the
                    lists of Msg type

                    URLs that the account can trip. It is an error to use
                    limit_type_urls with

                    a level other than LEVEL_SOME_MSGS.
                  items:
                    type: string
                  type: array
              type: object
          title: >-
            GenesisAccountPermissions is the account permissions for the circuit
            breaker in genesis
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  cosmos.circuit.v1.DisabledListResponse:
    description: >-
      DisabledListResponse is the response type for the Query/DisabledList RPC
      method.
    properties:
      disabled_list:
        items:
          type: string
        type: array
    type: object
  cosmos.circuit.v1.GenesisAccountPermissions:
    properties:
      address:
        type: string
      permissions:
        description: |-
          Permissions are the permissions that an account has to trip
          or reset the circuit breaker.
        properties:
          level:
            description: level is the level of permissions granted to this account.
            default: LEVEL_NONE_UNSPECIFIED
            enum:
              - LEVEL_NONE_UNSPECIFIED
              - LEVEL_SOME_MSGS
              - LEVEL_ALL_MSGS
              - LEVEL_SUPER_ADMIN
            type: string
          limit_type_urls:
            description: >-
              limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of
              Msg type

              URLs that the account can trip. It is an error to use
              limit_type_urls with

              a level other than LEVEL_SOME_MSGS.
            items:
              type: string
            type: array
        type: object
    title: >-
      GenesisAccountPermissions is the account permissions for the circuit
      breaker in genesis
    type: object
  cosmos.circuit.v1.Permissions:
    description: |-
      Permissions are the permissions that an account has to trip
      or reset the circuit breaker.
    properties:
      level:
        description: level is the level of permissions granted to this account.
        default: LEVEL_NONE_UNSPECIFIED
        enum:
          - LEVEL_NONE_UNSPECIFIED
          - LEVEL_SOME_MSGS
          - LEVEL_ALL_MSGS
          - LEVEL_SUPER_ADMIN
        type: string
      limit_type_urls:
        description: >-
          limit_type_urls is used with LEVEL_SOME_MSGS to limit the lists of Msg
          type

          URLs that the account can trip. It is an error to use limit_type_urls
          with

          a level other than LEVEL_SOME_MSGS.
        items:
          type: string
        type: array
    type: object
  cosmos.circuit.v1.Permissions.Level:
    default: LEVEL_NONE_UNSPECIFIED
    description: |-
      Level is the permission level.

       - LEVEL_NONE_UNSPECIFIED: LEVEL_NONE_UNSPECIFIED indicates that the account will have no circuit
      breaker permissions.
       - LEVEL_SOME_MSGS: LEVEL_SOME_MSGS indicates that the account will have permission to
      trip or reset the circuit breaker for some Msg type URLs. If this level
      is chosen, a non-empty list of Msg type URLs must be provided in
      limit_type_urls.
       - LEVEL_ALL_MSGS: LEVEL_ALL_MSGS indicates that the account can trip or reset the circuit
      breaker for Msg's of all type URLs.
       - LEVEL_SUPER_ADMIN: LEVEL_SUPER_ADMIN indicates that the account can take all circuit breaker
      actions and can grant permissions to other accounts.
    enum:
      - LEVEL_NONE_UNSPECIFIED
      - LEVEL_SOME_MSGS
      - LEVEL_ALL_MSGS
      - LEVEL_SUPER_ADMIN
    type: string
  cosmos.consensus.v1.QueryParamsResponse:
    description: >-
      QueryParamsResponse defines the response type for querying x/consensus
      parameters.
    properties:
      params:
        description: >-
          params are the tendermint consensus params stored in the consensus
          module.

          Please note that `params.version` is not populated in this response,
          it is

          tracked separately in the x/upgrade module.
        properties:
          abci:
            description: >-
              ABCIParams configure functionality specific to the Application
              Blockchain Interface.
            properties:
              vote_extensions_enable_height:
                description: >-
                  vote_extensions_enable_height configures the first height
                  during which

                  vote extensions will be enabled. During this specified height,
                  and for all

                  subsequent heights, precommit messages that do not contain
                  valid extension data

                  will be considered invalid. Prior to this height, vote
                  extensions will not

                  be used or accepted by validators on the network.


                  Once enabled, vote extensions will be created by the
                  application in ExtendVote,

                  passed to the application for validation in
                  VerifyVoteExtension and given

                  to the application to use when proposing a block during
                  PrepareProposal.
                format: int64
                type: string
            type: object
          block:
            description: BlockParams contains limits on the block size.
            properties:
              max_bytes:
                format: int64
                title: |-
                  Max block size, in bytes.
                  Note: must be greater than 0
                type: string
              max_gas:
                format: int64
                title: |-
                  Max gas per block.
                  Note: must be greater or equal to -1
                type: string
            type: object
          evidence:
            description: EvidenceParams determine how we handle evidence of malfeasance.
            properties:
              max_age_duration:
                description: >-
                  Max age of evidence, in time.


                  It should correspond with an app's "unbonding period" or other
                  similar

                  mechanism for handling [Nothing-At-Stake

                  attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
                type: string
              max_age_num_blocks:
                description: >-
                  Max age of evidence, in blocks.


                  The basic formula for calculating this is: MaxAgeDuration /
                  {average block

                  time}.
                format: int64
                type: string
              max_bytes:
                format: int64
                title: >-
                  This sets the maximum size of total evidence in bytes that can
                  be committed in a single block.

                  and should fall comfortably under the max block bytes.

                  Default is 1048576 or 1MB
                type: string
            type: object
          validator:
            description: |-
              ValidatorParams restrict the public key types validators can use.
              NOTE: uses ABCI pubkey naming, not Amino names.
            properties:
              pub_key_types:
                items:
                  type: string
                type: array
            type: object
          version:
            description: VersionParams contains the ABCI application version.
            properties:
              app:
                format: uint64
                type: string
            type: object
        type: object
    type: object
  cosmos.crypto.multisig.v1beta1.CompactBitArray:
    description: |-
      CompactBitArray is an implementation of a space efficient bit array.
      This is used to ensure that the encoded data takes up a minimal amount of
      space after proto encoding.
      This is not thread safe, and is not intended for concurrent usage.
    properties:
      elems:
        format: byte
        type: string
      extra_bits_stored:
        format: int64
        type: integer
    type: object
  cosmos.evidence.v1beta1.QueryAllEvidenceResponse:
    description: >-
      QueryAllEvidenceResponse is the response type for the Query/AllEvidence
      RPC

      method.
    properties:
      evidence:
        description: evidence returns all evidences.
        items:
          properties:
            type_url:
              type: string
            value:
              format: byte
              type: string
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  cosmos.evidence.v1beta1.QueryEvidenceResponse:
    description: >-
      QueryEvidenceResponse is the response type for the Query/Evidence RPC
      method.
    properties:
      evidence:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
        description: evidence returns the requested evidence.
    type: object
  cosmos.feegrant.v1beta1.Grant:
    properties:
      allowance:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
        description: allowance can be any of basic, periodic, allowed fee allowance.
      grantee:
        description: >-
          grantee is the address of the user being granted an allowance of
          another user's funds.
        type: string
      granter:
        description: >-
          granter is the address of the user granting an allowance of their
          funds.
        type: string
    title: Grant is stored in the KVStore to record a grant with full context
    type: object
  cosmos.feegrant.v1beta1.QueryAllowanceResponse:
    description: >-
      QueryAllowanceResponse is the response type for the Query/Allowance RPC
      method.
    properties:
      allowance:
        description: allowance is a allowance granted for grantee by granter.
        properties:
          allowance:
            properties:
              type_url:
                type: string
              value:
                format: byte
                type: string
            type: object
            description: allowance can be any of basic, periodic, allowed fee allowance.
          grantee:
            description: >-
              grantee is the address of the user being granted an allowance of
              another user's funds.
            type: string
          granter:
            description: >-
              granter is the address of the user granting an allowance of their
              funds.
            type: string
        title: Grant is stored in the KVStore to record a grant with full context
        type: object
    type: object
  cosmos.feegrant.v1beta1.QueryAllowancesByGranterResponse:
    description: >-
      QueryAllowancesByGranterResponse is the response type for the
      Query/AllowancesByGranter RPC method.


      Since: cosmos-sdk 0.46
    properties:
      allowances:
        description: allowances that have been issued by the granter.
        items:
          properties:
            allowance:
              properties:
                type_url:
                  type: string
                value:
                  format: byte
                  type: string
              type: object
              description: allowance can be any of basic, periodic, allowed fee allowance.
            grantee:
              description: >-
                grantee is the address of the user being granted an allowance of
                another user's funds.
              type: string
            granter:
              description: >-
                granter is the address of the user granting an allowance of
                their funds.
              type: string
          title: Grant is stored in the KVStore to record a grant with full context
          type: object
        type: array
      pagination:
        description: pagination defines an pagination for the response.
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  cosmos.feegrant.v1beta1.QueryAllowancesResponse:
    description: >-
      QueryAllowancesResponse is the response type for the Query/Allowances RPC
      method.
    properties:
      allowances:
        description: allowances are allowance's granted for grantee by granter.
        items:
          properties:
            allowance:
              properties:
                type_url:
                  type: string
                value:
                  format: byte
                  type: string
              type: object
              description: allowance can be any of basic, periodic, allowed fee allowance.
            grantee:
              description: >-
                grantee is the address of the user being granted an allowance of
                another user's funds.
              type: string
            granter:
              description: >-
                granter is the address of the user granting an allowance of
                their funds.
              type: string
          title: Grant is stored in the KVStore to record a grant with full context
          type: object
        type: array
      pagination:
        description: pagination defines an pagination for the response.
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  cosmos.gov.v1.Proposal:
    description: Proposal defines the core field members of a governance proposal.
    properties:
      deposit_end_time:
        description: deposit_end_time is the end time for deposition.
        format: date-time
        type: string
      expedited:
        description: 'Since: cosmos-sdk 0.50'
        title: expedited defines if the proposal is expedited
        type: boolean
      failed_reason:
        description: 'Since: cosmos-sdk 0.50'
        title: failed_reason defines the reason why the proposal failed
        type: string
      final_tally_result:
        description: |-
          final_tally_result is the final tally result of the proposal. When
          querying a proposal via gRPC, this field is not populated until the
          proposal's voting period has ended.
        properties:
          abstain_count:
            description: abstain_count is the number of abstain votes on a proposal.
            type: string
          no_count:
            description: no_count is the number of no votes on a proposal.
            type: string
          no_with_veto_count:
            description: >-
              no_with_veto_count is the number of no with veto votes on a
              proposal.
            type: string
          yes_count:
            description: yes_count is the number of yes votes on a proposal.
            type: string
        type: object
      id:
        description: id defines the unique id of the proposal.
        format: uint64
        type: string
      messages:
        description: >-
          messages are the arbitrary messages to be executed if the proposal
          passes.
        items:
          properties:
            type_url:
              type: string
            value:
              format: byte
              type: string
          type: object
        type: array
      metadata:
        title: >-
          metadata is any arbitrary metadata attached to the proposal.

          the recommended format of the metadata is to be found here:
          https://docs.cosmos.network/v0.47/modules/gov#proposal-3
        type: string
      proposer:
        description: 'Since: cosmos-sdk 0.47'
        title: proposer is the address of the proposal sumbitter
        type: string
      status:
        description: status defines the proposal status.
        default: PROPOSAL_STATUS_UNSPECIFIED
        enum:
          - PROPOSAL_STATUS_UNSPECIFIED
          - PROPOSAL_STATUS_DEPOSIT_PERIOD
          - PROPOSAL_STATUS_VOTING_PERIOD
          - PROPOSAL_STATUS_PASSED
          - PROPOSAL_STATUS_REJECTED
          - PROPOSAL_STATUS_FAILED
        type: string
      submit_time:
        description: submit_time is the time of proposal submission.
        format: date-time
        type: string
      summary:
        description: 'Since: cosmos-sdk 0.47'
        title: summary is a short summary of the proposal
        type: string
      title:
        description: 'Since: cosmos-sdk 0.47'
        title: title is the title of the proposal
        type: string
      total_deposit:
        description: total_deposit is the total deposit on the proposal.
        items:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      voting_end_time:
        description: voting_end_time is the end time of voting on a proposal.
        format: date-time
        type: string
      voting_start_time:
        description: voting_start_time is the starting time to vote on a proposal.
        format: date-time
        type: string
    type: object
  cosmos.gov.v1.ProposalStatus:
    default: PROPOSAL_STATUS_UNSPECIFIED
    description: |-
      ProposalStatus enumerates the valid statuses of a proposal.

       - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
       - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
      period.
       - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
      period.
       - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
      passed.
       - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
      been rejected.
       - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
      failed.
    enum:
      - PROPOSAL_STATUS_UNSPECIFIED
      - PROPOSAL_STATUS_DEPOSIT_PERIOD
      - PROPOSAL_STATUS_VOTING_PERIOD
      - PROPOSAL_STATUS_PASSED
      - PROPOSAL_STATUS_REJECTED
      - PROPOSAL_STATUS_FAILED
    type: string
  cosmos.gov.v1.TallyResult:
    description: TallyResult defines a standard tally for a governance proposal.
    properties:
      abstain_count:
        description: abstain_count is the number of abstain votes on a proposal.
        type: string
      no_count:
        description: no_count is the number of no votes on a proposal.
        type: string
      no_with_veto_count:
        description: no_with_veto_count is the number of no with veto votes on a proposal.
        type: string
      yes_count:
        description: yes_count is the number of yes votes on a proposal.
        type: string
    type: object
  cosmos.gov.v1beta1.Proposal:
    description: Proposal defines the core field members of a governance proposal.
    properties:
      content:
        description: content is the proposal's content.
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
      deposit_end_time:
        description: deposit_end_time is the end time for deposition.
        format: date-time
        type: string
      final_tally_result:
        description: |-
          final_tally_result is the final tally result of the proposal. When
          querying a proposal via gRPC, this field is not populated until the
          proposal's voting period has ended.
        properties:
          abstain:
            description: abstain is the number of abstain votes on a proposal.
            type: string
          'no':
            description: no is the number of no votes on a proposal.
            type: string
          no_with_veto:
            description: no_with_veto is the number of no with veto votes on a proposal.
            type: string
          'yes':
            description: yes is the number of yes votes on a proposal.
            type: string
        type: object
      proposal_id:
        description: proposal_id defines the unique id of the proposal.
        format: uint64
        type: string
      status:
        description: status defines the proposal status.
        default: PROPOSAL_STATUS_UNSPECIFIED
        enum:
          - PROPOSAL_STATUS_UNSPECIFIED
          - PROPOSAL_STATUS_DEPOSIT_PERIOD
          - PROPOSAL_STATUS_VOTING_PERIOD
          - PROPOSAL_STATUS_PASSED
          - PROPOSAL_STATUS_REJECTED
          - PROPOSAL_STATUS_FAILED
        type: string
      submit_time:
        description: submit_time is the time of proposal submission.
        format: date-time
        type: string
      total_deposit:
        description: total_deposit is the total deposit on the proposal.
        items:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      voting_end_time:
        description: voting_end_time is the end time of voting on a proposal.
        format: date-time
        type: string
      voting_start_time:
        description: voting_start_time is the starting time to vote on a proposal.
        format: date-time
        type: string
    type: object
  cosmos.gov.v1beta1.ProposalStatus:
    default: PROPOSAL_STATUS_UNSPECIFIED
    description: |-
      ProposalStatus enumerates the valid statuses of a proposal.

       - PROPOSAL_STATUS_UNSPECIFIED: PROPOSAL_STATUS_UNSPECIFIED defines the default proposal status.
       - PROPOSAL_STATUS_DEPOSIT_PERIOD: PROPOSAL_STATUS_DEPOSIT_PERIOD defines a proposal status during the deposit
      period.
       - PROPOSAL_STATUS_VOTING_PERIOD: PROPOSAL_STATUS_VOTING_PERIOD defines a proposal status during the voting
      period.
       - PROPOSAL_STATUS_PASSED: PROPOSAL_STATUS_PASSED defines a proposal status of a proposal that has
      passed.
       - PROPOSAL_STATUS_REJECTED: PROPOSAL_STATUS_REJECTED defines a proposal status of a proposal that has
      been rejected.
       - PROPOSAL_STATUS_FAILED: PROPOSAL_STATUS_FAILED defines a proposal status of a proposal that has
      failed.
    enum:
      - PROPOSAL_STATUS_UNSPECIFIED
      - PROPOSAL_STATUS_DEPOSIT_PERIOD
      - PROPOSAL_STATUS_VOTING_PERIOD
      - PROPOSAL_STATUS_PASSED
      - PROPOSAL_STATUS_REJECTED
      - PROPOSAL_STATUS_FAILED
    type: string
  cosmos.gov.v1beta1.TallyResult:
    description: TallyResult defines a standard tally for a governance proposal.
    properties:
      abstain:
        description: abstain is the number of abstain votes on a proposal.
        type: string
      'no':
        description: no is the number of no votes on a proposal.
        type: string
      no_with_veto:
        description: no_with_veto is the number of no with veto votes on a proposal.
        type: string
      'yes':
        description: yes is the number of yes votes on a proposal.
        type: string
    type: object
  cosmos.nft.v1beta1.Class:
    description: Class defines the class of the nft type.
    properties:
      data:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
        title: data is the app specific metadata of the NFT class. Optional
      description:
        title: description is a brief description of nft classification. Optional
        type: string
      id:
        title: >-
          id defines the unique identifier of the NFT classification, similar to
          the contract address of ERC721
        type: string
      name:
        title: >-
          name defines the human-readable name of the NFT classification.
          Optional
        type: string
      symbol:
        title: symbol is an abbreviated name for nft classification. Optional
        type: string
      uri:
        title: >-
          uri for the class metadata stored off chain. It can define schema for
          Class and NFT `Data` attributes. Optional
        type: string
      uri_hash:
        title: uri_hash is a hash of the document pointed by uri. Optional
        type: string
    type: object
  cosmos.nft.v1beta1.NFT:
    description: NFT defines the NFT.
    properties:
      class_id:
        title: >-
          class_id associated with the NFT, similar to the contract address of
          ERC721
        type: string
      data:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
        title: data is an app specific data of the NFT. Optional
      id:
        title: id is a unique identifier of the NFT
        type: string
      uri:
        title: uri for the NFT metadata stored off chain
        type: string
      uri_hash:
        title: uri_hash is a hash of the document pointed by uri
        type: string
    type: object
  cosmos.nft.v1beta1.QueryBalanceResponse:
    properties:
      amount:
        format: uint64
        title: amount is the number of all NFTs of a given class owned by the owner
        type: string
    title: QueryBalanceResponse is the response type for the Query/Balance RPC method
    type: object
  cosmos.nft.v1beta1.QueryClassResponse:
    properties:
      class:
        description: class defines the class of the nft type.
        properties:
          data:
            properties:
              type_url:
                type: string
              value:
                format: byte
                type: string
            type: object
            title: data is the app specific metadata of the NFT class. Optional
          description:
            title: description is a brief description of nft classification. Optional
            type: string
          id:
            title: >-
              id defines the unique identifier of the NFT classification,
              similar to the contract address of ERC721
            type: string
          name:
            title: >-
              name defines the human-readable name of the NFT classification.
              Optional
            type: string
          symbol:
            title: symbol is an abbreviated name for nft classification. Optional
            type: string
          uri:
            title: >-
              uri for the class metadata stored off chain. It can define schema
              for Class and NFT `Data` attributes. Optional
            type: string
          uri_hash:
            title: uri_hash is a hash of the document pointed by uri. Optional
            type: string
        type: object
    title: QueryClassResponse is the response type for the Query/Class RPC method
    type: object
  cosmos.nft.v1beta1.QueryClassesResponse:
    properties:
      classes:
        description: class defines the class of the nft type.
        items:
          description: Class defines the class of the nft type.
          properties:
            data:
              properties:
                type_url:
                  type: string
                value:
                  format: byte
                  type: string
              type: object
              title: data is the app specific metadata of the NFT class. Optional
            description:
              title: >-
                description is a brief description of nft classification.
                Optional
              type: string
            id:
              title: >-
                id defines the unique identifier of the NFT classification,
                similar to the contract address of ERC721
              type: string
            name:
              title: >-
                name defines the human-readable name of the NFT classification.
                Optional
              type: string
            symbol:
              title: symbol is an abbreviated name for nft classification. Optional
              type: string
            uri:
              title: >-
                uri for the class metadata stored off chain. It can define
                schema for Class and NFT `Data` attributes. Optional
              type: string
            uri_hash:
              title: uri_hash is a hash of the document pointed by uri. Optional
              type: string
          type: object
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    title: QueryClassesResponse is the response type for the Query/Classes RPC method
    type: object
  cosmos.nft.v1beta1.QueryNFTResponse:
    properties:
      nft:
        title: owner is the owner address of the nft
        description: NFT defines the NFT.
        properties:
          class_id:
            title: >-
              class_id associated with the NFT, similar to the contract address
              of ERC721
            type: string
          data:
            properties:
              type_url:
                type: string
              value:
                format: byte
                type: string
            type: object
            title: data is an app specific data of the NFT. Optional
          id:
            title: id is a unique identifier of the NFT
            type: string
          uri:
            title: uri for the NFT metadata stored off chain
            type: string
          uri_hash:
            title: uri_hash is a hash of the document pointed by uri
            type: string
        type: object
    title: QueryNFTResponse is the response type for the Query/NFT RPC method
    type: object
  cosmos.nft.v1beta1.QueryNFTsResponse:
    properties:
      nfts:
        items:
          description: NFT defines the NFT.
          properties:
            class_id:
              title: >-
                class_id associated with the NFT, similar to the contract
                address of ERC721
              type: string
            data:
              properties:
                type_url:
                  type: string
                value:
                  format: byte
                  type: string
              type: object
              title: data is an app specific data of the NFT. Optional
            id:
              title: id is a unique identifier of the NFT
              type: string
            uri:
              title: uri for the NFT metadata stored off chain
              type: string
            uri_hash:
              title: uri_hash is a hash of the document pointed by uri
              type: string
          type: object
        title: NFT defines the NFT
        type: array
      pagination:
        description: pagination defines the pagination in the response.
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    title: QueryNFTsResponse is the response type for the Query/NFTs RPC methods
    type: object
  cosmos.nft.v1beta1.QueryOwnerResponse:
    properties:
      owner:
        title: owner is the owner address of the nft
        type: string
    title: QueryOwnerResponse is the response type for the Query/Owner RPC method
    type: object
  cosmos.nft.v1beta1.QuerySupplyResponse:
    properties:
      amount:
        format: uint64
        title: amount is the number of all NFTs from the given class
        type: string
    title: QuerySupplyResponse is the response type for the Query/Supply RPC method
    type: object
  cosmos.orm.query.v1alpha1.GetResponse:
    description: GetResponse is the Query/Get response type.
    properties:
      result:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
        description: |-
          result is the result of the get query. If no value is found, the gRPC
          status code NOT_FOUND will be returned.
    type: object
  cosmos.orm.query.v1alpha1.IndexValue:
    description: IndexValue represents the value of a field in an ORM index expression.
    properties:
      bool:
        description: bool specifies a value for a bool index field.
        type: boolean
      bytes:
        description: bytes specifies a value for a bytes index field.
        format: byte
        type: string
      duration:
        description: duration specifies a value for a duration index field.
        type: string
      enum:
        description: enum specifies a value for an enum index field.
        type: string
      int:
        description: |-
          int64 specifies a value for an int32, sfixed32, int64, or sfixed64
          index field.
        format: int64
        type: string
      str:
        description: str specifies a value for a string index field.
        type: string
      timestamp:
        description: timestamp specifies a value for a timestamp index field.
        format: date-time
        type: string
      uint:
        description: |-
          uint specifies a value for an uint32, fixed32, uint64, or fixed64
          index field.
        format: uint64
        type: string
    type: object
  cosmos.orm.query.v1alpha1.ListRequest.Prefix:
    description: Prefix specifies the arguments to a prefix query.
    properties:
      values:
        description: |-
          values specifies the index values for the prefix query.
          It is valid to special a partial prefix with fewer values than
          the number of fields in the index.
        items:
          description: >-
            IndexValue represents the value of a field in an ORM index
            expression.
          properties:
            bool:
              description: bool specifies a value for a bool index field.
              type: boolean
            bytes:
              description: bytes specifies a value for a bytes index field.
              format: byte
              type: string
            duration:
              description: duration specifies a value for a duration index field.
              type: string
            enum:
              description: enum specifies a value for an enum index field.
              type: string
            int:
              description: >-
                int64 specifies a value for an int32, sfixed32, int64, or
                sfixed64

                index field.
              format: int64
              type: string
            str:
              description: str specifies a value for a string index field.
              type: string
            timestamp:
              description: timestamp specifies a value for a timestamp index field.
              format: date-time
              type: string
            uint:
              description: >-
                uint specifies a value for an uint32, fixed32, uint64, or
                fixed64

                index field.
              format: uint64
              type: string
          type: object
        type: array
    type: object
  cosmos.orm.query.v1alpha1.ListRequest.Range:
    description: Range specifies the arguments to a range query.
    properties:
      end:
        description: |-
          end specifies the inclusive ending index values for the range query.
          It is valid to provide fewer values than the number of fields in the
          index.
        items:
          description: >-
            IndexValue represents the value of a field in an ORM index
            expression.
          properties:
            bool:
              description: bool specifies a value for a bool index field.
              type: boolean
            bytes:
              description: bytes specifies a value for a bytes index field.
              format: byte
              type: string
            duration:
              description: duration specifies a value for a duration index field.
              type: string
            enum:
              description: enum specifies a value for an enum index field.
              type: string
            int:
              description: >-
                int64 specifies a value for an int32, sfixed32, int64, or
                sfixed64

                index field.
              format: int64
              type: string
            str:
              description: str specifies a value for a string index field.
              type: string
            timestamp:
              description: timestamp specifies a value for a timestamp index field.
              format: date-time
              type: string
            uint:
              description: >-
                uint specifies a value for an uint32, fixed32, uint64, or
                fixed64

                index field.
              format: uint64
              type: string
          type: object
        type: array
      start:
        description: |-
          start specifies the starting index values for the range query.
          It is valid to provide fewer values than the number of fields in the
          index.
        items:
          description: >-
            IndexValue represents the value of a field in an ORM index
            expression.
          properties:
            bool:
              description: bool specifies a value for a bool index field.
              type: boolean
            bytes:
              description: bytes specifies a value for a bytes index field.
              format: byte
              type: string
            duration:
              description: duration specifies a value for a duration index field.
              type: string
            enum:
              description: enum specifies a value for an enum index field.
              type: string
            int:
              description: >-
                int64 specifies a value for an int32, sfixed32, int64, or
                sfixed64

                index field.
              format: int64
              type: string
            str:
              description: str specifies a value for a string index field.
              type: string
            timestamp:
              description: timestamp specifies a value for a timestamp index field.
              format: date-time
              type: string
            uint:
              description: >-
                uint specifies a value for an uint32, fixed32, uint64, or
                fixed64

                index field.
              format: uint64
              type: string
          type: object
        type: array
    type: object
  cosmos.orm.query.v1alpha1.ListResponse:
    description: ListResponse is the Query/List response type.
    properties:
      pagination:
        description: pagination is the pagination response.
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
      results:
        description: results are the results of the query.
        items:
          properties:
            type_url:
              type: string
            value:
              format: byte
              type: string
          type: object
        type: array
    type: object
  cosmos.params.v1beta1.ParamChange:
    description: |-
      ParamChange defines an individual parameter change, for use in
      ParameterChangeProposal.
    properties:
      key:
        type: string
      subspace:
        type: string
      value:
        type: string
    type: object
  cosmos.params.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    properties:
      param:
        description: param defines the queried parameter.
        properties:
          key:
            type: string
          subspace:
            type: string
          value:
            type: string
        type: object
    type: object
  cosmos.params.v1beta1.QuerySubspacesResponse:
    description: |-
      QuerySubspacesResponse defines the response types for querying for all
      registered subspaces and all keys for a subspace.

      Since: cosmos-sdk 0.46
    properties:
      subspaces:
        items:
          description: >-
            Subspace defines a parameter subspace name and all the keys that
            exist for

            the subspace.


            Since: cosmos-sdk 0.46
          properties:
            keys:
              items:
                type: string
              type: array
            subspace:
              type: string
          type: object
        type: array
    type: object
  cosmos.params.v1beta1.Subspace:
    description: |-
      Subspace defines a parameter subspace name and all the keys that exist for
      the subspace.

      Since: cosmos-sdk 0.46
    properties:
      keys:
        items:
          type: string
        type: array
      subspace:
        type: string
    type: object
  cosmos.slashing.v1beta1.Params:
    description: Params represents the parameters used for by the slashing module.
    properties:
      downtime_jail_duration:
        type: string
      min_signed_per_window:
        format: byte
        type: string
      signed_blocks_window:
        format: int64
        type: string
      slash_fraction_double_sign:
        format: byte
        type: string
      slash_fraction_downtime:
        format: byte
        type: string
    type: object
  cosmos.slashing.v1beta1.QueryParamsResponse:
    properties:
      params:
        description: Params represents the parameters used for by the slashing module.
        properties:
          downtime_jail_duration:
            type: string
          min_signed_per_window:
            format: byte
            type: string
          signed_blocks_window:
            format: int64
            type: string
          slash_fraction_double_sign:
            format: byte
            type: string
          slash_fraction_downtime:
            format: byte
            type: string
        type: object
    title: QueryParamsResponse is the response type for the Query/Params RPC method
    type: object
  cosmos.slashing.v1beta1.QuerySigningInfoResponse:
    properties:
      val_signing_info:
        title: val_signing_info is the signing info of requested val cons address
        description: >-
          ValidatorSigningInfo defines a validator's signing info for monitoring
          their

          liveness activity.
        properties:
          address:
            type: string
          index_offset:
            description: >-
              Index which is incremented every time a validator is bonded in a
              block and

              _may_ have signed a pre-commit or not. This in conjunction with
              the

              signed_blocks_window param determines the index in the missed
              block bitmap.
            format: int64
            type: string
          jailed_until:
            description: >-
              Timestamp until which the validator is jailed due to liveness
              downtime.
            format: date-time
            type: string
          missed_blocks_counter:
            description: >-
              A counter of missed (unsigned) blocks. It is used to avoid
              unnecessary

              reads in the missed block bitmap.
            format: int64
            type: string
          start_height:
            format: int64
            title: Height at which validator was first a candidate OR was un-jailed
            type: string
          tombstoned:
            description: >-
              Whether or not a validator has been tombstoned (killed out of
              validator

              set). It is set once the validator commits an equivocation or for
              any other

              configured misbehavior.
            type: boolean
        type: object
    title: >-
      QuerySigningInfoResponse is the response type for the Query/SigningInfo
      RPC

      method
    type: object
  cosmos.slashing.v1beta1.QuerySigningInfosResponse:
    properties:
      info:
        items:
          description: >-
            ValidatorSigningInfo defines a validator's signing info for
            monitoring their

            liveness activity.
          properties:
            address:
              type: string
            index_offset:
              description: >-
                Index which is incremented every time a validator is bonded in a
                block and

                _may_ have signed a pre-commit or not. This in conjunction with
                the

                signed_blocks_window param determines the index in the missed
                block bitmap.
              format: int64
              type: string
            jailed_until:
              description: >-
                Timestamp until which the validator is jailed due to liveness
                downtime.
              format: date-time
              type: string
            missed_blocks_counter:
              description: >-
                A counter of missed (unsigned) blocks. It is used to avoid
                unnecessary

                reads in the missed block bitmap.
              format: int64
              type: string
            start_height:
              format: int64
              title: Height at which validator was first a candidate OR was un-jailed
              type: string
            tombstoned:
              description: >-
                Whether or not a validator has been tombstoned (killed out of
                validator

                set). It is set once the validator commits an equivocation or
                for any other

                configured misbehavior.
              type: boolean
          type: object
        title: info is the signing info of all validators
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    title: >-
      QuerySigningInfosResponse is the response type for the Query/SigningInfos
      RPC

      method
    type: object
  cosmos.slashing.v1beta1.ValidatorSigningInfo:
    description: >-
      ValidatorSigningInfo defines a validator's signing info for monitoring
      their

      liveness activity.
    properties:
      address:
        type: string
      index_offset:
        description: >-
          Index which is incremented every time a validator is bonded in a block
          and

          _may_ have signed a pre-commit or not. This in conjunction with the

          signed_blocks_window param determines the index in the missed block
          bitmap.
        format: int64
        type: string
      jailed_until:
        description: >-
          Timestamp until which the validator is jailed due to liveness
          downtime.
        format: date-time
        type: string
      missed_blocks_counter:
        description: |-
          A counter of missed (unsigned) blocks. It is used to avoid unnecessary
          reads in the missed block bitmap.
        format: int64
        type: string
      start_height:
        format: int64
        title: Height at which validator was first a candidate OR was un-jailed
        type: string
      tombstoned:
        description: >-
          Whether or not a validator has been tombstoned (killed out of
          validator

          set). It is set once the validator commits an equivocation or for any
          other

          configured misbehavior.
        type: boolean
    type: object
  cosmos.staking.v1beta1.Infraction:
    default: INFRACTION_UNSPECIFIED
    description: |-
      Infraction indicates the infraction a validator commited.

       - INFRACTION_UNSPECIFIED: UNSPECIFIED defines an empty infraction.
       - INFRACTION_DOUBLE_SIGN: DOUBLE_SIGN defines a validator that double-signs a block.
       - INFRACTION_DOWNTIME: DOWNTIME defines a validator that missed signing too many blocks.
    enum:
      - INFRACTION_UNSPECIFIED
      - INFRACTION_DOUBLE_SIGN
      - INFRACTION_DOWNTIME
    type: string
  cosmos.tx.signing.v1beta1.SignMode:
    default: SIGN_MODE_UNSPECIFIED
    description: |-
      SignMode represents a signing mode with its own security guarantees.

      This enum should be considered a registry of all known sign modes
      in the Cosmos ecosystem. Apps are not expected to support all known
      sign modes. Apps that would like to support custom  sign modes are
      encouraged to open a small PR against this file to add a new case
      to this SignMode enum describing their sign mode so that different
      apps have a consistent version of this enum.

       - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
      rejected.
       - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
      verified with raw bytes from Tx.
       - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
      human-readable textual representation on top of the binary representation
      from SIGN_MODE_DIRECT.

      Since: cosmos-sdk 0.50
       - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
      SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does not
      require signers signing over other signers' `signer_info`.

      Since: cosmos-sdk 0.46
       - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
      Amino JSON and will be removed in the future.
       - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
      SDK. Ref: https://eips.ethereum.org/EIPS/eip-191

      Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,
      but is not implemented on the SDK by default. To enable EIP-191, you need
      to pass a custom `TxConfig` that has an implementation of
      `SignModeHandler` for EIP-191. The SDK may decide to fully support
      EIP-191 in the future.

      Since: cosmos-sdk 0.45.2
    enum:
      - SIGN_MODE_UNSPECIFIED
      - SIGN_MODE_DIRECT
      - SIGN_MODE_TEXTUAL
      - SIGN_MODE_DIRECT_AUX
      - SIGN_MODE_LEGACY_AMINO_JSON
      - SIGN_MODE_EIP_191
    type: string
  cosmos.tx.v1beta1.AuthInfo:
    description: |-
      AuthInfo describes the fee and signer modes that are used to sign a
      transaction.
    properties:
      fee:
        description: >-
          Fee is the fee and gas limit for the transaction. The first signer is
          the

          primary signer and the one which pays the fee. The fee can be
          calculated

          based on the cost of evaluating the body and doing signature
          verification

          of the signers. This can be estimated via simulation.
        properties:
          amount:
            items:
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            title: amount is the amount of coins to be paid as a fee
            type: array
          gas_limit:
            format: uint64
            title: >-
              gas_limit is the maximum gas that can be used in transaction
              processing

              before an out of gas error occurs
            type: string
          granter:
            title: >-
              if set, the fee payer (either the first signer or the value of the
              payer field) requests that a fee grant be used

              to pay fees instead of the fee payer's own balance. If an
              appropriate fee grant does not exist or the chain does

              not support fee grants, this will fail
            type: string
          payer:
            description: >-
              if unset, the first signer is responsible for paying the fees. If
              set, the specified account must pay the fees.

              the payer must be a tx signer (and thus have signed this field in
              AuthInfo).

              setting this field does *not* change the ordering of required
              signers for the transaction.
            type: string
        type: object
      signer_infos:
        description: >-
          signer_infos defines the signing modes for the required signers. The
          number

          and order of elements must match the required signers from TxBody's

          messages. The first element is the primary signer and the one which
          pays

          the fee.
        items:
          description: >-
            SignerInfo describes the public key and signing mode of a single
            top-level

            signer.
          properties:
            mode_info:
              title: >-
                mode_info describes the signing mode of the signer and is a
                nested

                structure to support nested multisig pubkey's
              description: >-
                ModeInfo describes the signing mode of a single or nested
                multisig signer.
              properties:
                multi:
                  title: multi represents a nested multisig signer
                  properties:
                    bitarray:
                      title: >-
                        bitarray specifies which keys within the multisig are
                        signing
                      description: >-
                        CompactBitArray is an implementation of a space
                        efficient bit array.

                        This is used to ensure that the encoded data takes up a
                        minimal amount of

                        space after proto encoding.

                        This is not thread safe, and is not intended for
                        concurrent usage.
                      properties:
                        elems:
                          format: byte
                          type: string
                        extra_bits_stored:
                          format: int64
                          type: integer
                      type: object
                    mode_infos:
                      items: {}
                      title: >-
                        mode_infos is the corresponding modes of the signers of
                        the multisig

                        which could include nested multisig public keys
                      type: array
                  type: object
                single:
                  title: single represents a single signer
                  properties:
                    mode:
                      title: mode is the signing mode of the single signer
                      default: SIGN_MODE_UNSPECIFIED
                      description: >-
                        SignMode represents a signing mode with its own security
                        guarantees.


                        This enum should be considered a registry of all known
                        sign modes

                        in the Cosmos ecosystem. Apps are not expected to
                        support all known

                        sign modes. Apps that would like to support custom  sign
                        modes are

                        encouraged to open a small PR against this file to add a
                        new case

                        to this SignMode enum describing their sign mode so that
                        different

                        apps have a consistent version of this enum.

                         - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                        rejected.
                         - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                        verified with raw bytes from Tx.
                         - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                        human-readable textual representation on top of the
                        binary representation

                        from SIGN_MODE_DIRECT.


                        Since: cosmos-sdk 0.50
                         - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                        SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this
                        sign mode does not

                        require signers signing over other signers'
                        `signer_info`.


                        Since: cosmos-sdk 0.46
                         - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                        Amino JSON and will be removed in the future.
                         - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                        SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                        Currently, SIGN_MODE_EIP_191 is registered as a SignMode
                        enum variant,

                        but is not implemented on the SDK by default. To enable
                        EIP-191, you need

                        to pass a custom `TxConfig` that has an implementation
                        of

                        `SignModeHandler` for EIP-191. The SDK may decide to
                        fully support

                        EIP-191 in the future.


                        Since: cosmos-sdk 0.45.2
                      enum:
                        - SIGN_MODE_UNSPECIFIED
                        - SIGN_MODE_DIRECT
                        - SIGN_MODE_TEXTUAL
                        - SIGN_MODE_DIRECT_AUX
                        - SIGN_MODE_LEGACY_AMINO_JSON
                        - SIGN_MODE_EIP_191
                      type: string
                  type: object
              type: object
            public_key:
              properties:
                type_url:
                  type: string
                value:
                  format: byte
                  type: string
              type: object
              description: >-
                public_key is the public key of the signer. It is optional for
                accounts

                that already exist in state. If unset, the verifier can use the
                required \

                signer address for this position and lookup the public key.
            sequence:
              description: >-
                sequence is the sequence of the account, which describes the

                number of committed transactions signed by a given address. It
                is used to

                prevent replay attacks.
              format: uint64
              type: string
          type: object
        type: array
      tip:
        description: >-
          Tip is the optional tip used for transactions fees paid in another
          denom.


          This field is ignored if the chain didn't enable tips, i.e. didn't add
          the

          `TipDecorator` in its posthandler.


          Since: cosmos-sdk 0.46
        properties:
          amount:
            items:
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            title: amount is the amount of the tip
            type: array
          tipper:
            title: tipper is the address of the account paying for the tip
            type: string
        type: object
    type: object
  cosmos.tx.v1beta1.BroadcastMode:
    default: BROADCAST_MODE_UNSPECIFIED
    description: |-
      BroadcastMode specifies the broadcast mode for the TxService.Broadcast RPC
      method.

       - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
       - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,
      BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
       - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits
      for a CheckTx execution response only.
       - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client
      returns immediately.
    enum:
      - BROADCAST_MODE_UNSPECIFIED
      - BROADCAST_MODE_BLOCK
      - BROADCAST_MODE_SYNC
      - BROADCAST_MODE_ASYNC
    type: string
  cosmos.tx.v1beta1.BroadcastTxRequest:
    description: |-
      BroadcastTxRequest is the request type for the Service.BroadcastTxRequest
      RPC method.
    properties:
      mode:
        default: BROADCAST_MODE_UNSPECIFIED
        description: >-
          BroadcastMode specifies the broadcast mode for the TxService.Broadcast
          RPC

          method.

           - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
           - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,
          BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x onwards.
           - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits
          for a CheckTx execution response only.
           - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client
          returns immediately.
        enum:
          - BROADCAST_MODE_UNSPECIFIED
          - BROADCAST_MODE_BLOCK
          - BROADCAST_MODE_SYNC
          - BROADCAST_MODE_ASYNC
        type: string
      tx_bytes:
        description: tx_bytes is the raw transaction.
        format: byte
        type: string
    type: object
  cosmos.tx.v1beta1.BroadcastTxResponse:
    description: |-
      BroadcastTxResponse is the response type for the
      Service.BroadcastTx method.
    properties:
      tx_response:
        description: tx_response is the queried TxResponses.
        properties:
          code:
            description: Response code.
            format: int64
            type: integer
          codespace:
            title: Namespace for the Code
            type: string
          data:
            description: Result bytes, if any.
            type: string
          events:
            description: >-
              Events defines all the events emitted by processing a transaction.
              Note,

              these events include those emitted by processing all the messages
              and those

              emitted from the ante. Whereas Logs contains the events, with

              additional metadata, emitted only by processing the messages.


              Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
            items:
              description: >-
                Event allows application developers to attach additional
                information to

                ResponseFinalizeBlock and ResponseCheckTx.

                Later, transactions may be queried using these events.
              properties:
                attributes:
                  items:
                    description: >-
                      EventAttribute is a single key-value pair, associated with
                      an event.
                    properties:
                      index:
                        type: boolean
                      key:
                        type: string
                      value:
                        type: string
                    type: object
                  type: array
                type:
                  type: string
              type: object
            type: array
          gas_used:
            description: Amount of gas consumed by transaction.
            format: int64
            type: string
          gas_wanted:
            description: Amount of gas requested for transaction.
            format: int64
            type: string
          height:
            format: int64
            title: The block height
            type: string
          info:
            description: Additional information. May be non-deterministic.
            type: string
          logs:
            description: >-
              The output of the application's logger (typed). May be
              non-deterministic.
            items:
              description: >-
                ABCIMessageLog defines a structure containing an indexed tx ABCI
                message log.
              properties:
                events:
                  description: >-
                    Events contains a slice of Event objects that were emitted
                    during some

                    execution.
                  items:
                    description: >-
                      StringEvent defines en Event object wrapper where all the
                      attributes

                      contain key/value pairs that are strings instead of raw
                      bytes.
                    properties:
                      attributes:
                        items:
                          description: >-
                            Attribute defines an attribute wrapper where the key
                            and value are

                            strings instead of raw bytes.
                          properties:
                            key:
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      type:
                        type: string
                    type: object
                  type: array
                log:
                  type: string
                msg_index:
                  format: int64
                  type: integer
              type: object
            type: array
          raw_log:
            description: |-
              The output of the application's logger (raw string). May be
              non-deterministic.
            type: string
          timestamp:
            description: >-
              Time of the previous block. For heights > 1, it's the weighted
              median of

              the timestamps of the valid votes in the block.LastCommit. For
              height == 1,

              it's genesis time.
            type: string
          tx:
            properties:
              type_url:
                type: string
              value:
                format: byte
                type: string
            type: object
            description: The request transaction bytes.
          txhash:
            description: The transaction hash.
            type: string
        type: object
    type: object
  cosmos.tx.v1beta1.Fee:
    description: >-
      Fee includes the amount of coins paid in fees and the maximum

      gas to be used by the transaction. The ratio yields an effective
      "gasprice",

      which must be above some miminum to be accepted into the mempool.
    properties:
      amount:
        items:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        title: amount is the amount of coins to be paid as a fee
        type: array
      gas_limit:
        format: uint64
        title: >-
          gas_limit is the maximum gas that can be used in transaction
          processing

          before an out of gas error occurs
        type: string
      granter:
        title: >-
          if set, the fee payer (either the first signer or the value of the
          payer field) requests that a fee grant be used

          to pay fees instead of the fee payer's own balance. If an appropriate
          fee grant does not exist or the chain does

          not support fee grants, this will fail
        type: string
      payer:
        description: >-
          if unset, the first signer is responsible for paying the fees. If set,
          the specified account must pay the fees.

          the payer must be a tx signer (and thus have signed this field in
          AuthInfo).

          setting this field does *not* change the ordering of required signers
          for the transaction.
        type: string
    type: object
  cosmos.tx.v1beta1.GetBlockWithTxsResponse:
    description: >-
      GetBlockWithTxsResponse is the response type for the
      Service.GetBlockWithTxs

      method.


      Since: cosmos-sdk 0.45.2
    properties:
      block:
        properties:
          data:
            properties:
              txs:
                description: >-
                  Txs that will be applied by state @ block.Height+1.

                  NOTE: not all txs here are valid.  We're just agreeing on the
                  order first.

                  This means that block.AppHash does not include these txs.
                items:
                  format: byte
                  type: string
                type: array
            title: Data contains the set of transactions included in the block
            type: object
          evidence:
            properties:
              evidence:
                items:
                  properties:
                    duplicate_vote_evidence:
                      description: >-
                        DuplicateVoteEvidence contains evidence of a validator
                        signed two conflicting votes.
                      properties:
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                        validator_power:
                          format: int64
                          type: string
                        vote_a:
                          description: >-
                            Vote represents a prevote or precommit vote from
                            validators for

                            consensus.
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: >-
                                Vote extension provided by the application. Only
                                valid for precommit

                                messages.
                              format: byte
                              type: string
                            extension_signature:
                              description: >-
                                Vote extension signature by the validator if
                                they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: >-
                                Vote signature by the validator if they
                                participated in consensus for the

                                associated block.
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: >-
                                SignedMsgType is a type of signed message in the
                                consensus.

                                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                              enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                        vote_b:
                          description: >-
                            Vote represents a prevote or precommit vote from
                            validators for

                            consensus.
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            extension:
                              description: >-
                                Vote extension provided by the application. Only
                                valid for precommit

                                messages.
                              format: byte
                              type: string
                            extension_signature:
                              description: >-
                                Vote extension signature by the validator if
                                they participated in

                                consensus for the associated block.

                                Only valid for precommit messages.
                              format: byte
                              type: string
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signature:
                              description: >-
                                Vote signature by the validator if they
                                participated in consensus for the

                                associated block.
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            type:
                              default: SIGNED_MSG_TYPE_UNKNOWN
                              description: >-
                                SignedMsgType is a type of signed message in the
                                consensus.

                                 - SIGNED_MSG_TYPE_PREVOTE: Votes
                                 - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                              enum:
                                - SIGNED_MSG_TYPE_UNKNOWN
                                - SIGNED_MSG_TYPE_PREVOTE
                                - SIGNED_MSG_TYPE_PRECOMMIT
                                - SIGNED_MSG_TYPE_PROPOSAL
                              type: string
                            validator_address:
                              format: byte
                              type: string
                            validator_index:
                              format: int32
                              type: integer
                          type: object
                      type: object
                    light_client_attack_evidence:
                      description: >-
                        LightClientAttackEvidence contains evidence of a set of
                        validators attempting to mislead a light client.
                      properties:
                        byzantine_validators:
                          items:
                            properties:
                              address:
                                format: byte
                                type: string
                              proposer_priority:
                                format: int64
                                type: string
                              pub_key:
                                properties:
                                  ed25519:
                                    format: byte
                                    type: string
                                  secp256k1:
                                    format: byte
                                    type: string
                                title: >-
                                  PublicKey defines the keys available for use
                                  with Validators
                                type: object
                              voting_power:
                                format: int64
                                type: string
                            type: object
                          type: array
                        common_height:
                          format: int64
                          type: string
                        conflicting_block:
                          properties:
                            signed_header:
                              properties:
                                commit:
                                  description: >-
                                    Commit contains the evidence that a block
                                    was committed by a set of validators.
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signatures:
                                      items:
                                        description: >-
                                          CommitSig is a part of the Vote included
                                          in a Commit.
                                        properties:
                                          block_id_flag:
                                            default: BLOCK_ID_FLAG_UNKNOWN
                                            enum:
                                              - BLOCK_ID_FLAG_UNKNOWN
                                              - BLOCK_ID_FLAG_ABSENT
                                              - BLOCK_ID_FLAG_COMMIT
                                              - BLOCK_ID_FLAG_NIL
                                            title: >-
                                              BlockIdFlag indicates which BlockID the
                                              signature is for
                                            type: string
                                          signature:
                                            format: byte
                                            type: string
                                          timestamp:
                                            format: date-time
                                            type: string
                                          validator_address:
                                            format: byte
                                            type: string
                                        type: object
                                      type: array
                                  type: object
                                header:
                                  description: >-
                                    Header defines the structure of a block
                                    header.
                                  properties:
                                    app_hash:
                                      format: byte
                                      type: string
                                    chain_id:
                                      type: string
                                    consensus_hash:
                                      format: byte
                                      type: string
                                    data_hash:
                                      format: byte
                                      type: string
                                    evidence_hash:
                                      format: byte
                                      title: consensus info
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    last_block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    last_commit_hash:
                                      format: byte
                                      title: hashes of block data
                                      type: string
                                    last_results_hash:
                                      format: byte
                                      type: string
                                    next_validators_hash:
                                      format: byte
                                      type: string
                                    proposer_address:
                                      format: byte
                                      type: string
                                    time:
                                      format: date-time
                                      type: string
                                    validators_hash:
                                      format: byte
                                      title: >-
                                        hashes from the app output from the prev
                                        block
                                      type: string
                                    version:
                                      title: basic block info
                                      description: >-
                                        Consensus captures the consensus rules
                                        for processing a block in the
                                        blockchain,

                                        including all blockchain data structures
                                        and the rules of the application's

                                        state transition machine.
                                      properties:
                                        app:
                                          format: uint64
                                          type: string
                                        block:
                                          format: uint64
                                          type: string
                                      type: object
                                  type: object
                              type: object
                            validator_set:
                              properties:
                                proposer:
                                  properties:
                                    address:
                                      format: byte
                                      type: string
                                    proposer_priority:
                                      format: int64
                                      type: string
                                    pub_key:
                                      properties:
                                        ed25519:
                                          format: byte
                                          type: string
                                        secp256k1:
                                          format: byte
                                          type: string
                                      title: >-
                                        PublicKey defines the keys available for
                                        use with Validators
                                      type: object
                                    voting_power:
                                      format: int64
                                      type: string
                                  type: object
                                total_voting_power:
                                  format: int64
                                  type: string
                                validators:
                                  items:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: >-
                                          PublicKey defines the keys available for
                                          use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  type: array
                              type: object
                          type: object
                        timestamp:
                          format: date-time
                          type: string
                        total_voting_power:
                          format: int64
                          type: string
                      type: object
                  type: object
                type: array
            type: object
          header:
            description: Header defines the structure of a block header.
            properties:
              app_hash:
                format: byte
                type: string
              chain_id:
                type: string
              consensus_hash:
                format: byte
                type: string
              data_hash:
                format: byte
                type: string
              evidence_hash:
                format: byte
                title: consensus info
                type: string
              height:
                format: int64
                type: string
              last_block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              last_commit_hash:
                format: byte
                title: hashes of block data
                type: string
              last_results_hash:
                format: byte
                type: string
              next_validators_hash:
                format: byte
                type: string
              proposer_address:
                format: byte
                type: string
              time:
                format: date-time
                type: string
              validators_hash:
                format: byte
                title: hashes from the app output from the prev block
                type: string
              version:
                title: basic block info
                description: >-
                  Consensus captures the consensus rules for processing a block
                  in the blockchain,

                  including all blockchain data structures and the rules of the
                  application's

                  state transition machine.
                properties:
                  app:
                    format: uint64
                    type: string
                  block:
                    format: uint64
                    type: string
                type: object
            type: object
          last_commit:
            description: >-
              Commit contains the evidence that a block was committed by a set
              of validators.
            properties:
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              height:
                format: int64
                type: string
              round:
                format: int32
                type: integer
              signatures:
                items:
                  description: CommitSig is a part of the Vote included in a Commit.
                  properties:
                    block_id_flag:
                      default: BLOCK_ID_FLAG_UNKNOWN
                      enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      title: BlockIdFlag indicates which BlockID the signature is for
                      type: string
                    signature:
                      format: byte
                      type: string
                    timestamp:
                      format: date-time
                      type: string
                    validator_address:
                      format: byte
                      type: string
                  type: object
                type: array
            type: object
        type: object
      block_id:
        properties:
          hash:
            format: byte
            type: string
          part_set_header:
            properties:
              hash:
                format: byte
                type: string
              total:
                format: int64
                type: integer
            title: PartsetHeader
            type: object
        title: BlockID
        type: object
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
      txs:
        description: txs are the transactions in the block.
        items:
          description: Tx is the standard type used for broadcasting transactions.
          properties:
            auth_info:
              title: >-
                auth_info is the authorization related content of the
                transaction,

                specifically signers, signer modes and fee
              description: >-
                AuthInfo describes the fee and signer modes that are used to
                sign a

                transaction.
              properties:
                fee:
                  description: >-
                    Fee is the fee and gas limit for the transaction. The first
                    signer is the

                    primary signer and the one which pays the fee. The fee can
                    be calculated

                    based on the cost of evaluating the body and doing signature
                    verification

                    of the signers. This can be estimated via simulation.
                  properties:
                    amount:
                      items:
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      title: amount is the amount of coins to be paid as a fee
                      type: array
                    gas_limit:
                      format: uint64
                      title: >-
                        gas_limit is the maximum gas that can be used in
                        transaction processing

                        before an out of gas error occurs
                      type: string
                    granter:
                      title: >-
                        if set, the fee payer (either the first signer or the
                        value of the payer field) requests that a fee grant be
                        used

                        to pay fees instead of the fee payer's own balance. If
                        an appropriate fee grant does not exist or the chain
                        does

                        not support fee grants, this will fail
                      type: string
                    payer:
                      description: >-
                        if unset, the first signer is responsible for paying the
                        fees. If set, the specified account must pay the fees.

                        the payer must be a tx signer (and thus have signed this
                        field in AuthInfo).

                        setting this field does *not* change the ordering of
                        required signers for the transaction.
                      type: string
                  type: object
                signer_infos:
                  description: >-
                    signer_infos defines the signing modes for the required
                    signers. The number

                    and order of elements must match the required signers from
                    TxBody's

                    messages. The first element is the primary signer and the
                    one which pays

                    the fee.
                  items:
                    description: >-
                      SignerInfo describes the public key and signing mode of a
                      single top-level

                      signer.
                    properties:
                      mode_info:
                        title: >-
                          mode_info describes the signing mode of the signer and
                          is a nested

                          structure to support nested multisig pubkey's
                        description: >-
                          ModeInfo describes the signing mode of a single or
                          nested multisig signer.
                        properties:
                          multi:
                            title: multi represents a nested multisig signer
                            properties:
                              bitarray:
                                title: >-
                                  bitarray specifies which keys within the
                                  multisig are signing
                                description: >-
                                  CompactBitArray is an implementation of a
                                  space efficient bit array.

                                  This is used to ensure that the encoded data
                                  takes up a minimal amount of

                                  space after proto encoding.

                                  This is not thread safe, and is not intended
                                  for concurrent usage.
                                properties:
                                  elems:
                                    format: byte
                                    type: string
                                  extra_bits_stored:
                                    format: int64
                                    type: integer
                                type: object
                              mode_infos:
                                items: {}
                                title: >-
                                  mode_infos is the corresponding modes of the
                                  signers of the multisig

                                  which could include nested multisig public
                                  keys
                                type: array
                            type: object
                          single:
                            title: single represents a single signer
                            properties:
                              mode:
                                title: mode is the signing mode of the single signer
                                default: SIGN_MODE_UNSPECIFIED
                                description: >-
                                  SignMode represents a signing mode with its
                                  own security guarantees.


                                  This enum should be considered a registry of
                                  all known sign modes

                                  in the Cosmos ecosystem. Apps are not expected
                                  to support all known

                                  sign modes. Apps that would like to support
                                  custom  sign modes are

                                  encouraged to open a small PR against this
                                  file to add a new case

                                  to this SignMode enum describing their sign
                                  mode so that different

                                  apps have a consistent version of this enum.

                                   - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                  rejected.
                                   - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                  verified with raw bytes from Tx.
                                   - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                  human-readable textual representation on top
                                  of the binary representation

                                  from SIGN_MODE_DIRECT.


                                  Since: cosmos-sdk 0.50
                                   - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                                  SignDocDirectAux. As opposed to
                                  SIGN_MODE_DIRECT, this sign mode does not

                                  require signers signing over other signers'
                                  `signer_info`.


                                  Since: cosmos-sdk 0.46
                                   - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                  Amino JSON and will be removed in the future.
                                   - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                  SDK. Ref:
                                  https://eips.ethereum.org/EIPS/eip-191


                                  Currently, SIGN_MODE_EIP_191 is registered as
                                  a SignMode enum variant,

                                  but is not implemented on the SDK by default.
                                  To enable EIP-191, you need

                                  to pass a custom `TxConfig` that has an
                                  implementation of

                                  `SignModeHandler` for EIP-191. The SDK may
                                  decide to fully support

                                  EIP-191 in the future.


                                  Since: cosmos-sdk 0.45.2
                                enum:
                                  - SIGN_MODE_UNSPECIFIED
                                  - SIGN_MODE_DIRECT
                                  - SIGN_MODE_TEXTUAL
                                  - SIGN_MODE_DIRECT_AUX
                                  - SIGN_MODE_LEGACY_AMINO_JSON
                                  - SIGN_MODE_EIP_191
                                type: string
                            type: object
                        type: object
                      public_key:
                        properties:
                          type_url:
                            type: string
                          value:
                            format: byte
                            type: string
                        type: object
                        description: >-
                          public_key is the public key of the signer. It is
                          optional for accounts

                          that already exist in state. If unset, the verifier
                          can use the required \

                          signer address for this position and lookup the public
                          key.
                      sequence:
                        description: >-
                          sequence is the sequence of the account, which
                          describes the

                          number of committed transactions signed by a given
                          address. It is used to

                          prevent replay attacks.
                        format: uint64
                        type: string
                    type: object
                  type: array
                tip:
                  description: >-
                    Tip is the optional tip used for transactions fees paid in
                    another denom.


                    This field is ignored if the chain didn't enable tips, i.e.
                    didn't add the

                    `TipDecorator` in its posthandler.


                    Since: cosmos-sdk 0.46
                  properties:
                    amount:
                      items:
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      title: amount is the amount of the tip
                      type: array
                    tipper:
                      title: tipper is the address of the account paying for the tip
                      type: string
                  type: object
              type: object
            body:
              title: body is the processable content of the transaction
              description: TxBody is the body of a transaction that all signers sign over.
              properties:
                extension_options:
                  items:
                    properties:
                      type_url:
                        type: string
                      value:
                        format: byte
                        type: string
                    type: object
                  title: >-
                    extension_options are arbitrary options that can be added by
                    chains

                    when the default options are not sufficient. If any of these
                    are present

                    and can't be handled, the transaction will be rejected
                  type: array
                memo:
                  description: >-
                    memo is any arbitrary note/comment to be added to the
                    transaction.

                    WARNING: in clients, any publicly exposed text should not be
                    called memo,

                    but should be called `note` instead (see
                    https://github.com/cosmos/cosmos-sdk/issues/9122).
                  type: string
                messages:
                  description: >-
                    messages is a list of messages to be executed. The required
                    signers of

                    those messages define the number and order of elements in
                    AuthInfo's

                    signer_infos and Tx's signatures. Each required signer
                    address is added to

                    the list only the first time it occurs.

                    By convention, the first required signer (usually from the
                    first message)

                    is referred to as the primary signer and pays the fee for
                    the whole

                    transaction.
                  items:
                    properties:
                      type_url:
                        type: string
                      value:
                        format: byte
                        type: string
                    type: object
                  type: array
                non_critical_extension_options:
                  items:
                    properties:
                      type_url:
                        type: string
                      value:
                        format: byte
                        type: string
                    type: object
                  title: >-
                    extension_options are arbitrary options that can be added by
                    chains

                    when the default options are not sufficient. If any of these
                    are present

                    and can't be handled, they will be ignored
                  type: array
                timeout_height:
                  format: uint64
                  title: >-
                    timeout is the block height after which this transaction
                    will not

                    be processed by the chain
                  type: string
              type: object
            signatures:
              description: >-
                signatures is a list of signatures that matches the length and
                order of

                AuthInfo's signer_infos to allow connecting signature meta
                information like

                public key and signing mode by position.
              items:
                format: byte
                type: string
              type: array
          type: object
        type: array
    type: object
  cosmos.tx.v1beta1.GetTxResponse:
    description: GetTxResponse is the response type for the Service.GetTx method.
    properties:
      tx:
        description: Tx is the standard type used for broadcasting transactions.
        properties:
          auth_info:
            title: |-
              auth_info is the authorization related content of the transaction,
              specifically signers, signer modes and fee
            description: >-
              AuthInfo describes the fee and signer modes that are used to sign
              a

              transaction.
            properties:
              fee:
                description: >-
                  Fee is the fee and gas limit for the transaction. The first
                  signer is the

                  primary signer and the one which pays the fee. The fee can be
                  calculated

                  based on the cost of evaluating the body and doing signature
                  verification

                  of the signers. This can be estimated via simulation.
                properties:
                  amount:
                    items:
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: amount is the amount of coins to be paid as a fee
                    type: array
                  gas_limit:
                    format: uint64
                    title: >-
                      gas_limit is the maximum gas that can be used in
                      transaction processing

                      before an out of gas error occurs
                    type: string
                  granter:
                    title: >-
                      if set, the fee payer (either the first signer or the
                      value of the payer field) requests that a fee grant be
                      used

                      to pay fees instead of the fee payer's own balance. If an
                      appropriate fee grant does not exist or the chain does

                      not support fee grants, this will fail
                    type: string
                  payer:
                    description: >-
                      if unset, the first signer is responsible for paying the
                      fees. If set, the specified account must pay the fees.

                      the payer must be a tx signer (and thus have signed this
                      field in AuthInfo).

                      setting this field does *not* change the ordering of
                      required signers for the transaction.
                    type: string
                type: object
              signer_infos:
                description: >-
                  signer_infos defines the signing modes for the required
                  signers. The number

                  and order of elements must match the required signers from
                  TxBody's

                  messages. The first element is the primary signer and the one
                  which pays

                  the fee.
                items:
                  description: >-
                    SignerInfo describes the public key and signing mode of a
                    single top-level

                    signer.
                  properties:
                    mode_info:
                      title: >-
                        mode_info describes the signing mode of the signer and
                        is a nested

                        structure to support nested multisig pubkey's
                      description: >-
                        ModeInfo describes the signing mode of a single or
                        nested multisig signer.
                      properties:
                        multi:
                          title: multi represents a nested multisig signer
                          properties:
                            bitarray:
                              title: >-
                                bitarray specifies which keys within the
                                multisig are signing
                              description: >-
                                CompactBitArray is an implementation of a space
                                efficient bit array.

                                This is used to ensure that the encoded data
                                takes up a minimal amount of

                                space after proto encoding.

                                This is not thread safe, and is not intended for
                                concurrent usage.
                              properties:
                                elems:
                                  format: byte
                                  type: string
                                extra_bits_stored:
                                  format: int64
                                  type: integer
                              type: object
                            mode_infos:
                              items: {}
                              title: >-
                                mode_infos is the corresponding modes of the
                                signers of the multisig

                                which could include nested multisig public keys
                              type: array
                          type: object
                        single:
                          title: single represents a single signer
                          properties:
                            mode:
                              title: mode is the signing mode of the single signer
                              default: SIGN_MODE_UNSPECIFIED
                              description: >-
                                SignMode represents a signing mode with its own
                                security guarantees.


                                This enum should be considered a registry of all
                                known sign modes

                                in the Cosmos ecosystem. Apps are not expected
                                to support all known

                                sign modes. Apps that would like to support
                                custom  sign modes are

                                encouraged to open a small PR against this file
                                to add a new case

                                to this SignMode enum describing their sign mode
                                so that different

                                apps have a consistent version of this enum.

                                 - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                rejected.
                                 - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                verified with raw bytes from Tx.
                                 - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                human-readable textual representation on top of
                                the binary representation

                                from SIGN_MODE_DIRECT.


                                Since: cosmos-sdk 0.50
                                 - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                                SignDocDirectAux. As opposed to
                                SIGN_MODE_DIRECT, this sign mode does not

                                require signers signing over other signers'
                                `signer_info`.


                                Since: cosmos-sdk 0.46
                                 - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                Amino JSON and will be removed in the future.
                                 - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                                Currently, SIGN_MODE_EIP_191 is registered as a
                                SignMode enum variant,

                                but is not implemented on the SDK by default. To
                                enable EIP-191, you need

                                to pass a custom `TxConfig` that has an
                                implementation of

                                `SignModeHandler` for EIP-191. The SDK may
                                decide to fully support

                                EIP-191 in the future.


                                Since: cosmos-sdk 0.45.2
                              enum:
                                - SIGN_MODE_UNSPECIFIED
                                - SIGN_MODE_DIRECT
                                - SIGN_MODE_TEXTUAL
                                - SIGN_MODE_DIRECT_AUX
                                - SIGN_MODE_LEGACY_AMINO_JSON
                                - SIGN_MODE_EIP_191
                              type: string
                          type: object
                      type: object
                    public_key:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                      description: >-
                        public_key is the public key of the signer. It is
                        optional for accounts

                        that already exist in state. If unset, the verifier can
                        use the required \

                        signer address for this position and lookup the public
                        key.
                    sequence:
                      description: >-
                        sequence is the sequence of the account, which describes
                        the

                        number of committed transactions signed by a given
                        address. It is used to

                        prevent replay attacks.
                      format: uint64
                      type: string
                  type: object
                type: array
              tip:
                description: >-
                  Tip is the optional tip used for transactions fees paid in
                  another denom.


                  This field is ignored if the chain didn't enable tips, i.e.
                  didn't add the

                  `TipDecorator` in its posthandler.


                  Since: cosmos-sdk 0.46
                properties:
                  amount:
                    items:
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: amount is the amount of the tip
                    type: array
                  tipper:
                    title: tipper is the address of the account paying for the tip
                    type: string
                type: object
            type: object
          body:
            title: body is the processable content of the transaction
            description: TxBody is the body of a transaction that all signers sign over.
            properties:
              extension_options:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                title: >-
                  extension_options are arbitrary options that can be added by
                  chains

                  when the default options are not sufficient. If any of these
                  are present

                  and can't be handled, the transaction will be rejected
                type: array
              memo:
                description: >-
                  memo is any arbitrary note/comment to be added to the
                  transaction.

                  WARNING: in clients, any publicly exposed text should not be
                  called memo,

                  but should be called `note` instead (see
                  https://github.com/cosmos/cosmos-sdk/issues/9122).
                type: string
              messages:
                description: >-
                  messages is a list of messages to be executed. The required
                  signers of

                  those messages define the number and order of elements in
                  AuthInfo's

                  signer_infos and Tx's signatures. Each required signer address
                  is added to

                  the list only the first time it occurs.

                  By convention, the first required signer (usually from the
                  first message)

                  is referred to as the primary signer and pays the fee for the
                  whole

                  transaction.
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              non_critical_extension_options:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                title: >-
                  extension_options are arbitrary options that can be added by
                  chains

                  when the default options are not sufficient. If any of these
                  are present

                  and can't be handled, they will be ignored
                type: array
              timeout_height:
                format: uint64
                title: >-
                  timeout is the block height after which this transaction will
                  not

                  be processed by the chain
                type: string
            type: object
          signatures:
            description: >-
              signatures is a list of signatures that matches the length and
              order of

              AuthInfo's signer_infos to allow connecting signature meta
              information like

              public key and signing mode by position.
            items:
              format: byte
              type: string
            type: array
        type: object
      tx_response:
        description: tx_response is the queried TxResponses.
        properties:
          code:
            description: Response code.
            format: int64
            type: integer
          codespace:
            title: Namespace for the Code
            type: string
          data:
            description: Result bytes, if any.
            type: string
          events:
            description: >-
              Events defines all the events emitted by processing a transaction.
              Note,

              these events include those emitted by processing all the messages
              and those

              emitted from the ante. Whereas Logs contains the events, with

              additional metadata, emitted only by processing the messages.


              Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
            items:
              description: >-
                Event allows application developers to attach additional
                information to

                ResponseFinalizeBlock and ResponseCheckTx.

                Later, transactions may be queried using these events.
              properties:
                attributes:
                  items:
                    description: >-
                      EventAttribute is a single key-value pair, associated with
                      an event.
                    properties:
                      index:
                        type: boolean
                      key:
                        type: string
                      value:
                        type: string
                    type: object
                  type: array
                type:
                  type: string
              type: object
            type: array
          gas_used:
            description: Amount of gas consumed by transaction.
            format: int64
            type: string
          gas_wanted:
            description: Amount of gas requested for transaction.
            format: int64
            type: string
          height:
            format: int64
            title: The block height
            type: string
          info:
            description: Additional information. May be non-deterministic.
            type: string
          logs:
            description: >-
              The output of the application's logger (typed). May be
              non-deterministic.
            items:
              description: >-
                ABCIMessageLog defines a structure containing an indexed tx ABCI
                message log.
              properties:
                events:
                  description: >-
                    Events contains a slice of Event objects that were emitted
                    during some

                    execution.
                  items:
                    description: >-
                      StringEvent defines en Event object wrapper where all the
                      attributes

                      contain key/value pairs that are strings instead of raw
                      bytes.
                    properties:
                      attributes:
                        items:
                          description: >-
                            Attribute defines an attribute wrapper where the key
                            and value are

                            strings instead of raw bytes.
                          properties:
                            key:
                              type: string
                            value:
                              type: string
                          type: object
                        type: array
                      type:
                        type: string
                    type: object
                  type: array
                log:
                  type: string
                msg_index:
                  format: int64
                  type: integer
              type: object
            type: array
          raw_log:
            description: |-
              The output of the application's logger (raw string). May be
              non-deterministic.
            type: string
          timestamp:
            description: >-
              Time of the previous block. For heights > 1, it's the weighted
              median of

              the timestamps of the valid votes in the block.LastCommit. For
              height == 1,

              it's genesis time.
            type: string
          tx:
            properties:
              type_url:
                type: string
              value:
                format: byte
                type: string
            type: object
            description: The request transaction bytes.
          txhash:
            description: The transaction hash.
            type: string
        type: object
    type: object
  cosmos.tx.v1beta1.GetTxsEventResponse:
    description: |-
      GetTxsEventResponse is the response type for the Service.TxsByEvents
      RPC method.
    properties:
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
      total:
        format: uint64
        title: total is total number of results available
        type: string
      tx_responses:
        description: tx_responses is the list of queried TxResponses.
        items:
          description: >-
            TxResponse defines a structure containing relevant tx data and
            metadata. The

            tags are stringified and the log is JSON decoded.
          properties:
            code:
              description: Response code.
              format: int64
              type: integer
            codespace:
              title: Namespace for the Code
              type: string
            data:
              description: Result bytes, if any.
              type: string
            events:
              description: >-
                Events defines all the events emitted by processing a
                transaction. Note,

                these events include those emitted by processing all the
                messages and those

                emitted from the ante. Whereas Logs contains the events, with

                additional metadata, emitted only by processing the messages.


                Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
              items:
                description: >-
                  Event allows application developers to attach additional
                  information to

                  ResponseFinalizeBlock and ResponseCheckTx.

                  Later, transactions may be queried using these events.
                properties:
                  attributes:
                    items:
                      description: >-
                        EventAttribute is a single key-value pair, associated
                        with an event.
                      properties:
                        index:
                          type: boolean
                        key:
                          type: string
                        value:
                          type: string
                      type: object
                    type: array
                  type:
                    type: string
                type: object
              type: array
            gas_used:
              description: Amount of gas consumed by transaction.
              format: int64
              type: string
            gas_wanted:
              description: Amount of gas requested for transaction.
              format: int64
              type: string
            height:
              format: int64
              title: The block height
              type: string
            info:
              description: Additional information. May be non-deterministic.
              type: string
            logs:
              description: >-
                The output of the application's logger (typed). May be
                non-deterministic.
              items:
                description: >-
                  ABCIMessageLog defines a structure containing an indexed tx
                  ABCI message log.
                properties:
                  events:
                    description: >-
                      Events contains a slice of Event objects that were emitted
                      during some

                      execution.
                    items:
                      description: >-
                        StringEvent defines en Event object wrapper where all
                        the attributes

                        contain key/value pairs that are strings instead of raw
                        bytes.
                      properties:
                        attributes:
                          items:
                            description: >-
                              Attribute defines an attribute wrapper where the
                              key and value are

                              strings instead of raw bytes.
                            properties:
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        type:
                          type: string
                      type: object
                    type: array
                  log:
                    type: string
                  msg_index:
                    format: int64
                    type: integer
                type: object
              type: array
            raw_log:
              description: |-
                The output of the application's logger (raw string). May be
                non-deterministic.
              type: string
            timestamp:
              description: >-
                Time of the previous block. For heights > 1, it's the weighted
                median of

                the timestamps of the valid votes in the block.LastCommit. For
                height == 1,

                it's genesis time.
              type: string
            tx:
              properties:
                type_url:
                  type: string
                value:
                  format: byte
                  type: string
              type: object
              description: The request transaction bytes.
            txhash:
              description: The transaction hash.
              type: string
          type: object
        type: array
      txs:
        description: txs is the list of queried transactions.
        items:
          description: Tx is the standard type used for broadcasting transactions.
          properties:
            auth_info:
              title: >-
                auth_info is the authorization related content of the
                transaction,

                specifically signers, signer modes and fee
              description: >-
                AuthInfo describes the fee and signer modes that are used to
                sign a

                transaction.
              properties:
                fee:
                  description: >-
                    Fee is the fee and gas limit for the transaction. The first
                    signer is the

                    primary signer and the one which pays the fee. The fee can
                    be calculated

                    based on the cost of evaluating the body and doing signature
                    verification

                    of the signers. This can be estimated via simulation.
                  properties:
                    amount:
                      items:
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      title: amount is the amount of coins to be paid as a fee
                      type: array
                    gas_limit:
                      format: uint64
                      title: >-
                        gas_limit is the maximum gas that can be used in
                        transaction processing

                        before an out of gas error occurs
                      type: string
                    granter:
                      title: >-
                        if set, the fee payer (either the first signer or the
                        value of the payer field) requests that a fee grant be
                        used

                        to pay fees instead of the fee payer's own balance. If
                        an appropriate fee grant does not exist or the chain
                        does

                        not support fee grants, this will fail
                      type: string
                    payer:
                      description: >-
                        if unset, the first signer is responsible for paying the
                        fees. If set, the specified account must pay the fees.

                        the payer must be a tx signer (and thus have signed this
                        field in AuthInfo).

                        setting this field does *not* change the ordering of
                        required signers for the transaction.
                      type: string
                  type: object
                signer_infos:
                  description: >-
                    signer_infos defines the signing modes for the required
                    signers. The number

                    and order of elements must match the required signers from
                    TxBody's

                    messages. The first element is the primary signer and the
                    one which pays

                    the fee.
                  items:
                    description: >-
                      SignerInfo describes the public key and signing mode of a
                      single top-level

                      signer.
                    properties:
                      mode_info:
                        title: >-
                          mode_info describes the signing mode of the signer and
                          is a nested

                          structure to support nested multisig pubkey's
                        description: >-
                          ModeInfo describes the signing mode of a single or
                          nested multisig signer.
                        properties:
                          multi:
                            title: multi represents a nested multisig signer
                            properties:
                              bitarray:
                                title: >-
                                  bitarray specifies which keys within the
                                  multisig are signing
                                description: >-
                                  CompactBitArray is an implementation of a
                                  space efficient bit array.

                                  This is used to ensure that the encoded data
                                  takes up a minimal amount of

                                  space after proto encoding.

                                  This is not thread safe, and is not intended
                                  for concurrent usage.
                                properties:
                                  elems:
                                    format: byte
                                    type: string
                                  extra_bits_stored:
                                    format: int64
                                    type: integer
                                type: object
                              mode_infos:
                                items: {}
                                title: >-
                                  mode_infos is the corresponding modes of the
                                  signers of the multisig

                                  which could include nested multisig public
                                  keys
                                type: array
                            type: object
                          single:
                            title: single represents a single signer
                            properties:
                              mode:
                                title: mode is the signing mode of the single signer
                                default: SIGN_MODE_UNSPECIFIED
                                description: >-
                                  SignMode represents a signing mode with its
                                  own security guarantees.


                                  This enum should be considered a registry of
                                  all known sign modes

                                  in the Cosmos ecosystem. Apps are not expected
                                  to support all known

                                  sign modes. Apps that would like to support
                                  custom  sign modes are

                                  encouraged to open a small PR against this
                                  file to add a new case

                                  to this SignMode enum describing their sign
                                  mode so that different

                                  apps have a consistent version of this enum.

                                   - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                  rejected.
                                   - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                  verified with raw bytes from Tx.
                                   - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                  human-readable textual representation on top
                                  of the binary representation

                                  from SIGN_MODE_DIRECT.


                                  Since: cosmos-sdk 0.50
                                   - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                                  SignDocDirectAux. As opposed to
                                  SIGN_MODE_DIRECT, this sign mode does not

                                  require signers signing over other signers'
                                  `signer_info`.


                                  Since: cosmos-sdk 0.46
                                   - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                  Amino JSON and will be removed in the future.
                                   - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                  SDK. Ref:
                                  https://eips.ethereum.org/EIPS/eip-191


                                  Currently, SIGN_MODE_EIP_191 is registered as
                                  a SignMode enum variant,

                                  but is not implemented on the SDK by default.
                                  To enable EIP-191, you need

                                  to pass a custom `TxConfig` that has an
                                  implementation of

                                  `SignModeHandler` for EIP-191. The SDK may
                                  decide to fully support

                                  EIP-191 in the future.


                                  Since: cosmos-sdk 0.45.2
                                enum:
                                  - SIGN_MODE_UNSPECIFIED
                                  - SIGN_MODE_DIRECT
                                  - SIGN_MODE_TEXTUAL
                                  - SIGN_MODE_DIRECT_AUX
                                  - SIGN_MODE_LEGACY_AMINO_JSON
                                  - SIGN_MODE_EIP_191
                                type: string
                            type: object
                        type: object
                      public_key:
                        properties:
                          type_url:
                            type: string
                          value:
                            format: byte
                            type: string
                        type: object
                        description: >-
                          public_key is the public key of the signer. It is
                          optional for accounts

                          that already exist in state. If unset, the verifier
                          can use the required \

                          signer address for this position and lookup the public
                          key.
                      sequence:
                        description: >-
                          sequence is the sequence of the account, which
                          describes the

                          number of committed transactions signed by a given
                          address. It is used to

                          prevent replay attacks.
                        format: uint64
                        type: string
                    type: object
                  type: array
                tip:
                  description: >-
                    Tip is the optional tip used for transactions fees paid in
                    another denom.


                    This field is ignored if the chain didn't enable tips, i.e.
                    didn't add the

                    `TipDecorator` in its posthandler.


                    Since: cosmos-sdk 0.46
                  properties:
                    amount:
                      items:
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      title: amount is the amount of the tip
                      type: array
                    tipper:
                      title: tipper is the address of the account paying for the tip
                      type: string
                  type: object
              type: object
            body:
              title: body is the processable content of the transaction
              description: TxBody is the body of a transaction that all signers sign over.
              properties:
                extension_options:
                  items:
                    properties:
                      type_url:
                        type: string
                      value:
                        format: byte
                        type: string
                    type: object
                  title: >-
                    extension_options are arbitrary options that can be added by
                    chains

                    when the default options are not sufficient. If any of these
                    are present

                    and can't be handled, the transaction will be rejected
                  type: array
                memo:
                  description: >-
                    memo is any arbitrary note/comment to be added to the
                    transaction.

                    WARNING: in clients, any publicly exposed text should not be
                    called memo,

                    but should be called `note` instead (see
                    https://github.com/cosmos/cosmos-sdk/issues/9122).
                  type: string
                messages:
                  description: >-
                    messages is a list of messages to be executed. The required
                    signers of

                    those messages define the number and order of elements in
                    AuthInfo's

                    signer_infos and Tx's signatures. Each required signer
                    address is added to

                    the list only the first time it occurs.

                    By convention, the first required signer (usually from the
                    first message)

                    is referred to as the primary signer and pays the fee for
                    the whole

                    transaction.
                  items:
                    properties:
                      type_url:
                        type: string
                      value:
                        format: byte
                        type: string
                    type: object
                  type: array
                non_critical_extension_options:
                  items:
                    properties:
                      type_url:
                        type: string
                      value:
                        format: byte
                        type: string
                    type: object
                  title: >-
                    extension_options are arbitrary options that can be added by
                    chains

                    when the default options are not sufficient. If any of these
                    are present

                    and can't be handled, they will be ignored
                  type: array
                timeout_height:
                  format: uint64
                  title: >-
                    timeout is the block height after which this transaction
                    will not

                    be processed by the chain
                  type: string
              type: object
            signatures:
              description: >-
                signatures is a list of signatures that matches the length and
                order of

                AuthInfo's signer_infos to allow connecting signature meta
                information like

                public key and signing mode by position.
              items:
                format: byte
                type: string
              type: array
          type: object
        type: array
    type: object
  cosmos.tx.v1beta1.ModeInfo:
    description: ModeInfo describes the signing mode of a single or nested multisig signer.
    properties:
      multi:
        title: multi represents a nested multisig signer
        properties:
          bitarray:
            title: bitarray specifies which keys within the multisig are signing
            description: >-
              CompactBitArray is an implementation of a space efficient bit
              array.

              This is used to ensure that the encoded data takes up a minimal
              amount of

              space after proto encoding.

              This is not thread safe, and is not intended for concurrent usage.
            properties:
              elems:
                format: byte
                type: string
              extra_bits_stored:
                format: int64
                type: integer
            type: object
          mode_infos:
            items: {}
            title: >-
              mode_infos is the corresponding modes of the signers of the
              multisig

              which could include nested multisig public keys
            type: array
        type: object
      single:
        title: single represents a single signer
        properties:
          mode:
            title: mode is the signing mode of the single signer
            default: SIGN_MODE_UNSPECIFIED
            description: >-
              SignMode represents a signing mode with its own security
              guarantees.


              This enum should be considered a registry of all known sign modes

              in the Cosmos ecosystem. Apps are not expected to support all
              known

              sign modes. Apps that would like to support custom  sign modes are

              encouraged to open a small PR against this file to add a new case

              to this SignMode enum describing their sign mode so that different

              apps have a consistent version of this enum.

               - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
              rejected.
               - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
              verified with raw bytes from Tx.
               - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
              human-readable textual representation on top of the binary
              representation

              from SIGN_MODE_DIRECT.


              Since: cosmos-sdk 0.50
               - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
              SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode
              does not

              require signers signing over other signers' `signer_info`.


              Since: cosmos-sdk 0.46
               - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
              Amino JSON and will be removed in the future.
               - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
              SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


              Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum
              variant,

              but is not implemented on the SDK by default. To enable EIP-191,
              you need

              to pass a custom `TxConfig` that has an implementation of

              `SignModeHandler` for EIP-191. The SDK may decide to fully support

              EIP-191 in the future.


              Since: cosmos-sdk 0.45.2
            enum:
              - SIGN_MODE_UNSPECIFIED
              - SIGN_MODE_DIRECT
              - SIGN_MODE_TEXTUAL
              - SIGN_MODE_DIRECT_AUX
              - SIGN_MODE_LEGACY_AMINO_JSON
              - SIGN_MODE_EIP_191
            type: string
        type: object
    type: object
  cosmos.tx.v1beta1.ModeInfo.Multi:
    properties:
      bitarray:
        title: bitarray specifies which keys within the multisig are signing
        description: >-
          CompactBitArray is an implementation of a space efficient bit array.

          This is used to ensure that the encoded data takes up a minimal amount
          of

          space after proto encoding.

          This is not thread safe, and is not intended for concurrent usage.
        properties:
          elems:
            format: byte
            type: string
          extra_bits_stored:
            format: int64
            type: integer
        type: object
      mode_infos:
        items: {}
        title: |-
          mode_infos is the corresponding modes of the signers of the multisig
          which could include nested multisig public keys
        type: array
    title: Multi is the mode info for a multisig public key
    type: object
  cosmos.tx.v1beta1.ModeInfo.Single:
    properties:
      mode:
        title: mode is the signing mode of the single signer
        default: SIGN_MODE_UNSPECIFIED
        description: >-
          SignMode represents a signing mode with its own security guarantees.


          This enum should be considered a registry of all known sign modes

          in the Cosmos ecosystem. Apps are not expected to support all known

          sign modes. Apps that would like to support custom  sign modes are

          encouraged to open a small PR against this file to add a new case

          to this SignMode enum describing their sign mode so that different

          apps have a consistent version of this enum.

           - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
          rejected.
           - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
          verified with raw bytes from Tx.
           - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
          human-readable textual representation on top of the binary
          representation

          from SIGN_MODE_DIRECT.


          Since: cosmos-sdk 0.50
           - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
          SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign mode does
          not

          require signers signing over other signers' `signer_info`.


          Since: cosmos-sdk 0.46
           - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
          Amino JSON and will be removed in the future.
           - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
          SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


          Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum variant,

          but is not implemented on the SDK by default. To enable EIP-191, you
          need

          to pass a custom `TxConfig` that has an implementation of

          `SignModeHandler` for EIP-191. The SDK may decide to fully support

          EIP-191 in the future.


          Since: cosmos-sdk 0.45.2
        enum:
          - SIGN_MODE_UNSPECIFIED
          - SIGN_MODE_DIRECT
          - SIGN_MODE_TEXTUAL
          - SIGN_MODE_DIRECT_AUX
          - SIGN_MODE_LEGACY_AMINO_JSON
          - SIGN_MODE_EIP_191
        type: string
    title: |-
      Single is the mode info for a single signer. It is structured as a message
      to allow for additional fields such as locale for SIGN_MODE_TEXTUAL in the
      future
    type: object
  cosmos.tx.v1beta1.OrderBy:
    default: ORDER_BY_UNSPECIFIED
    description: >-
      - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting
      order. OrderBy defaults

      to ASC in this case.
       - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
       - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
    enum:
      - ORDER_BY_UNSPECIFIED
      - ORDER_BY_ASC
      - ORDER_BY_DESC
    title: OrderBy defines the sorting order
    type: string
  cosmos.tx.v1beta1.SignerInfo:
    description: |-
      SignerInfo describes the public key and signing mode of a single top-level
      signer.
    properties:
      mode_info:
        title: |-
          mode_info describes the signing mode of the signer and is a nested
          structure to support nested multisig pubkey's
        description: >-
          ModeInfo describes the signing mode of a single or nested multisig
          signer.
        properties:
          multi:
            title: multi represents a nested multisig signer
            properties:
              bitarray:
                title: bitarray specifies which keys within the multisig are signing
                description: >-
                  CompactBitArray is an implementation of a space efficient bit
                  array.

                  This is used to ensure that the encoded data takes up a
                  minimal amount of

                  space after proto encoding.

                  This is not thread safe, and is not intended for concurrent
                  usage.
                properties:
                  elems:
                    format: byte
                    type: string
                  extra_bits_stored:
                    format: int64
                    type: integer
                type: object
              mode_infos:
                items: {}
                title: >-
                  mode_infos is the corresponding modes of the signers of the
                  multisig

                  which could include nested multisig public keys
                type: array
            type: object
          single:
            title: single represents a single signer
            properties:
              mode:
                title: mode is the signing mode of the single signer
                default: SIGN_MODE_UNSPECIFIED
                description: >-
                  SignMode represents a signing mode with its own security
                  guarantees.


                  This enum should be considered a registry of all known sign
                  modes

                  in the Cosmos ecosystem. Apps are not expected to support all
                  known

                  sign modes. Apps that would like to support custom  sign modes
                  are

                  encouraged to open a small PR against this file to add a new
                  case

                  to this SignMode enum describing their sign mode so that
                  different

                  apps have a consistent version of this enum.

                   - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                  rejected.
                   - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                  verified with raw bytes from Tx.
                   - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                  human-readable textual representation on top of the binary
                  representation

                  from SIGN_MODE_DIRECT.


                  Since: cosmos-sdk 0.50
                   - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                  SignDocDirectAux. As opposed to SIGN_MODE_DIRECT, this sign
                  mode does not

                  require signers signing over other signers' `signer_info`.


                  Since: cosmos-sdk 0.46
                   - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                  Amino JSON and will be removed in the future.
                   - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                  SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                  Currently, SIGN_MODE_EIP_191 is registered as a SignMode enum
                  variant,

                  but is not implemented on the SDK by default. To enable
                  EIP-191, you need

                  to pass a custom `TxConfig` that has an implementation of

                  `SignModeHandler` for EIP-191. The SDK may decide to fully
                  support

                  EIP-191 in the future.


                  Since: cosmos-sdk 0.45.2
                enum:
                  - SIGN_MODE_UNSPECIFIED
                  - SIGN_MODE_DIRECT
                  - SIGN_MODE_TEXTUAL
                  - SIGN_MODE_DIRECT_AUX
                  - SIGN_MODE_LEGACY_AMINO_JSON
                  - SIGN_MODE_EIP_191
                type: string
            type: object
        type: object
      public_key:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
        description: >-
          public_key is the public key of the signer. It is optional for
          accounts

          that already exist in state. If unset, the verifier can use the
          required \

          signer address for this position and lookup the public key.
      sequence:
        description: >-
          sequence is the sequence of the account, which describes the

          number of committed transactions signed by a given address. It is used
          to

          prevent replay attacks.
        format: uint64
        type: string
    type: object
  cosmos.tx.v1beta1.SimulateRequest:
    description: |-
      SimulateRequest is the request type for the Service.Simulate
      RPC method.
    properties:
      tx:
        description: Tx is the standard type used for broadcasting transactions.
        properties:
          auth_info:
            title: |-
              auth_info is the authorization related content of the transaction,
              specifically signers, signer modes and fee
            description: >-
              AuthInfo describes the fee and signer modes that are used to sign
              a

              transaction.
            properties:
              fee:
                description: >-
                  Fee is the fee and gas limit for the transaction. The first
                  signer is the

                  primary signer and the one which pays the fee. The fee can be
                  calculated

                  based on the cost of evaluating the body and doing signature
                  verification

                  of the signers. This can be estimated via simulation.
                properties:
                  amount:
                    items:
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: amount is the amount of coins to be paid as a fee
                    type: array
                  gas_limit:
                    format: uint64
                    title: >-
                      gas_limit is the maximum gas that can be used in
                      transaction processing

                      before an out of gas error occurs
                    type: string
                  granter:
                    title: >-
                      if set, the fee payer (either the first signer or the
                      value of the payer field) requests that a fee grant be
                      used

                      to pay fees instead of the fee payer's own balance. If an
                      appropriate fee grant does not exist or the chain does

                      not support fee grants, this will fail
                    type: string
                  payer:
                    description: >-
                      if unset, the first signer is responsible for paying the
                      fees. If set, the specified account must pay the fees.

                      the payer must be a tx signer (and thus have signed this
                      field in AuthInfo).

                      setting this field does *not* change the ordering of
                      required signers for the transaction.
                    type: string
                type: object
              signer_infos:
                description: >-
                  signer_infos defines the signing modes for the required
                  signers. The number

                  and order of elements must match the required signers from
                  TxBody's

                  messages. The first element is the primary signer and the one
                  which pays

                  the fee.
                items:
                  description: >-
                    SignerInfo describes the public key and signing mode of a
                    single top-level

                    signer.
                  properties:
                    mode_info:
                      title: >-
                        mode_info describes the signing mode of the signer and
                        is a nested

                        structure to support nested multisig pubkey's
                      description: >-
                        ModeInfo describes the signing mode of a single or
                        nested multisig signer.
                      properties:
                        multi:
                          title: multi represents a nested multisig signer
                          properties:
                            bitarray:
                              title: >-
                                bitarray specifies which keys within the
                                multisig are signing
                              description: >-
                                CompactBitArray is an implementation of a space
                                efficient bit array.

                                This is used to ensure that the encoded data
                                takes up a minimal amount of

                                space after proto encoding.

                                This is not thread safe, and is not intended for
                                concurrent usage.
                              properties:
                                elems:
                                  format: byte
                                  type: string
                                extra_bits_stored:
                                  format: int64
                                  type: integer
                              type: object
                            mode_infos:
                              items: {}
                              title: >-
                                mode_infos is the corresponding modes of the
                                signers of the multisig

                                which could include nested multisig public keys
                              type: array
                          type: object
                        single:
                          title: single represents a single signer
                          properties:
                            mode:
                              title: mode is the signing mode of the single signer
                              default: SIGN_MODE_UNSPECIFIED
                              description: >-
                                SignMode represents a signing mode with its own
                                security guarantees.


                                This enum should be considered a registry of all
                                known sign modes

                                in the Cosmos ecosystem. Apps are not expected
                                to support all known

                                sign modes. Apps that would like to support
                                custom  sign modes are

                                encouraged to open a small PR against this file
                                to add a new case

                                to this SignMode enum describing their sign mode
                                so that different

                                apps have a consistent version of this enum.

                                 - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                rejected.
                                 - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                verified with raw bytes from Tx.
                                 - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                human-readable textual representation on top of
                                the binary representation

                                from SIGN_MODE_DIRECT.


                                Since: cosmos-sdk 0.50
                                 - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                                SignDocDirectAux. As opposed to
                                SIGN_MODE_DIRECT, this sign mode does not

                                require signers signing over other signers'
                                `signer_info`.


                                Since: cosmos-sdk 0.46
                                 - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                Amino JSON and will be removed in the future.
                                 - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                                Currently, SIGN_MODE_EIP_191 is registered as a
                                SignMode enum variant,

                                but is not implemented on the SDK by default. To
                                enable EIP-191, you need

                                to pass a custom `TxConfig` that has an
                                implementation of

                                `SignModeHandler` for EIP-191. The SDK may
                                decide to fully support

                                EIP-191 in the future.


                                Since: cosmos-sdk 0.45.2
                              enum:
                                - SIGN_MODE_UNSPECIFIED
                                - SIGN_MODE_DIRECT
                                - SIGN_MODE_TEXTUAL
                                - SIGN_MODE_DIRECT_AUX
                                - SIGN_MODE_LEGACY_AMINO_JSON
                                - SIGN_MODE_EIP_191
                              type: string
                          type: object
                      type: object
                    public_key:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                      description: >-
                        public_key is the public key of the signer. It is
                        optional for accounts

                        that already exist in state. If unset, the verifier can
                        use the required \

                        signer address for this position and lookup the public
                        key.
                    sequence:
                      description: >-
                        sequence is the sequence of the account, which describes
                        the

                        number of committed transactions signed by a given
                        address. It is used to

                        prevent replay attacks.
                      format: uint64
                      type: string
                  type: object
                type: array
              tip:
                description: >-
                  Tip is the optional tip used for transactions fees paid in
                  another denom.


                  This field is ignored if the chain didn't enable tips, i.e.
                  didn't add the

                  `TipDecorator` in its posthandler.


                  Since: cosmos-sdk 0.46
                properties:
                  amount:
                    items:
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: amount is the amount of the tip
                    type: array
                  tipper:
                    title: tipper is the address of the account paying for the tip
                    type: string
                type: object
            type: object
          body:
            title: body is the processable content of the transaction
            description: TxBody is the body of a transaction that all signers sign over.
            properties:
              extension_options:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                title: >-
                  extension_options are arbitrary options that can be added by
                  chains

                  when the default options are not sufficient. If any of these
                  are present

                  and can't be handled, the transaction will be rejected
                type: array
              memo:
                description: >-
                  memo is any arbitrary note/comment to be added to the
                  transaction.

                  WARNING: in clients, any publicly exposed text should not be
                  called memo,

                  but should be called `note` instead (see
                  https://github.com/cosmos/cosmos-sdk/issues/9122).
                type: string
              messages:
                description: >-
                  messages is a list of messages to be executed. The required
                  signers of

                  those messages define the number and order of elements in
                  AuthInfo's

                  signer_infos and Tx's signatures. Each required signer address
                  is added to

                  the list only the first time it occurs.

                  By convention, the first required signer (usually from the
                  first message)

                  is referred to as the primary signer and pays the fee for the
                  whole

                  transaction.
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              non_critical_extension_options:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                title: >-
                  extension_options are arbitrary options that can be added by
                  chains

                  when the default options are not sufficient. If any of these
                  are present

                  and can't be handled, they will be ignored
                type: array
              timeout_height:
                format: uint64
                title: >-
                  timeout is the block height after which this transaction will
                  not

                  be processed by the chain
                type: string
            type: object
          signatures:
            description: >-
              signatures is a list of signatures that matches the length and
              order of

              AuthInfo's signer_infos to allow connecting signature meta
              information like

              public key and signing mode by position.
            items:
              format: byte
              type: string
            type: array
        type: object
      tx_bytes:
        description: |-
          tx_bytes is the raw transaction.

          Since: cosmos-sdk 0.43
        format: byte
        type: string
    type: object
  cosmos.tx.v1beta1.SimulateResponse:
    description: |-
      SimulateResponse is the response type for the
      Service.SimulateRPC method.
    properties:
      gas_info:
        description: gas_info is the information about gas used in the simulation.
        properties:
          gas_used:
            description: GasUsed is the amount of gas actually consumed.
            format: uint64
            type: string
          gas_wanted:
            description: >-
              GasWanted is the maximum units of work we allow this tx to
              perform.
            format: uint64
            type: string
        type: object
      result:
        description: result is the result of the simulation.
        properties:
          data:
            description: >-
              Data is any data returned from message or handler execution. It
              MUST be

              length prefixed in order to separate data from multiple message
              executions.

              Deprecated. This field is still populated, but prefer msg_response
              instead

              because it also contains the Msg response typeURL.
            format: byte
            type: string
          events:
            description: >-
              Events contains a slice of Event objects that were emitted during
              message

              or handler execution.
            items:
              description: >-
                Event allows application developers to attach additional
                information to

                ResponseFinalizeBlock and ResponseCheckTx.

                Later, transactions may be queried using these events.
              properties:
                attributes:
                  items:
                    description: >-
                      EventAttribute is a single key-value pair, associated with
                      an event.
                    properties:
                      index:
                        type: boolean
                      key:
                        type: string
                      value:
                        type: string
                    type: object
                  type: array
                type:
                  type: string
              type: object
            type: array
          log:
            description: >-
              Log contains the log information from message or handler
              execution.
            type: string
          msg_responses:
            description: >-
              msg_responses contains the Msg handler responses type packed in
              Anys.


              Since: cosmos-sdk 0.46
            items:
              properties:
                type_url:
                  type: string
                value:
                  format: byte
                  type: string
              type: object
            type: array
        type: object
    type: object
  cosmos.tx.v1beta1.Tip:
    description: |-
      Tip is the tip used for meta-transactions.

      Since: cosmos-sdk 0.46
    properties:
      amount:
        items:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        title: amount is the amount of the tip
        type: array
      tipper:
        title: tipper is the address of the account paying for the tip
        type: string
    type: object
  cosmos.tx.v1beta1.Tx:
    description: Tx is the standard type used for broadcasting transactions.
    properties:
      auth_info:
        title: |-
          auth_info is the authorization related content of the transaction,
          specifically signers, signer modes and fee
        description: |-
          AuthInfo describes the fee and signer modes that are used to sign a
          transaction.
        properties:
          fee:
            description: >-
              Fee is the fee and gas limit for the transaction. The first signer
              is the

              primary signer and the one which pays the fee. The fee can be
              calculated

              based on the cost of evaluating the body and doing signature
              verification

              of the signers. This can be estimated via simulation.
            properties:
              amount:
                items:
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: amount is the amount of coins to be paid as a fee
                type: array
              gas_limit:
                format: uint64
                title: >-
                  gas_limit is the maximum gas that can be used in transaction
                  processing

                  before an out of gas error occurs
                type: string
              granter:
                title: >-
                  if set, the fee payer (either the first signer or the value of
                  the payer field) requests that a fee grant be used

                  to pay fees instead of the fee payer's own balance. If an
                  appropriate fee grant does not exist or the chain does

                  not support fee grants, this will fail
                type: string
              payer:
                description: >-
                  if unset, the first signer is responsible for paying the fees.
                  If set, the specified account must pay the fees.

                  the payer must be a tx signer (and thus have signed this field
                  in AuthInfo).

                  setting this field does *not* change the ordering of required
                  signers for the transaction.
                type: string
            type: object
          signer_infos:
            description: >-
              signer_infos defines the signing modes for the required signers.
              The number

              and order of elements must match the required signers from
              TxBody's

              messages. The first element is the primary signer and the one
              which pays

              the fee.
            items:
              description: >-
                SignerInfo describes the public key and signing mode of a single
                top-level

                signer.
              properties:
                mode_info:
                  title: >-
                    mode_info describes the signing mode of the signer and is a
                    nested

                    structure to support nested multisig pubkey's
                  description: >-
                    ModeInfo describes the signing mode of a single or nested
                    multisig signer.
                  properties:
                    multi:
                      title: multi represents a nested multisig signer
                      properties:
                        bitarray:
                          title: >-
                            bitarray specifies which keys within the multisig
                            are signing
                          description: >-
                            CompactBitArray is an implementation of a space
                            efficient bit array.

                            This is used to ensure that the encoded data takes
                            up a minimal amount of

                            space after proto encoding.

                            This is not thread safe, and is not intended for
                            concurrent usage.
                          properties:
                            elems:
                              format: byte
                              type: string
                            extra_bits_stored:
                              format: int64
                              type: integer
                          type: object
                        mode_infos:
                          items: {}
                          title: >-
                            mode_infos is the corresponding modes of the signers
                            of the multisig

                            which could include nested multisig public keys
                          type: array
                      type: object
                    single:
                      title: single represents a single signer
                      properties:
                        mode:
                          title: mode is the signing mode of the single signer
                          default: SIGN_MODE_UNSPECIFIED
                          description: >-
                            SignMode represents a signing mode with its own
                            security guarantees.


                            This enum should be considered a registry of all
                            known sign modes

                            in the Cosmos ecosystem. Apps are not expected to
                            support all known

                            sign modes. Apps that would like to support custom 
                            sign modes are

                            encouraged to open a small PR against this file to
                            add a new case

                            to this SignMode enum describing their sign mode so
                            that different

                            apps have a consistent version of this enum.

                             - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                            rejected.
                             - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                            verified with raw bytes from Tx.
                             - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                            human-readable textual representation on top of the
                            binary representation

                            from SIGN_MODE_DIRECT.


                            Since: cosmos-sdk 0.50
                             - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                            SignDocDirectAux. As opposed to SIGN_MODE_DIRECT,
                            this sign mode does not

                            require signers signing over other signers'
                            `signer_info`.


                            Since: cosmos-sdk 0.46
                             - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                            Amino JSON and will be removed in the future.
                             - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                            SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                            Currently, SIGN_MODE_EIP_191 is registered as a
                            SignMode enum variant,

                            but is not implemented on the SDK by default. To
                            enable EIP-191, you need

                            to pass a custom `TxConfig` that has an
                            implementation of

                            `SignModeHandler` for EIP-191. The SDK may decide to
                            fully support

                            EIP-191 in the future.


                            Since: cosmos-sdk 0.45.2
                          enum:
                            - SIGN_MODE_UNSPECIFIED
                            - SIGN_MODE_DIRECT
                            - SIGN_MODE_TEXTUAL
                            - SIGN_MODE_DIRECT_AUX
                            - SIGN_MODE_LEGACY_AMINO_JSON
                            - SIGN_MODE_EIP_191
                          type: string
                      type: object
                  type: object
                public_key:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                  description: >-
                    public_key is the public key of the signer. It is optional
                    for accounts

                    that already exist in state. If unset, the verifier can use
                    the required \

                    signer address for this position and lookup the public key.
                sequence:
                  description: >-
                    sequence is the sequence of the account, which describes the

                    number of committed transactions signed by a given address.
                    It is used to

                    prevent replay attacks.
                  format: uint64
                  type: string
              type: object
            type: array
          tip:
            description: >-
              Tip is the optional tip used for transactions fees paid in another
              denom.


              This field is ignored if the chain didn't enable tips, i.e. didn't
              add the

              `TipDecorator` in its posthandler.


              Since: cosmos-sdk 0.46
            properties:
              amount:
                items:
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: amount is the amount of the tip
                type: array
              tipper:
                title: tipper is the address of the account paying for the tip
                type: string
            type: object
        type: object
      body:
        title: body is the processable content of the transaction
        description: TxBody is the body of a transaction that all signers sign over.
        properties:
          extension_options:
            items:
              properties:
                type_url:
                  type: string
                value:
                  format: byte
                  type: string
              type: object
            title: >-
              extension_options are arbitrary options that can be added by
              chains

              when the default options are not sufficient. If any of these are
              present

              and can't be handled, the transaction will be rejected
            type: array
          memo:
            description: >-
              memo is any arbitrary note/comment to be added to the transaction.

              WARNING: in clients, any publicly exposed text should not be
              called memo,

              but should be called `note` instead (see
              https://github.com/cosmos/cosmos-sdk/issues/9122).
            type: string
          messages:
            description: >-
              messages is a list of messages to be executed. The required
              signers of

              those messages define the number and order of elements in
              AuthInfo's

              signer_infos and Tx's signatures. Each required signer address is
              added to

              the list only the first time it occurs.

              By convention, the first required signer (usually from the first
              message)

              is referred to as the primary signer and pays the fee for the
              whole

              transaction.
            items:
              properties:
                type_url:
                  type: string
                value:
                  format: byte
                  type: string
              type: object
            type: array
          non_critical_extension_options:
            items:
              properties:
                type_url:
                  type: string
                value:
                  format: byte
                  type: string
              type: object
            title: >-
              extension_options are arbitrary options that can be added by
              chains

              when the default options are not sufficient. If any of these are
              present

              and can't be handled, they will be ignored
            type: array
          timeout_height:
            format: uint64
            title: |-
              timeout is the block height after which this transaction will not
              be processed by the chain
            type: string
        type: object
      signatures:
        description: >-
          signatures is a list of signatures that matches the length and order
          of

          AuthInfo's signer_infos to allow connecting signature meta information
          like

          public key and signing mode by position.
        items:
          format: byte
          type: string
        type: array
    type: object
  cosmos.tx.v1beta1.TxBody:
    description: TxBody is the body of a transaction that all signers sign over.
    properties:
      extension_options:
        items:
          properties:
            type_url:
              type: string
            value:
              format: byte
              type: string
          type: object
        title: >-
          extension_options are arbitrary options that can be added by chains

          when the default options are not sufficient. If any of these are
          present

          and can't be handled, the transaction will be rejected
        type: array
      memo:
        description: >-
          memo is any arbitrary note/comment to be added to the transaction.

          WARNING: in clients, any publicly exposed text should not be called
          memo,

          but should be called `note` instead (see
          https://github.com/cosmos/cosmos-sdk/issues/9122).
        type: string
      messages:
        description: >-
          messages is a list of messages to be executed. The required signers of

          those messages define the number and order of elements in AuthInfo's

          signer_infos and Tx's signatures. Each required signer address is
          added to

          the list only the first time it occurs.

          By convention, the first required signer (usually from the first
          message)

          is referred to as the primary signer and pays the fee for the whole

          transaction.
        items:
          properties:
            type_url:
              type: string
            value:
              format: byte
              type: string
          type: object
        type: array
      non_critical_extension_options:
        items:
          properties:
            type_url:
              type: string
            value:
              format: byte
              type: string
          type: object
        title: >-
          extension_options are arbitrary options that can be added by chains

          when the default options are not sufficient. If any of these are
          present

          and can't be handled, they will be ignored
        type: array
      timeout_height:
        format: uint64
        title: |-
          timeout is the block height after which this transaction will not
          be processed by the chain
        type: string
    type: object
  cosmos.tx.v1beta1.TxDecodeAminoRequest:
    description: |-
      TxDecodeAminoRequest is the request type for the Service.TxDecodeAmino
      RPC method.

      Since: cosmos-sdk 0.47
    properties:
      amino_binary:
        format: byte
        type: string
    type: object
  cosmos.tx.v1beta1.TxDecodeAminoResponse:
    description: |-
      TxDecodeAminoResponse is the response type for the Service.TxDecodeAmino
      RPC method.

      Since: cosmos-sdk 0.47
    properties:
      amino_json:
        type: string
    type: object
  cosmos.tx.v1beta1.TxDecodeRequest:
    description: |-
      TxDecodeRequest is the request type for the Service.TxDecode
      RPC method.

      Since: cosmos-sdk 0.47
    properties:
      tx_bytes:
        description: tx_bytes is the raw transaction.
        format: byte
        type: string
    type: object
  cosmos.tx.v1beta1.TxDecodeResponse:
    description: |-
      TxDecodeResponse is the response type for the
      Service.TxDecode method.

      Since: cosmos-sdk 0.47
    properties:
      tx:
        description: Tx is the standard type used for broadcasting transactions.
        properties:
          auth_info:
            title: |-
              auth_info is the authorization related content of the transaction,
              specifically signers, signer modes and fee
            description: >-
              AuthInfo describes the fee and signer modes that are used to sign
              a

              transaction.
            properties:
              fee:
                description: >-
                  Fee is the fee and gas limit for the transaction. The first
                  signer is the

                  primary signer and the one which pays the fee. The fee can be
                  calculated

                  based on the cost of evaluating the body and doing signature
                  verification

                  of the signers. This can be estimated via simulation.
                properties:
                  amount:
                    items:
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: amount is the amount of coins to be paid as a fee
                    type: array
                  gas_limit:
                    format: uint64
                    title: >-
                      gas_limit is the maximum gas that can be used in
                      transaction processing

                      before an out of gas error occurs
                    type: string
                  granter:
                    title: >-
                      if set, the fee payer (either the first signer or the
                      value of the payer field) requests that a fee grant be
                      used

                      to pay fees instead of the fee payer's own balance. If an
                      appropriate fee grant does not exist or the chain does

                      not support fee grants, this will fail
                    type: string
                  payer:
                    description: >-
                      if unset, the first signer is responsible for paying the
                      fees. If set, the specified account must pay the fees.

                      the payer must be a tx signer (and thus have signed this
                      field in AuthInfo).

                      setting this field does *not* change the ordering of
                      required signers for the transaction.
                    type: string
                type: object
              signer_infos:
                description: >-
                  signer_infos defines the signing modes for the required
                  signers. The number

                  and order of elements must match the required signers from
                  TxBody's

                  messages. The first element is the primary signer and the one
                  which pays

                  the fee.
                items:
                  description: >-
                    SignerInfo describes the public key and signing mode of a
                    single top-level

                    signer.
                  properties:
                    mode_info:
                      title: >-
                        mode_info describes the signing mode of the signer and
                        is a nested

                        structure to support nested multisig pubkey's
                      description: >-
                        ModeInfo describes the signing mode of a single or
                        nested multisig signer.
                      properties:
                        multi:
                          title: multi represents a nested multisig signer
                          properties:
                            bitarray:
                              title: >-
                                bitarray specifies which keys within the
                                multisig are signing
                              description: >-
                                CompactBitArray is an implementation of a space
                                efficient bit array.

                                This is used to ensure that the encoded data
                                takes up a minimal amount of

                                space after proto encoding.

                                This is not thread safe, and is not intended for
                                concurrent usage.
                              properties:
                                elems:
                                  format: byte
                                  type: string
                                extra_bits_stored:
                                  format: int64
                                  type: integer
                              type: object
                            mode_infos:
                              items: {}
                              title: >-
                                mode_infos is the corresponding modes of the
                                signers of the multisig

                                which could include nested multisig public keys
                              type: array
                          type: object
                        single:
                          title: single represents a single signer
                          properties:
                            mode:
                              title: mode is the signing mode of the single signer
                              default: SIGN_MODE_UNSPECIFIED
                              description: >-
                                SignMode represents a signing mode with its own
                                security guarantees.


                                This enum should be considered a registry of all
                                known sign modes

                                in the Cosmos ecosystem. Apps are not expected
                                to support all known

                                sign modes. Apps that would like to support
                                custom  sign modes are

                                encouraged to open a small PR against this file
                                to add a new case

                                to this SignMode enum describing their sign mode
                                so that different

                                apps have a consistent version of this enum.

                                 - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                rejected.
                                 - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                verified with raw bytes from Tx.
                                 - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                human-readable textual representation on top of
                                the binary representation

                                from SIGN_MODE_DIRECT.


                                Since: cosmos-sdk 0.50
                                 - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                                SignDocDirectAux. As opposed to
                                SIGN_MODE_DIRECT, this sign mode does not

                                require signers signing over other signers'
                                `signer_info`.


                                Since: cosmos-sdk 0.46
                                 - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                Amino JSON and will be removed in the future.
                                 - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                                Currently, SIGN_MODE_EIP_191 is registered as a
                                SignMode enum variant,

                                but is not implemented on the SDK by default. To
                                enable EIP-191, you need

                                to pass a custom `TxConfig` that has an
                                implementation of

                                `SignModeHandler` for EIP-191. The SDK may
                                decide to fully support

                                EIP-191 in the future.


                                Since: cosmos-sdk 0.45.2
                              enum:
                                - SIGN_MODE_UNSPECIFIED
                                - SIGN_MODE_DIRECT
                                - SIGN_MODE_TEXTUAL
                                - SIGN_MODE_DIRECT_AUX
                                - SIGN_MODE_LEGACY_AMINO_JSON
                                - SIGN_MODE_EIP_191
                              type: string
                          type: object
                      type: object
                    public_key:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                      description: >-
                        public_key is the public key of the signer. It is
                        optional for accounts

                        that already exist in state. If unset, the verifier can
                        use the required \

                        signer address for this position and lookup the public
                        key.
                    sequence:
                      description: >-
                        sequence is the sequence of the account, which describes
                        the

                        number of committed transactions signed by a given
                        address. It is used to

                        prevent replay attacks.
                      format: uint64
                      type: string
                  type: object
                type: array
              tip:
                description: >-
                  Tip is the optional tip used for transactions fees paid in
                  another denom.


                  This field is ignored if the chain didn't enable tips, i.e.
                  didn't add the

                  `TipDecorator` in its posthandler.


                  Since: cosmos-sdk 0.46
                properties:
                  amount:
                    items:
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: amount is the amount of the tip
                    type: array
                  tipper:
                    title: tipper is the address of the account paying for the tip
                    type: string
                type: object
            type: object
          body:
            title: body is the processable content of the transaction
            description: TxBody is the body of a transaction that all signers sign over.
            properties:
              extension_options:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                title: >-
                  extension_options are arbitrary options that can be added by
                  chains

                  when the default options are not sufficient. If any of these
                  are present

                  and can't be handled, the transaction will be rejected
                type: array
              memo:
                description: >-
                  memo is any arbitrary note/comment to be added to the
                  transaction.

                  WARNING: in clients, any publicly exposed text should not be
                  called memo,

                  but should be called `note` instead (see
                  https://github.com/cosmos/cosmos-sdk/issues/9122).
                type: string
              messages:
                description: >-
                  messages is a list of messages to be executed. The required
                  signers of

                  those messages define the number and order of elements in
                  AuthInfo's

                  signer_infos and Tx's signatures. Each required signer address
                  is added to

                  the list only the first time it occurs.

                  By convention, the first required signer (usually from the
                  first message)

                  is referred to as the primary signer and pays the fee for the
                  whole

                  transaction.
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              non_critical_extension_options:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                title: >-
                  extension_options are arbitrary options that can be added by
                  chains

                  when the default options are not sufficient. If any of these
                  are present

                  and can't be handled, they will be ignored
                type: array
              timeout_height:
                format: uint64
                title: >-
                  timeout is the block height after which this transaction will
                  not

                  be processed by the chain
                type: string
            type: object
          signatures:
            description: >-
              signatures is a list of signatures that matches the length and
              order of

              AuthInfo's signer_infos to allow connecting signature meta
              information like

              public key and signing mode by position.
            items:
              format: byte
              type: string
            type: array
        type: object
    type: object
  cosmos.tx.v1beta1.TxEncodeAminoRequest:
    description: |-
      TxEncodeAminoRequest is the request type for the Service.TxEncodeAmino
      RPC method.

      Since: cosmos-sdk 0.47
    properties:
      amino_json:
        type: string
    type: object
  cosmos.tx.v1beta1.TxEncodeAminoResponse:
    description: |-
      TxEncodeAminoResponse is the response type for the Service.TxEncodeAmino
      RPC method.

      Since: cosmos-sdk 0.47
    properties:
      amino_binary:
        format: byte
        type: string
    type: object
  cosmos.tx.v1beta1.TxEncodeRequest:
    description: |-
      TxEncodeRequest is the request type for the Service.TxEncode
      RPC method.

      Since: cosmos-sdk 0.47
    properties:
      tx:
        description: Tx is the standard type used for broadcasting transactions.
        properties:
          auth_info:
            title: |-
              auth_info is the authorization related content of the transaction,
              specifically signers, signer modes and fee
            description: >-
              AuthInfo describes the fee and signer modes that are used to sign
              a

              transaction.
            properties:
              fee:
                description: >-
                  Fee is the fee and gas limit for the transaction. The first
                  signer is the

                  primary signer and the one which pays the fee. The fee can be
                  calculated

                  based on the cost of evaluating the body and doing signature
                  verification

                  of the signers. This can be estimated via simulation.
                properties:
                  amount:
                    items:
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: amount is the amount of coins to be paid as a fee
                    type: array
                  gas_limit:
                    format: uint64
                    title: >-
                      gas_limit is the maximum gas that can be used in
                      transaction processing

                      before an out of gas error occurs
                    type: string
                  granter:
                    title: >-
                      if set, the fee payer (either the first signer or the
                      value of the payer field) requests that a fee grant be
                      used

                      to pay fees instead of the fee payer's own balance. If an
                      appropriate fee grant does not exist or the chain does

                      not support fee grants, this will fail
                    type: string
                  payer:
                    description: >-
                      if unset, the first signer is responsible for paying the
                      fees. If set, the specified account must pay the fees.

                      the payer must be a tx signer (and thus have signed this
                      field in AuthInfo).

                      setting this field does *not* change the ordering of
                      required signers for the transaction.
                    type: string
                type: object
              signer_infos:
                description: >-
                  signer_infos defines the signing modes for the required
                  signers. The number

                  and order of elements must match the required signers from
                  TxBody's

                  messages. The first element is the primary signer and the one
                  which pays

                  the fee.
                items:
                  description: >-
                    SignerInfo describes the public key and signing mode of a
                    single top-level

                    signer.
                  properties:
                    mode_info:
                      title: >-
                        mode_info describes the signing mode of the signer and
                        is a nested

                        structure to support nested multisig pubkey's
                      description: >-
                        ModeInfo describes the signing mode of a single or
                        nested multisig signer.
                      properties:
                        multi:
                          title: multi represents a nested multisig signer
                          properties:
                            bitarray:
                              title: >-
                                bitarray specifies which keys within the
                                multisig are signing
                              description: >-
                                CompactBitArray is an implementation of a space
                                efficient bit array.

                                This is used to ensure that the encoded data
                                takes up a minimal amount of

                                space after proto encoding.

                                This is not thread safe, and is not intended for
                                concurrent usage.
                              properties:
                                elems:
                                  format: byte
                                  type: string
                                extra_bits_stored:
                                  format: int64
                                  type: integer
                              type: object
                            mode_infos:
                              items: {}
                              title: >-
                                mode_infos is the corresponding modes of the
                                signers of the multisig

                                which could include nested multisig public keys
                              type: array
                          type: object
                        single:
                          title: single represents a single signer
                          properties:
                            mode:
                              title: mode is the signing mode of the single signer
                              default: SIGN_MODE_UNSPECIFIED
                              description: >-
                                SignMode represents a signing mode with its own
                                security guarantees.


                                This enum should be considered a registry of all
                                known sign modes

                                in the Cosmos ecosystem. Apps are not expected
                                to support all known

                                sign modes. Apps that would like to support
                                custom  sign modes are

                                encouraged to open a small PR against this file
                                to add a new case

                                to this SignMode enum describing their sign mode
                                so that different

                                apps have a consistent version of this enum.

                                 - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                rejected.
                                 - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                verified with raw bytes from Tx.
                                 - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                human-readable textual representation on top of
                                the binary representation

                                from SIGN_MODE_DIRECT.


                                Since: cosmos-sdk 0.50
                                 - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                                SignDocDirectAux. As opposed to
                                SIGN_MODE_DIRECT, this sign mode does not

                                require signers signing over other signers'
                                `signer_info`.


                                Since: cosmos-sdk 0.46
                                 - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                Amino JSON and will be removed in the future.
                                 - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                SDK. Ref: https://eips.ethereum.org/EIPS/eip-191


                                Currently, SIGN_MODE_EIP_191 is registered as a
                                SignMode enum variant,

                                but is not implemented on the SDK by default. To
                                enable EIP-191, you need

                                to pass a custom `TxConfig` that has an
                                implementation of

                                `SignModeHandler` for EIP-191. The SDK may
                                decide to fully support

                                EIP-191 in the future.


                                Since: cosmos-sdk 0.45.2
                              enum:
                                - SIGN_MODE_UNSPECIFIED
                                - SIGN_MODE_DIRECT
                                - SIGN_MODE_TEXTUAL
                                - SIGN_MODE_DIRECT_AUX
                                - SIGN_MODE_LEGACY_AMINO_JSON
                                - SIGN_MODE_EIP_191
                              type: string
                          type: object
                      type: object
                    public_key:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                      description: >-
                        public_key is the public key of the signer. It is
                        optional for accounts

                        that already exist in state. If unset, the verifier can
                        use the required \

                        signer address for this position and lookup the public
                        key.
                    sequence:
                      description: >-
                        sequence is the sequence of the account, which describes
                        the

                        number of committed transactions signed by a given
                        address. It is used to

                        prevent replay attacks.
                      format: uint64
                      type: string
                  type: object
                type: array
              tip:
                description: >-
                  Tip is the optional tip used for transactions fees paid in
                  another denom.


                  This field is ignored if the chain didn't enable tips, i.e.
                  didn't add the

                  `TipDecorator` in its posthandler.


                  Since: cosmos-sdk 0.46
                properties:
                  amount:
                    items:
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: amount is the amount of the tip
                    type: array
                  tipper:
                    title: tipper is the address of the account paying for the tip
                    type: string
                type: object
            type: object
          body:
            title: body is the processable content of the transaction
            description: TxBody is the body of a transaction that all signers sign over.
            properties:
              extension_options:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                title: >-
                  extension_options are arbitrary options that can be added by
                  chains

                  when the default options are not sufficient. If any of these
                  are present

                  and can't be handled, the transaction will be rejected
                type: array
              memo:
                description: >-
                  memo is any arbitrary note/comment to be added to the
                  transaction.

                  WARNING: in clients, any publicly exposed text should not be
                  called memo,

                  but should be called `note` instead (see
                  https://github.com/cosmos/cosmos-sdk/issues/9122).
                type: string
              messages:
                description: >-
                  messages is a list of messages to be executed. The required
                  signers of

                  those messages define the number and order of elements in
                  AuthInfo's

                  signer_infos and Tx's signatures. Each required signer address
                  is added to

                  the list only the first time it occurs.

                  By convention, the first required signer (usually from the
                  first message)

                  is referred to as the primary signer and pays the fee for the
                  whole

                  transaction.
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              non_critical_extension_options:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                title: >-
                  extension_options are arbitrary options that can be added by
                  chains

                  when the default options are not sufficient. If any of these
                  are present

                  and can't be handled, they will be ignored
                type: array
              timeout_height:
                format: uint64
                title: >-
                  timeout is the block height after which this transaction will
                  not

                  be processed by the chain
                type: string
            type: object
          signatures:
            description: >-
              signatures is a list of signatures that matches the length and
              order of

              AuthInfo's signer_infos to allow connecting signature meta
              information like

              public key and signing mode by position.
            items:
              format: byte
              type: string
            type: array
        type: object
    type: object
  cosmos.tx.v1beta1.TxEncodeResponse:
    description: |-
      TxEncodeResponse is the response type for the
      Service.TxEncode method.

      Since: cosmos-sdk 0.47
    properties:
      tx_bytes:
        description: tx_bytes is the encoded transaction bytes.
        format: byte
        type: string
    type: object
  cosmos.upgrade.v1beta1.ModuleVersion:
    description: |-
      ModuleVersion specifies a module and its consensus version.

      Since: cosmos-sdk 0.43
    properties:
      name:
        title: name of the app module
        type: string
      version:
        format: uint64
        title: consensus version of the app module
        type: string
    type: object
  cosmos.upgrade.v1beta1.Plan:
    description: >-
      Plan specifies information about a planned upgrade and when it should
      occur.
    properties:
      height:
        description: The height at which the upgrade must be performed.
        format: int64
        type: string
      info:
        title: |-
          Any application specific upgrade info to be included on-chain
          such as a git commit that validators could automatically upgrade to
        type: string
      name:
        description: >-
          Sets the name for the upgrade. This name will be used by the upgraded

          version of the software to apply any special "on-upgrade" commands
          during

          the first BeginBlock method after the upgrade is applied. It is also
          used

          to detect whether a software version can handle a given upgrade. If no

          upgrade handler with this name has been set in the software, it will
          be

          assumed that the software is out-of-date when the upgrade Time or
          Height is

          reached and the software will exit.
        type: string
      time:
        description: >-
          Deprecated: Time based upgrades have been deprecated. Time based
          upgrade logic

          has been removed from the SDK.

          If this field is not empty, an error will be thrown.
        format: date-time
        type: string
      upgraded_client_state:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
        description: >-
          Deprecated: UpgradedClientState field has been deprecated. IBC upgrade
          logic has been

          moved to the IBC module in the sub module 02-client.

          If this field is not empty, an error will be thrown.
    type: object
  cosmos.upgrade.v1beta1.QueryAppliedPlanResponse:
    description: >-
      QueryAppliedPlanResponse is the response type for the Query/AppliedPlan
      RPC

      method.
    properties:
      height:
        description: height is the block height at which the plan was applied.
        format: int64
        type: string
    type: object
  cosmos.upgrade.v1beta1.QueryAuthorityResponse:
    description: 'Since: cosmos-sdk 0.46'
    properties:
      address:
        type: string
    title: QueryAuthorityResponse is the response type for Query/Authority
    type: object
  cosmos.upgrade.v1beta1.QueryCurrentPlanResponse:
    description: >-
      QueryCurrentPlanResponse is the response type for the Query/CurrentPlan
      RPC

      method.
    properties:
      plan:
        description: plan is the current upgrade plan.
        properties:
          height:
            description: The height at which the upgrade must be performed.
            format: int64
            type: string
          info:
            title: >-
              Any application specific upgrade info to be included on-chain

              such as a git commit that validators could automatically upgrade
              to
            type: string
          name:
            description: >-
              Sets the name for the upgrade. This name will be used by the
              upgraded

              version of the software to apply any special "on-upgrade" commands
              during

              the first BeginBlock method after the upgrade is applied. It is
              also used

              to detect whether a software version can handle a given upgrade.
              If no

              upgrade handler with this name has been set in the software, it
              will be

              assumed that the software is out-of-date when the upgrade Time or
              Height is

              reached and the software will exit.
            type: string
          time:
            description: >-
              Deprecated: Time based upgrades have been deprecated. Time based
              upgrade logic

              has been removed from the SDK.

              If this field is not empty, an error will be thrown.
            format: date-time
            type: string
          upgraded_client_state:
            properties:
              type_url:
                type: string
              value:
                format: byte
                type: string
            type: object
            description: >-
              Deprecated: UpgradedClientState field has been deprecated. IBC
              upgrade logic has been

              moved to the IBC module in the sub module 02-client.

              If this field is not empty, an error will be thrown.
        type: object
    type: object
  cosmos.upgrade.v1beta1.QueryModuleVersionsResponse:
    description: >-
      QueryModuleVersionsResponse is the response type for the
      Query/ModuleVersions

      RPC method.


      Since: cosmos-sdk 0.43
    properties:
      module_versions:
        description: >-
          module_versions is a list of module names with their consensus
          versions.
        items:
          description: |-
            ModuleVersion specifies a module and its consensus version.

            Since: cosmos-sdk 0.43
          properties:
            name:
              title: name of the app module
              type: string
            version:
              format: uint64
              title: consensus version of the app module
              type: string
          type: object
        type: array
    type: object
  cosmos.upgrade.v1beta1.QueryUpgradedConsensusStateResponse:
    description: >-
      QueryUpgradedConsensusStateResponse is the response type for the
      Query/UpgradedConsensusState

      RPC method.
    properties:
      upgraded_consensus_state:
        format: byte
        title: 'Since: cosmos-sdk 0.43'
        type: string
    type: object
  cosmwasm.wasm.v1.AbsoluteTxPosition:
    description: |-
      AbsoluteTxPosition is a unique transaction position that allows for global
      ordering of transactions.
    properties:
      block_height:
        format: uint64
        title: BlockHeight is the block the contract was created at
        type: string
      tx_index:
        format: uint64
        title: >-
          TxIndex is a monotonic counter within the block (actual transaction
          index,

          or gas consumed)
        type: string
    type: object
  cosmwasm.wasm.v1.AccessConfig:
    description: AccessConfig access control type.
    properties:
      addresses:
        items:
          type: string
        type: array
      permission:
        default: ACCESS_TYPE_UNSPECIFIED
        description: >-
          - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty
          value
           - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
           - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
           - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
        enum:
          - ACCESS_TYPE_UNSPECIFIED
          - ACCESS_TYPE_NOBODY
          - ACCESS_TYPE_EVERYBODY
          - ACCESS_TYPE_ANY_OF_ADDRESSES
        title: AccessType permission types
        type: string
    type: object
  cosmwasm.wasm.v1.AccessType:
    default: ACCESS_TYPE_UNSPECIFIED
    description: >-
      - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty
      value
       - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
       - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
       - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
    enum:
      - ACCESS_TYPE_UNSPECIFIED
      - ACCESS_TYPE_NOBODY
      - ACCESS_TYPE_EVERYBODY
      - ACCESS_TYPE_ANY_OF_ADDRESSES
    title: AccessType permission types
    type: string
  cosmwasm.wasm.v1.CodeInfoResponse:
    properties:
      code_id:
        format: uint64
        type: string
      creator:
        type: string
      data_hash:
        format: byte
        type: string
      instantiate_permission:
        description: AccessConfig access control type.
        properties:
          addresses:
            items:
              type: string
            type: array
          permission:
            default: ACCESS_TYPE_UNSPECIFIED
            description: >-
              - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for
              empty value
               - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
               - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
               - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
            enum:
              - ACCESS_TYPE_UNSPECIFIED
              - ACCESS_TYPE_NOBODY
              - ACCESS_TYPE_EVERYBODY
              - ACCESS_TYPE_ANY_OF_ADDRESSES
            title: AccessType permission types
            type: string
        type: object
    title: CodeInfoResponse contains code meta data from CodeInfo
    type: object
  cosmwasm.wasm.v1.ContractCodeHistoryEntry:
    description: ContractCodeHistoryEntry metadata to a contract.
    properties:
      code_id:
        format: uint64
        title: CodeID is the reference to the stored WASM code
        type: string
      msg:
        format: byte
        type: string
      operation:
        default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
        description: >-
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:
          ContractCodeHistoryOperationTypeUnspecified placeholder for empty
          value
           - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
           - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
           - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
        enum:
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
          - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
        title: ContractCodeHistoryOperationType actions that caused a code change
        type: string
      updated:
        description: Updated Tx position when the operation was executed.
        properties:
          block_height:
            format: uint64
            title: BlockHeight is the block the contract was created at
            type: string
          tx_index:
            format: uint64
            title: >-
              TxIndex is a monotonic counter within the block (actual
              transaction index,

              or gas consumed)
            type: string
        type: object
    type: object
  cosmwasm.wasm.v1.ContractCodeHistoryOperationType:
    default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
    description: >-
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:
      ContractCodeHistoryOperationTypeUnspecified placeholder for empty value
       - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
       - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
       - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
    enum:
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
      - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
    title: ContractCodeHistoryOperationType actions that caused a code change
    type: string
  cosmwasm.wasm.v1.ContractInfo:
    properties:
      admin:
        title: Admin is an optional address that can execute migrations
        type: string
      code_id:
        format: uint64
        title: CodeID is the reference to the stored Wasm code
        type: string
      created:
        description: Created Tx position when the contract was instantiated.
        properties:
          block_height:
            format: uint64
            title: BlockHeight is the block the contract was created at
            type: string
          tx_index:
            format: uint64
            title: >-
              TxIndex is a monotonic counter within the block (actual
              transaction index,

              or gas consumed)
            type: string
        type: object
      creator:
        title: Creator address who initially instantiated the contract
        type: string
      extension:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
        description: |-
          Extension is an extension point to store custom metadata within the
          persistence model.
      ibc_port_id:
        type: string
      label:
        description: Label is optional metadata to be stored with a contract instance.
        type: string
    title: ContractInfo stores a WASM contract instance
    type: object
  cosmwasm.wasm.v1.Model:
    properties:
      key:
        format: byte
        title: hex-encode key to read it better (this is often ascii)
        type: string
      value:
        format: byte
        title: base64-encode raw value
        type: string
    title: Model is a struct that holds a KV pair
    type: object
  cosmwasm.wasm.v1.Params:
    description: Params defines the set of wasm parameters.
    properties:
      code_upload_access:
        description: AccessConfig access control type.
        properties:
          addresses:
            items:
              type: string
            type: array
          permission:
            default: ACCESS_TYPE_UNSPECIFIED
            description: >-
              - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for
              empty value
               - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
               - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
               - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
            enum:
              - ACCESS_TYPE_UNSPECIFIED
              - ACCESS_TYPE_NOBODY
              - ACCESS_TYPE_EVERYBODY
              - ACCESS_TYPE_ANY_OF_ADDRESSES
            title: AccessType permission types
            type: string
        type: object
      instantiate_default_permission:
        default: ACCESS_TYPE_UNSPECIFIED
        description: >-
          - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for empty
          value
           - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
           - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
           - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
        enum:
          - ACCESS_TYPE_UNSPECIFIED
          - ACCESS_TYPE_NOBODY
          - ACCESS_TYPE_EVERYBODY
          - ACCESS_TYPE_ANY_OF_ADDRESSES
        title: AccessType permission types
        type: string
    type: object
  cosmwasm.wasm.v1.QueryAllContractStateResponse:
    properties:
      models:
        items:
          properties:
            key:
              format: byte
              title: hex-encode key to read it better (this is often ascii)
              type: string
            value:
              format: byte
              title: base64-encode raw value
              type: string
          title: Model is a struct that holds a KV pair
          type: object
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    title: |-
      QueryAllContractStateResponse is the response type for the
      Query/AllContractState RPC method
    type: object
  cosmwasm.wasm.v1.QueryBuildAddressResponse:
    description: >-
      QueryBuildAddressResponse is the response type for the Query/BuildAddress
      RPC

      method.
    properties:
      address:
        title: Address is the contract address
        type: string
    type: object
  cosmwasm.wasm.v1.QueryCodeResponse:
    properties:
      code_info:
        properties:
          code_id:
            format: uint64
            type: string
          creator:
            type: string
          data_hash:
            format: byte
            type: string
          instantiate_permission:
            description: AccessConfig access control type.
            properties:
              addresses:
                items:
                  type: string
                type: array
              permission:
                default: ACCESS_TYPE_UNSPECIFIED
                description: >-
                  - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder
                  for empty value
                   - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                   - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                   - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                enum:
                  - ACCESS_TYPE_UNSPECIFIED
                  - ACCESS_TYPE_NOBODY
                  - ACCESS_TYPE_EVERYBODY
                  - ACCESS_TYPE_ANY_OF_ADDRESSES
                title: AccessType permission types
                type: string
            type: object
        title: CodeInfoResponse contains code meta data from CodeInfo
        type: object
      data:
        format: byte
        type: string
    title: QueryCodeResponse is the response type for the Query/Code RPC method
    type: object
  cosmwasm.wasm.v1.QueryCodesResponse:
    properties:
      code_infos:
        items:
          properties:
            code_id:
              format: uint64
              type: string
            creator:
              type: string
            data_hash:
              format: byte
              type: string
            instantiate_permission:
              description: AccessConfig access control type.
              properties:
                addresses:
                  items:
                    type: string
                  type: array
                permission:
                  default: ACCESS_TYPE_UNSPECIFIED
                  description: >-
                    - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder
                    for empty value
                     - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                     - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                     - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                  enum:
                    - ACCESS_TYPE_UNSPECIFIED
                    - ACCESS_TYPE_NOBODY
                    - ACCESS_TYPE_EVERYBODY
                    - ACCESS_TYPE_ANY_OF_ADDRESSES
                  title: AccessType permission types
                  type: string
              type: object
          title: CodeInfoResponse contains code meta data from CodeInfo
          type: object
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    title: QueryCodesResponse is the response type for the Query/Codes RPC method
    type: object
  cosmwasm.wasm.v1.QueryContractHistoryResponse:
    properties:
      entries:
        items:
          description: ContractCodeHistoryEntry metadata to a contract.
          properties:
            code_id:
              format: uint64
              title: CodeID is the reference to the stored WASM code
              type: string
            msg:
              format: byte
              type: string
            operation:
              default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
              description: >-
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:
                ContractCodeHistoryOperationTypeUnspecified placeholder for
                empty value
                 - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
                 - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
                 - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
              enum:
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
                - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
              title: >-
                ContractCodeHistoryOperationType actions that caused a code
                change
              type: string
            updated:
              description: Updated Tx position when the operation was executed.
              properties:
                block_height:
                  format: uint64
                  title: BlockHeight is the block the contract was created at
                  type: string
                tx_index:
                  format: uint64
                  title: >-
                    TxIndex is a monotonic counter within the block (actual
                    transaction index,

                    or gas consumed)
                  type: string
              type: object
          type: object
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    title: |-
      QueryContractHistoryResponse is the response type for the
      Query/ContractHistory RPC method
    type: object
  cosmwasm.wasm.v1.QueryContractInfoResponse:
    properties:
      address:
        title: address is the address of the contract
        type: string
      contract_info:
        properties:
          admin:
            title: Admin is an optional address that can execute migrations
            type: string
          code_id:
            format: uint64
            title: CodeID is the reference to the stored Wasm code
            type: string
          created:
            description: Created Tx position when the contract was instantiated.
            properties:
              block_height:
                format: uint64
                title: BlockHeight is the block the contract was created at
                type: string
              tx_index:
                format: uint64
                title: >-
                  TxIndex is a monotonic counter within the block (actual
                  transaction index,

                  or gas consumed)
                type: string
            type: object
          creator:
            title: Creator address who initially instantiated the contract
            type: string
          extension:
            properties:
              type_url:
                type: string
              value:
                format: byte
                type: string
            type: object
            description: >-
              Extension is an extension point to store custom metadata within
              the

              persistence model.
          ibc_port_id:
            type: string
          label:
            description: Label is optional metadata to be stored with a contract instance.
            type: string
        title: ContractInfo stores a WASM contract instance
        type: object
    title: >-
      QueryContractInfoResponse is the response type for the Query/ContractInfo
      RPC

      method
    type: object
  cosmwasm.wasm.v1.QueryContractsByCodeResponse:
    properties:
      contracts:
        items:
          type: string
        title: contracts are a set of contract addresses
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    title: |-
      QueryContractsByCodeResponse is the response type for the
      Query/ContractsByCode RPC method
    type: object
  cosmwasm.wasm.v1.QueryContractsByCreatorResponse:
    description: |-
      QueryContractsByCreatorResponse is the response type for the
      Query/ContractsByCreator RPC method.
    properties:
      contract_addresses:
        items:
          type: string
        title: ContractAddresses result set
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  cosmwasm.wasm.v1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties:
          code_upload_access:
            description: AccessConfig access control type.
            properties:
              addresses:
                items:
                  type: string
                type: array
              permission:
                default: ACCESS_TYPE_UNSPECIFIED
                description: >-
                  - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder
                  for empty value
                   - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                   - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                   - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                enum:
                  - ACCESS_TYPE_UNSPECIFIED
                  - ACCESS_TYPE_NOBODY
                  - ACCESS_TYPE_EVERYBODY
                  - ACCESS_TYPE_ANY_OF_ADDRESSES
                title: AccessType permission types
                type: string
            type: object
          instantiate_default_permission:
            default: ACCESS_TYPE_UNSPECIFIED
            description: >-
              - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified placeholder for
              empty value
               - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
               - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
               - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
            enum:
              - ACCESS_TYPE_UNSPECIFIED
              - ACCESS_TYPE_NOBODY
              - ACCESS_TYPE_EVERYBODY
              - ACCESS_TYPE_ANY_OF_ADDRESSES
            title: AccessType permission types
            type: string
        type: object
    type: object
  cosmwasm.wasm.v1.QueryPinnedCodesResponse:
    properties:
      code_ids:
        items:
          format: uint64
          type: string
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    title: |-
      QueryPinnedCodesResponse is the response type for the
      Query/PinnedCodes RPC method
    type: object
  cosmwasm.wasm.v1.QueryRawContractStateResponse:
    properties:
      data:
        format: byte
        title: Data contains the raw store data
        type: string
    title: |-
      QueryRawContractStateResponse is the response type for the
      Query/RawContractState RPC method
    type: object
  cosmwasm.wasm.v1.QuerySmartContractStateResponse:
    properties:
      data:
        format: byte
        title: Data contains the json data returned from the smart contract
        type: string
    title: |-
      QuerySmartContractStateResponse is the response type for the
      Query/SmartContractState RPC method
    type: object
  feemarket.feemarket.v1.GasPriceResponse:
    description: |-
      GasPriceResponse is the response type for the Query/GasPrice RPC method.
      Returns a gas price in specified denom.
    properties:
      price:
        description: |-
          DecCoin defines a token with a denomination and a decimal amount.

          NOTE: The amount field is an Dec which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
    type: object
  feemarket.feemarket.v1.GasPricesResponse:
    description: |-
      GasPricesResponse is the response type for the Query/GasPrices RPC method.
      Returns a gas price in all available denoms.
    properties:
      prices:
        items:
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
    type: object
  feemarket.feemarket.v1.Params:
    description: |-
      Params contains the required set of parameters for the EIP1559 fee market
      plugin implementation.
    properties:
      alpha:
        description: |-
          Alpha is the amount we additively increase the learning rate
          when it is above or below the target +/- threshold.

          Must be > 0.
        type: string
      beta:
        description: |-
          Beta is the amount we multiplicatively decrease the learning rate
          when it is within the target +/- threshold.

          Must be [0, 1].
        type: string
      delta:
        description: >-
          Delta is the amount we additively increase/decrease the gas price when
          the

          net block utilization difference in the window is above/below the
          target

          utilization.
        type: string
      distribute_fees:
        description: >-
          DistributeFees is a boolean that determines whether the fees are
          burned or

          distributed to all stakers.
        type: boolean
      enabled:
        description: |-
          Enabled is a boolean that determines whether the EIP1559 fee market is
          enabled.
        type: boolean
      fee_denom:
        description: FeeDenom is the denom that will be used for all fee payments.
        type: string
      gamma:
        description: |-
          Gamma is the threshold for the learning rate. If the learning rate is
          above or below the target +/- threshold, we additively increase the
          learning rate by Alpha. Otherwise, we multiplicatively decrease the
          learning rate by Beta.

          Must be [0, 0.5].
        type: string
      max_block_utilization:
        description: MaxBlockUtilization is the maximum block utilization.
        format: uint64
        type: string
      max_learning_rate:
        description: MaxLearningRate is the upper bound for the learning rate.
        type: string
      min_base_gas_price:
        description: |-
          MinBaseGasPrice determines the initial gas price of the module and the
          global minimum for the network.
        type: string
      min_learning_rate:
        description: MinLearningRate is the lower bound for the learning rate.
        type: string
      window:
        description: >-
          Window defines the window size for calculating an adaptive learning
          rate

          over a moving window of blocks.
        format: uint64
        type: string
    type: object
  feemarket.feemarket.v1.ParamsResponse:
    description: ParamsResponse is the response type for the Query/Params RPC method.
    properties:
      params:
        description: >-
          Params contains the required set of parameters for the EIP1559 fee
          market

          plugin implementation.
        properties:
          alpha:
            description: |-
              Alpha is the amount we additively increase the learning rate
              when it is above or below the target +/- threshold.

              Must be > 0.
            type: string
          beta:
            description: |-
              Beta is the amount we multiplicatively decrease the learning rate
              when it is within the target +/- threshold.

              Must be [0, 1].
            type: string
          delta:
            description: >-
              Delta is the amount we additively increase/decrease the gas price
              when the

              net block utilization difference in the window is above/below the
              target

              utilization.
            type: string
          distribute_fees:
            description: >-
              DistributeFees is a boolean that determines whether the fees are
              burned or

              distributed to all stakers.
            type: boolean
          enabled:
            description: >-
              Enabled is a boolean that determines whether the EIP1559 fee
              market is

              enabled.
            type: boolean
          fee_denom:
            description: FeeDenom is the denom that will be used for all fee payments.
            type: string
          gamma:
            description: >-
              Gamma is the threshold for the learning rate. If the learning rate
              is

              above or below the target +/- threshold, we additively increase
              the

              learning rate by Alpha. Otherwise, we multiplicatively decrease
              the

              learning rate by Beta.


              Must be [0, 0.5].
            type: string
          max_block_utilization:
            description: MaxBlockUtilization is the maximum block utilization.
            format: uint64
            type: string
          max_learning_rate:
            description: MaxLearningRate is the upper bound for the learning rate.
            type: string
          min_base_gas_price:
            description: >-
              MinBaseGasPrice determines the initial gas price of the module and
              the

              global minimum for the network.
            type: string
          min_learning_rate:
            description: MinLearningRate is the lower bound for the learning rate.
            type: string
          window:
            description: >-
              Window defines the window size for calculating an adaptive
              learning rate

              over a moving window of blocks.
            format: uint64
            type: string
        type: object
    type: object
  feemarket.feemarket.v1.State:
    description: >-
      State is utilized to track the current state of the fee market. This
      includes

      the current base fee, learning rate, and block utilization within the

      specified AIMD window.
    properties:
      base_gas_price:
        description: >-
          BaseGasPrice is the current base fee. This is denominated in the fee
          per

          gas unit.
        type: string
      index:
        description: >-
          Index is the index of the current block in the block utilization
          window.
        format: uint64
        type: string
      learning_rate:
        description: LearningRate is the current learning rate.
        type: string
      window:
        description: >-
          Window contains a list of the last blocks' utilization values. This is
          used

          to calculate the next base fee. This stores the number of units of gas

          consumed per block.
        items:
          format: uint64
          type: string
        type: array
    type: object
  feemarket.feemarket.v1.StateResponse:
    description: StateResponse is the response type for the Query/State RPC method.
    properties:
      state:
        description: >-
          State is utilized to track the current state of the fee market. This
          includes

          the current base fee, learning rate, and block utilization within the

          specified AIMD window.
        properties:
          base_gas_price:
            description: >-
              BaseGasPrice is the current base fee. This is denominated in the
              fee per

              gas unit.
            type: string
          index:
            description: >-
              Index is the index of the current block in the block utilization
              window.
            format: uint64
            type: string
          learning_rate:
            description: LearningRate is the current learning rate.
            type: string
          window:
            description: >-
              Window contains a list of the last blocks' utilization values.
              This is used

              to calculate the next base fee. This stores the number of units of
              gas

              consumed per block.
            items:
              format: uint64
              type: string
            type: array
        type: object
    type: object
  gaia.globalfee.v1beta1.Params:
    description: Params defines the set of module parameters.
    properties:
      bypass_min_fee_msg_types:
        description: |-
          bypass_min_fee_msg_types defines a list of message type urls
          that are free of fee charge.
        items:
          type: string
        type: array
      max_total_bypass_min_fee_msg_gas_usage:
        description: >-
          max_total_bypass_min_fee_msg_gas_usage defines the total maximum gas
          usage

          allowed for a transaction containing only messages of types in
          bypass_min_fee_msg_types

          to bypass fee charge.
        format: uint64
        type: string
      minimum_gas_prices:
        items:
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        title: >-
          minimum_gas_prices stores the minimum gas price(s) for all TX on the
          chain.

          When multiple coins are defined then they are accepted alternatively.

          The list must be sorted by denoms asc. No duplicate denoms or zero
          amount

          values allowed. For more information see

          https://docs.cosmos.network/main/modules/auth#concepts
        type: array
    type: object
  gaia.globalfee.v1beta1.QueryParamsResponse:
    description: |-
      QueryMinimumGasPricesResponse is the response type for the
      Query/MinimumGasPrices RPC method.
    properties:
      params:
        description: Params defines the set of module parameters.
        properties:
          bypass_min_fee_msg_types:
            description: |-
              bypass_min_fee_msg_types defines a list of message type urls
              that are free of fee charge.
            items:
              type: string
            type: array
          max_total_bypass_min_fee_msg_gas_usage:
            description: >-
              max_total_bypass_min_fee_msg_gas_usage defines the total maximum
              gas usage

              allowed for a transaction containing only messages of types in
              bypass_min_fee_msg_types

              to bypass fee charge.
            format: uint64
            type: string
          minimum_gas_prices:
            items:
              description: >-
                DecCoin defines a token with a denomination and a decimal
                amount.


                NOTE: The amount field is an Dec which implements the custom
                method

                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            title: >-
              minimum_gas_prices stores the minimum gas price(s) for all TX on
              the chain.

              When multiple coins are defined then they are accepted
              alternatively.

              The list must be sorted by denoms asc. No duplicate denoms or zero
              amount

              values allowed. For more information see

              https://docs.cosmos.network/main/modules/auth#concepts
            type: array
        type: object
    type: object
  google.protobuf.Any:
    properties:
      type_url:
        type: string
      value:
        format: byte
        type: string
    type: object
  grpc.gateway.runtime.Error:
    properties:
      code:
        format: int32
        type: integer
      details:
        items:
          properties:
            type_url:
              type: string
            value:
              format: byte
              type: string
          type: object
        type: array
      error:
        type: string
      message:
        type: string
    type: object
  ibc.applications.transfer.v1.DenomTrace:
    description: >-
      DenomTrace contains the base denomination for ICS20 fungible tokens and
      the

      source tracing information path.
    properties:
      base_denom:
        description: base denomination of the relayed fungible token.
        type: string
      path:
        description: >-
          path defines the chain of port/channel identifiers used for tracing
          the

          source of the fungible token.
        type: string
    type: object
  ibc.applications.transfer.v1.Params:
    description: >-
      Params defines the set of IBC transfer parameters.

      NOTE: To prevent a single token from being transferred, set the

      TransfersEnabled parameter to true and then set the bank module's
      SendEnabled

      parameter for the denomination to false.
    properties:
      receive_enabled:
        description: >-
          receive_enabled enables or disables all cross-chain token transfers to
          this

          chain.
        type: boolean
      send_enabled:
        description: >-
          send_enabled enables or disables all cross-chain token transfers from
          this

          chain.
        type: boolean
    type: object
  ibc.applications.transfer.v1.QueryDenomHashResponse:
    description: |-
      QueryDenomHashResponse is the response type for the Query/DenomHash RPC
      method.
    properties:
      hash:
        description: hash (in hex format) of the denomination trace information.
        type: string
    type: object
  ibc.applications.transfer.v1.QueryDenomTraceResponse:
    description: |-
      QueryDenomTraceResponse is the response type for the Query/DenomTrace RPC
      method.
    properties:
      denom_trace:
        description: denom_trace returns the requested denomination trace information.
        properties:
          base_denom:
            description: base denomination of the relayed fungible token.
            type: string
          path:
            description: >-
              path defines the chain of port/channel identifiers used for
              tracing the

              source of the fungible token.
            type: string
        type: object
    type: object
  ibc.applications.transfer.v1.QueryDenomTracesResponse:
    description: >-
      QueryConnectionsResponse is the response type for the Query/DenomTraces
      RPC

      method.
    properties:
      denom_traces:
        description: denom_traces returns all denominations trace information.
        items:
          description: >-
            DenomTrace contains the base denomination for ICS20 fungible tokens
            and the

            source tracing information path.
          properties:
            base_denom:
              description: base denomination of the relayed fungible token.
              type: string
            path:
              description: >-
                path defines the chain of port/channel identifiers used for
                tracing the

                source of the fungible token.
              type: string
          type: object
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  ibc.applications.transfer.v1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties:
          receive_enabled:
            description: >-
              receive_enabled enables or disables all cross-chain token
              transfers to this

              chain.
            type: boolean
          send_enabled:
            description: >-
              send_enabled enables or disables all cross-chain token transfers
              from this

              chain.
            type: boolean
        type: object
    type: object
  ibc.core.client.v1.Height:
    description: |-
      Normally the RevisionHeight is incremented at each height while keeping
      RevisionNumber the same. However some consensus algorithms may choose to
      reset the height in certain conditions e.g. hard forks, state-machine
      breaking changes In these cases, the RevisionNumber is incremented so that
      height continues to be monitonically increasing even as the RevisionHeight
      gets reset
    properties:
      revision_height:
        format: uint64
        title: the height within the given revision
        type: string
      revision_number:
        format: uint64
        title: the revision that the client is currently on
        type: string
    title: >-
      Height is a monotonically increasing data type

      that can be compared against another Height for the purposes of updating
      and

      freezing clients
    type: object
  interchain_security.ccv.consumer.v1.ChainInfo:
    properties:
      chainID:
        type: string
      channelID:
        type: string
      clientID:
        type: string
      connectionID:
        type: string
    type: object
  interchain_security.ccv.consumer.v1.NextFeeDistributionEstimate:
    properties:
      currentHeight:
        format: int64
        title: current block height at the time of querying
        type: string
      distribution_fraction:
        title: ratio between consumer and provider fee distribution
        type: string
      lastHeight:
        format: int64
        title: block height at which last distribution took place
        type: string
      nextHeight:
        format: int64
        title: block height at which next distribution will take place
        type: string
      toConsumer:
        title: amount distributed (kept) by consumer chain
        type: string
      toProvider:
        title: amount distributed to provider chain
        type: string
      total:
        title: total accruead fees at the time of querying
        type: string
    title: NextFeeDistributionEstimate holds information about next fee distribution
    type: object
  interchain_security.ccv.consumer.v1.QueryNextFeeDistributionEstimateResponse:
    properties:
      data:
        properties:
          currentHeight:
            format: int64
            title: current block height at the time of querying
            type: string
          distribution_fraction:
            title: ratio between consumer and provider fee distribution
            type: string
          lastHeight:
            format: int64
            title: block height at which last distribution took place
            type: string
          nextHeight:
            format: int64
            title: block height at which next distribution will take place
            type: string
          toConsumer:
            title: amount distributed (kept) by consumer chain
            type: string
          toProvider:
            title: amount distributed to provider chain
            type: string
          total:
            title: total accruead fees at the time of querying
            type: string
        title: >-
          NextFeeDistributionEstimate holds information about next fee
          distribution
        type: object
    type: object
  interchain_security.ccv.consumer.v1.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    properties:
      params:
        description: params holds all the parameters of this module.
        properties:
          blocks_per_distribution_transmission:
            description: >-
              /////////////////////

              Distribution Params

              Number of blocks between ibc-token-transfers from the consumer
              chain to

              the provider chain. Note that at this transmission event a
              fraction of

              the accumulated tokens are divided and sent consumer
              redistribution

              address.
            format: int64
            type: string
          ccv_timeout_period:
            title: Sent CCV related IBC packets will timeout after this duration
            type: string
          consumer_redistribution_fraction:
            description: >-
              The fraction of tokens allocated to the consumer redistribution
              address

              during distribution events. The fraction is a string representing
              a

              decimal number. For example "0.75" would represent 75%.
            type: string
          distribution_transmission_channel:
            description: >-
              Channel, and provider-chain receiving address to send distribution
              token

              transfers over. These parameters is auto-set during the consumer
              <->

              provider handshake procedure.
            type: string
          enabled:
            title: >-
              TODO: Remove enabled flag and find a better way to setup
              integration tests

              See: https://github.com/cosmos/interchain-security/issues/339
            type: boolean
          historical_entries:
            description: >-
              The number of historical info entries to persist in store.

              This param is a part of the cosmos sdk staking module. In the case
              of

              a ccv enabled consumer chain, the ccv module acts as the staking
              module.
            format: int64
            type: string
          provider_fee_pool_addr_str:
            type: string
          provider_reward_denoms:
            items:
              type: string
            title: >-
              Provider-originated reward denoms. These are denoms coming from
              the

              provider which are allowed to be used as rewards. e.g. "uatom"
            type: array
          retry_delay_period:
            description: >-
              The period after which a consumer can retry sending a throttled
              packet.
            type: string
          reward_denoms:
            description: >-
              Reward denoms. These are the denominations which are allowed to be
              sent to

              the provider as rewards.
            items:
              type: string
            type: array
          soft_opt_out_threshold:
            title: >-
              !!! DEPRECATED !!! soft_opt_out_threshold is deprecated. see
              docs/docs/adrs/adr-015-partial-set-security.md
            type: string
          transfer_timeout_period:
            title: Sent transfer related IBC packets will timeout after this duration
            type: string
          unbonding_period:
            description: |-
              Unbonding period for the consumer,
              which should be smaller than that of the provider in general.
            type: string
        type: object
    type: object
  interchain_security.ccv.consumer.v1.QueryProviderInfoResponse:
    properties:
      consumer:
        properties:
          chainID:
            type: string
          channelID:
            type: string
          clientID:
            type: string
          connectionID:
            type: string
        type: object
      provider:
        properties:
          chainID:
            type: string
          channelID:
            type: string
          clientID:
            type: string
          connectionID:
            type: string
        type: object
    type: object
  interchain_security.ccv.consumer.v1.QueryThrottleStateResponse:
    properties:
      packet_data_queue:
        items:
          properties:
            slashPacketData:
              description: >-
                This packet is sent from the consumer chain to the provider
                chain

                to request the slashing of a validator as a result of an
                infraction

                committed on the consumer chain.
              properties:
                infraction:
                  title: >-
                    tell if the slashing is for a downtime or a double-signing
                    infraction
                  default: INFRACTION_UNSPECIFIED
                  description: |-
                    Infraction indicates the infraction a validator commited.

                     - INFRACTION_UNSPECIFIED: UNSPECIFIED defines an empty infraction.
                     - INFRACTION_DOUBLE_SIGN: DOUBLE_SIGN defines a validator that double-signs a block.
                     - INFRACTION_DOWNTIME: DOWNTIME defines a validator that missed signing too many blocks.
                  enum:
                    - INFRACTION_UNSPECIFIED
                    - INFRACTION_DOUBLE_SIGN
                    - INFRACTION_DOWNTIME
                  type: string
                validator:
                  properties:
                    address:
                      format: byte
                      type: string
                    power:
                      format: int64
                      title: PubKey pub_key = 2 [(gogoproto.nullable)=false];
                      type: string
                  type: object
                valset_update_id:
                  format: uint64
                  title: map to the infraction block height on the provider
                  type: string
              type: object
            type:
              default: CONSUMER_PACKET_TYPE_UNSPECIFIED
              description: >-
                ConsumerPacketType indicates interchain security specific packet
                types.

                 - CONSUMER_PACKET_TYPE_UNSPECIFIED: UNSPECIFIED packet type
                 - CONSUMER_PACKET_TYPE_SLASH: Slash packet
                 - CONSUMER_PACKET_TYPE_VSCM: VSCMatured packet
              enum:
                - CONSUMER_PACKET_TYPE_UNSPECIFIED
                - CONSUMER_PACKET_TYPE_SLASH
                - CONSUMER_PACKET_TYPE_VSCM
              type: string
            vscMaturedPacketData:
              description: >-
                This packet is sent from the consumer chain to the provider
                chain

                to notify that a VSC packet reached maturity on the consumer
                chain.
              properties:
                valset_update_id:
                  format: uint64
                  title: the id of the VSC packet that reached maturity
                  type: string
              type: object
          title: ConsumerPacketData contains a consumer packet data and a type tag
          type: object
        type: array
      slash_record:
        description: >-
          A record storing the state of a slash packet sent to the provider
          chain

          which may bounce back and forth until handled by the provider.


          Note this type is only used internally to the consumer CCV module.
        properties:
          send_time:
            format: date-time
            type: string
          waiting_on_reply:
            type: boolean
        type: object
    type: object
  interchain_security.ccv.consumer.v1.SlashRecord:
    description: |-
      A record storing the state of a slash packet sent to the provider chain
      which may bounce back and forth until handled by the provider.

      Note this type is only used internally to the consumer CCV module.
    properties:
      send_time:
        format: date-time
        type: string
      waiting_on_reply:
        type: boolean
    type: object
  interchain_security.ccv.v1.ConsumerPacketData:
    properties:
      slashPacketData:
        description: |-
          This packet is sent from the consumer chain to the provider chain
          to request the slashing of a validator as a result of an infraction
          committed on the consumer chain.
        properties:
          infraction:
            title: >-
              tell if the slashing is for a downtime or a double-signing
              infraction
            default: INFRACTION_UNSPECIFIED
            description: |-
              Infraction indicates the infraction a validator commited.

               - INFRACTION_UNSPECIFIED: UNSPECIFIED defines an empty infraction.
               - INFRACTION_DOUBLE_SIGN: DOUBLE_SIGN defines a validator that double-signs a block.
               - INFRACTION_DOWNTIME: DOWNTIME defines a validator that missed signing too many blocks.
            enum:
              - INFRACTION_UNSPECIFIED
              - INFRACTION_DOUBLE_SIGN
              - INFRACTION_DOWNTIME
            type: string
          validator:
            properties:
              address:
                format: byte
                type: string
              power:
                format: int64
                title: PubKey pub_key = 2 [(gogoproto.nullable)=false];
                type: string
            type: object
          valset_update_id:
            format: uint64
            title: map to the infraction block height on the provider
            type: string
        type: object
      type:
        default: CONSUMER_PACKET_TYPE_UNSPECIFIED
        description: >-
          ConsumerPacketType indicates interchain security specific packet
          types.

           - CONSUMER_PACKET_TYPE_UNSPECIFIED: UNSPECIFIED packet type
           - CONSUMER_PACKET_TYPE_SLASH: Slash packet
           - CONSUMER_PACKET_TYPE_VSCM: VSCMatured packet
        enum:
          - CONSUMER_PACKET_TYPE_UNSPECIFIED
          - CONSUMER_PACKET_TYPE_SLASH
          - CONSUMER_PACKET_TYPE_VSCM
        type: string
      vscMaturedPacketData:
        description: |-
          This packet is sent from the consumer chain to the provider chain
          to notify that a VSC packet reached maturity on the consumer chain.
        properties:
          valset_update_id:
            format: uint64
            title: the id of the VSC packet that reached maturity
            type: string
        type: object
    title: ConsumerPacketData contains a consumer packet data and a type tag
    type: object
  interchain_security.ccv.v1.ConsumerPacketDataType:
    default: CONSUMER_PACKET_TYPE_UNSPECIFIED
    description: |-
      ConsumerPacketType indicates interchain security specific packet types.

       - CONSUMER_PACKET_TYPE_UNSPECIFIED: UNSPECIFIED packet type
       - CONSUMER_PACKET_TYPE_SLASH: Slash packet
       - CONSUMER_PACKET_TYPE_VSCM: VSCMatured packet
    enum:
      - CONSUMER_PACKET_TYPE_UNSPECIFIED
      - CONSUMER_PACKET_TYPE_SLASH
      - CONSUMER_PACKET_TYPE_VSCM
    type: string
  interchain_security.ccv.v1.ConsumerParams:
    description: >-
      ConsumerParams defines the parameters for CCV consumer module.


      Note this type is referenced in both the consumer and provider CCV
      modules,

      and persisted on the provider, see MakeConsumerGenesis and

      SetConsumerGenesis.
    properties:
      blocks_per_distribution_transmission:
        description: >-
          /////////////////////

          Distribution Params

          Number of blocks between ibc-token-transfers from the consumer chain
          to

          the provider chain. Note that at this transmission event a fraction of

          the accumulated tokens are divided and sent consumer redistribution

          address.
        format: int64
        type: string
      ccv_timeout_period:
        title: Sent CCV related IBC packets will timeout after this duration
        type: string
      consumer_redistribution_fraction:
        description: >-
          The fraction of tokens allocated to the consumer redistribution
          address

          during distribution events. The fraction is a string representing a

          decimal number. For example "0.75" would represent 75%.
        type: string
      distribution_transmission_channel:
        description: >-
          Channel, and provider-chain receiving address to send distribution
          token

          transfers over. These parameters is auto-set during the consumer <->

          provider handshake procedure.
        type: string
      enabled:
        title: >-
          TODO: Remove enabled flag and find a better way to setup integration
          tests

          See: https://github.com/cosmos/interchain-security/issues/339
        type: boolean
      historical_entries:
        description: >-
          The number of historical info entries to persist in store.

          This param is a part of the cosmos sdk staking module. In the case of

          a ccv enabled consumer chain, the ccv module acts as the staking
          module.
        format: int64
        type: string
      provider_fee_pool_addr_str:
        type: string
      provider_reward_denoms:
        items:
          type: string
        title: |-
          Provider-originated reward denoms. These are denoms coming from the
          provider which are allowed to be used as rewards. e.g. "uatom"
        type: array
      retry_delay_period:
        description: >-
          The period after which a consumer can retry sending a throttled
          packet.
        type: string
      reward_denoms:
        description: >-
          Reward denoms. These are the denominations which are allowed to be
          sent to

          the provider as rewards.
        items:
          type: string
        type: array
      soft_opt_out_threshold:
        title: >-
          !!! DEPRECATED !!! soft_opt_out_threshold is deprecated. see
          docs/docs/adrs/adr-015-partial-set-security.md
        type: string
      transfer_timeout_period:
        title: Sent transfer related IBC packets will timeout after this duration
        type: string
      unbonding_period:
        description: |-
          Unbonding period for the consumer,
          which should be smaller than that of the provider in general.
        type: string
    type: object
  interchain_security.ccv.v1.SlashPacketData:
    description: |-
      This packet is sent from the consumer chain to the provider chain
      to request the slashing of a validator as a result of an infraction
      committed on the consumer chain.
    properties:
      infraction:
        title: tell if the slashing is for a downtime or a double-signing infraction
        default: INFRACTION_UNSPECIFIED
        description: |-
          Infraction indicates the infraction a validator commited.

           - INFRACTION_UNSPECIFIED: UNSPECIFIED defines an empty infraction.
           - INFRACTION_DOUBLE_SIGN: DOUBLE_SIGN defines a validator that double-signs a block.
           - INFRACTION_DOWNTIME: DOWNTIME defines a validator that missed signing too many blocks.
        enum:
          - INFRACTION_UNSPECIFIED
          - INFRACTION_DOUBLE_SIGN
          - INFRACTION_DOWNTIME
        type: string
      validator:
        properties:
          address:
            format: byte
            type: string
          power:
            format: int64
            title: PubKey pub_key = 2 [(gogoproto.nullable)=false];
            type: string
        type: object
      valset_update_id:
        format: uint64
        title: map to the infraction block height on the provider
        type: string
    type: object
  interchain_security.ccv.v1.VSCMaturedPacketData:
    description: |-
      This packet is sent from the consumer chain to the provider chain
      to notify that a VSC packet reached maturity on the consumer chain.
    properties:
      valset_update_id:
        format: uint64
        title: the id of the VSC packet that reached maturity
        type: string
    type: object
  neutron.contractmanager.Failure:
    properties:
      address:
        title: Address of the failed contract
        type: string
      error:
        title: >-
          Redacted error response of the sudo call. Full error is emitted as an
          event
        type: string
      id:
        format: uint64
        title: Id of the failure under specific address
        type: string
      sudo_payload:
        format: byte
        title: Serialized MessageSudoCallback with Packet and Ack(if exists)
        type: string
    title: |-
      Failure message contains information about ACK failures and can be used to
      replay ACK in case of requirement.
      Note that Failure means that sudo handler to cosmwasm contract failed for
      some reason
    type: object
  neutron.contractmanager.Params:
    description: Params defines the parameters for the module.
    properties:
      sudo_call_gas_limit:
        format: uint64
        type: string
    type: object
  neutron.contractmanager.QueryFailureResponse:
    description: QueryFailureResponse is response type for the Query/Failure RPC method.
    properties:
      failure:
        properties:
          address:
            title: Address of the failed contract
            type: string
          error:
            title: >-
              Redacted error response of the sudo call. Full error is emitted as
              an event
            type: string
          id:
            format: uint64
            title: Id of the failure under specific address
            type: string
          sudo_payload:
            format: byte
            title: Serialized MessageSudoCallback with Packet and Ack(if exists)
            type: string
        title: >-
          Failure message contains information about ACK failures and can be
          used to

          replay ACK in case of requirement.

          Note that Failure means that sudo handler to cosmwasm contract failed
          for

          some reason
        type: object
    type: object
  neutron.contractmanager.QueryFailuresResponse:
    description: QueryFailuresResponse is response type for the Query/Failures RPC method.
    properties:
      failures:
        items:
          properties:
            address:
              title: Address of the failed contract
              type: string
            error:
              title: >-
                Redacted error response of the sudo call. Full error is emitted
                as an event
              type: string
            id:
              format: uint64
              title: Id of the failure under specific address
              type: string
            sudo_payload:
              format: byte
              title: Serialized MessageSudoCallback with Packet and Ack(if exists)
              type: string
          title: >-
            Failure message contains information about ACK failures and can be
            used to

            replay ACK in case of requirement.

            Note that Failure means that sudo handler to cosmwasm contract
            failed for

            some reason
          type: object
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  neutron.contractmanager.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    properties:
      params:
        description: params holds all the parameters of this module.
        properties:
          sudo_call_gas_limit:
            format: uint64
            type: string
        type: object
    type: object
  neutron.cron.ExecutionStage:
    default: EXECUTION_STAGE_END_BLOCKER
    description: |-
      - EXECUTION_STAGE_END_BLOCKER: Execution at the end of the block
       - EXECUTION_STAGE_BEGIN_BLOCKER: Execution at the beginning of the block
    enum:
      - EXECUTION_STAGE_END_BLOCKER
      - EXECUTION_STAGE_BEGIN_BLOCKER
    title: Defines when messages will be executed in the block
    type: string
  neutron.cron.MsgExecuteContract:
    properties:
      contract:
        title: The address of the smart contract
        type: string
      msg:
        title: JSON encoded message to be passed to the contract
        type: string
    title: Defines the contract and the message to pass
    type: object
  neutron.cron.Params:
    description: Defines the parameters for the module.
    properties:
      limit:
        format: uint64
        title: Limit of schedules executed in one block
        type: string
      security_address:
        title: Security address that can remove schedules
        type: string
    type: object
  neutron.cron.QueryGetScheduleResponse:
    description: The response type for the Query/Params RPC method.
    properties:
      schedule:
        properties:
          execution_stage:
            title: Stage when messages will be executed
            default: EXECUTION_STAGE_END_BLOCKER
            description: |-
              - EXECUTION_STAGE_END_BLOCKER: Execution at the end of the block
               - EXECUTION_STAGE_BEGIN_BLOCKER: Execution at the beginning of the block
            enum:
              - EXECUTION_STAGE_END_BLOCKER
              - EXECUTION_STAGE_BEGIN_BLOCKER
            type: string
          last_execute_height:
            format: uint64
            title: Last execution's block height
            type: string
          msgs:
            items:
              properties:
                contract:
                  title: The address of the smart contract
                  type: string
                msg:
                  title: JSON encoded message to be passed to the contract
                  type: string
              title: Defines the contract and the message to pass
              type: object
            title: >-
              Msgs that will be executed every certain number of blocks,
              specified in the `period` field
            type: array
          name:
            title: Name of schedule
            type: string
          period:
            format: uint64
            title: Period in blocks
            type: string
        title: Defines the schedule for execution
        type: object
    type: object
  neutron.cron.QueryParamsResponse:
    description: The response type for the Query/Params RPC method.
    properties:
      params:
        description: params holds all the parameters of this module.
        properties:
          limit:
            format: uint64
            title: Limit of schedules executed in one block
            type: string
          security_address:
            title: Security address that can remove schedules
            type: string
        type: object
    type: object
  neutron.cron.QuerySchedulesResponse:
    description: The response type for the Query/Params RPC method.
    properties:
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
      schedules:
        items:
          properties:
            execution_stage:
              title: Stage when messages will be executed
              default: EXECUTION_STAGE_END_BLOCKER
              description: |-
                - EXECUTION_STAGE_END_BLOCKER: Execution at the end of the block
                 - EXECUTION_STAGE_BEGIN_BLOCKER: Execution at the beginning of the block
              enum:
                - EXECUTION_STAGE_END_BLOCKER
                - EXECUTION_STAGE_BEGIN_BLOCKER
              type: string
            last_execute_height:
              format: uint64
              title: Last execution's block height
              type: string
            msgs:
              items:
                properties:
                  contract:
                    title: The address of the smart contract
                    type: string
                  msg:
                    title: JSON encoded message to be passed to the contract
                    type: string
                title: Defines the contract and the message to pass
                type: object
              title: >-
                Msgs that will be executed every certain number of blocks,
                specified in the `period` field
              type: array
            name:
              title: Name of schedule
              type: string
            period:
              format: uint64
              title: Period in blocks
              type: string
          title: Defines the schedule for execution
          type: object
        type: array
    type: object
  neutron.cron.Schedule:
    properties:
      execution_stage:
        title: Stage when messages will be executed
        default: EXECUTION_STAGE_END_BLOCKER
        description: |-
          - EXECUTION_STAGE_END_BLOCKER: Execution at the end of the block
           - EXECUTION_STAGE_BEGIN_BLOCKER: Execution at the beginning of the block
        enum:
          - EXECUTION_STAGE_END_BLOCKER
          - EXECUTION_STAGE_BEGIN_BLOCKER
        type: string
      last_execute_height:
        format: uint64
        title: Last execution's block height
        type: string
      msgs:
        items:
          properties:
            contract:
              title: The address of the smart contract
              type: string
            msg:
              title: JSON encoded message to be passed to the contract
              type: string
          title: Defines the contract and the message to pass
          type: object
        title: >-
          Msgs that will be executed every certain number of blocks, specified
          in the `period` field
        type: array
      name:
        title: Name of schedule
        type: string
      period:
        format: uint64
        title: Period in blocks
        type: string
    title: Defines the schedule for execution
    type: object
  neutron.dex.DepositOptions:
    properties:
      disable_autoswap:
        type: boolean
      fail_tx_on_bel:
        type: boolean
    type: object
  neutron.dex.DepositRecord:
    properties:
      center_tick_index:
        format: int64
        type: string
      fee:
        format: uint64
        type: string
      lower_tick_index:
        format: int64
        type: string
      pair_id:
        properties:
          token0:
            type: string
          token1:
            type: string
        type: object
      pool:
        properties:
          id:
            format: uint64
            type: string
          lower_tick0:
            properties:
              key:
                properties:
                  fee:
                    format: uint64
                    type: string
                  tick_index_taker_to_maker:
                    format: int64
                    type: string
                  trade_pair_id:
                    properties:
                      maker_denom:
                        type: string
                      taker_denom:
                        type: string
                    type: object
                type: object
              maker_price:
                title: >-
                  This is the price of the PoolReserves denominated in the
                  opposite token. (ie. 1 TokenA with a maker_price of 10 is
                  worth 10 TokenB )
                type: string
              price_opposite_taker_to_maker:
                description: >-
                  DEPRECATED: price_opposite_taker_maker was an internal
                  implementation detail and will be removed in a future release.

                  It is being kept strictly for backwards compatibility. The
                  actual field value is unused.
                type: string
              price_taker_to_maker:
                description: >-
                  DEPRECATED: price_taker_to_maker will be removed in future
                  release, `maker_price` should always be used.
                type: string
              reserves_maker_denom:
                type: string
            type: object
          upper_tick1:
            properties:
              key:
                properties:
                  fee:
                    format: uint64
                    type: string
                  tick_index_taker_to_maker:
                    format: int64
                    type: string
                  trade_pair_id:
                    properties:
                      maker_denom:
                        type: string
                      taker_denom:
                        type: string
                    type: object
                type: object
              maker_price:
                title: >-
                  This is the price of the PoolReserves denominated in the
                  opposite token. (ie. 1 TokenA with a maker_price of 10 is
                  worth 10 TokenB )
                type: string
              price_opposite_taker_to_maker:
                description: >-
                  DEPRECATED: price_opposite_taker_maker was an internal
                  implementation detail and will be removed in a future release.

                  It is being kept strictly for backwards compatibility. The
                  actual field value is unused.
                type: string
              price_taker_to_maker:
                description: >-
                  DEPRECATED: price_taker_to_maker will be removed in future
                  release, `maker_price` should always be used.
                type: string
              reserves_maker_denom:
                type: string
            type: object
        type: object
      shares_owned:
        type: string
      total_shares:
        type: string
      upper_tick_index:
        format: int64
        type: string
    type: object
  neutron.dex.FailedDeposit:
    properties:
      deposit_idx:
        format: uint64
        type: string
      error:
        type: string
    type: object
  neutron.dex.LimitOrderTranche:
    properties:
      expiration_time:
        format: date-time
        title: >-
          JIT orders also use expiration_time to handle deletion but represent a
          special case

          All JIT orders have a expiration_time of 0 and an exception is made to
          still treat these orders as live

          Order deletion still functions the same and the orders will be deleted
          at the end of the block
        type: string
      key:
        properties:
          tick_index_taker_to_maker:
            format: int64
            type: string
          trade_pair_id:
            properties:
              maker_denom:
                type: string
              taker_denom:
                type: string
            type: object
          tranche_key:
            type: string
        type: object
      maker_price:
        title: >-
          This is the price of the LimitOrder denominated in the opposite token.
          (ie. 1 TokenA with a maker_price of 10 is worth 10 TokenB )
        type: string
      price_taker_to_maker:
        description: >-
          DEPRECATED: price_taker_to_maker will be removed in future release,
          `maker_price` should always be used.
        type: string
      reserves_maker_denom:
        type: string
      reserves_taker_denom:
        type: string
      total_maker_denom:
        type: string
      total_taker_denom:
        type: string
    type: object
  neutron.dex.LimitOrderTrancheKey:
    properties:
      tick_index_taker_to_maker:
        format: int64
        type: string
      trade_pair_id:
        properties:
          maker_denom:
            type: string
          taker_denom:
            type: string
        type: object
      tranche_key:
        type: string
    type: object
  neutron.dex.LimitOrderTrancheUser:
    properties:
      address:
        type: string
      order_type:
        default: GOOD_TIL_CANCELLED
        enum:
          - GOOD_TIL_CANCELLED
          - FILL_OR_KILL
          - IMMEDIATE_OR_CANCEL
          - JUST_IN_TIME
          - GOOD_TIL_TIME
        type: string
      shares_cancelled:
        title: 'TODO: remove this in next release. It is no longer used'
        type: string
      shares_owned:
        type: string
      shares_withdrawn:
        type: string
      tick_index_taker_to_maker:
        format: int64
        type: string
      trade_pair_id:
        properties:
          maker_denom:
            type: string
          taker_denom:
            type: string
        type: object
      tranche_key:
        type: string
    type: object
  neutron.dex.LimitOrderType:
    default: GOOD_TIL_CANCELLED
    enum:
      - GOOD_TIL_CANCELLED
      - FILL_OR_KILL
      - IMMEDIATE_OR_CANCEL
      - JUST_IN_TIME
      - GOOD_TIL_TIME
    type: string
  neutron.dex.MsgCancelLimitOrder:
    properties:
      creator:
        type: string
      tranche_key:
        type: string
    type: object
  neutron.dex.MsgCancelLimitOrderResponse:
    properties:
      maker_coin_out:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
        title: Total amount of maker reserves that were canceled
      taker_coin_out:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
        title: Total amount of taker reserves that were withdrawn
    type: object
  neutron.dex.MsgDeposit:
    properties:
      amounts_a:
        items:
          type: string
        type: array
      amounts_b:
        items:
          type: string
        type: array
      creator:
        type: string
      fees:
        items:
          format: uint64
          type: string
        type: array
      options:
        items:
          properties:
            disable_autoswap:
              type: boolean
            fail_tx_on_bel:
              type: boolean
          type: object
        type: array
      receiver:
        type: string
      tick_indexes_a_to_b:
        items:
          format: int64
          type: string
        type: array
      token_a:
        type: string
      token_b:
        type: string
    type: object
  neutron.dex.MsgDepositResponse:
    properties:
      failed_deposits:
        items:
          properties:
            deposit_idx:
              format: uint64
              type: string
            error:
              type: string
          type: object
        type: array
      reserve0_deposited:
        items:
          type: string
        type: array
      reserve1_deposited:
        items:
          type: string
        type: array
      shares_issued:
        items:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
    type: object
  neutron.dex.MsgMultiHopSwap:
    properties:
      amount_in:
        type: string
      creator:
        type: string
      exit_limit_price:
        type: string
      pick_best_route:
        description: >-
          If pickBestRoute == true then all routes are run and the route with
          the

          best price is chosen otherwise, the first succesful route is used.
        type: boolean
      receiver:
        type: string
      routes:
        items:
          properties:
            hops:
              items:
                type: string
              type: array
          type: object
        type: array
    type: object
  neutron.dex.MsgMultiHopSwapResponse:
    properties:
      coin_out:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
      dust:
        items:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      route:
        properties:
          hops:
            items:
              type: string
            type: array
        type: object
    type: object
  neutron.dex.MsgPlaceLimitOrder:
    properties:
      amount_in:
        type: string
      creator:
        type: string
      expiration_time:
        description: expirationTime is only valid iff orderType == GOOD_TIL_TIME.
        format: date-time
        type: string
      limit_sell_price:
        type: string
      max_amount_out:
        type: string
      min_average_sell_price:
        title: >-
          min_average_sell_price is an optional parameter that sets a required
          minimum average price for the entire trade.

          if the min_average_sell_price is not met the trade will fail.

          If min_average_sell_price is omitted limit_sell_price will be used
          instead
        type: string
      order_type:
        default: GOOD_TIL_CANCELLED
        enum:
          - GOOD_TIL_CANCELLED
          - FILL_OR_KILL
          - IMMEDIATE_OR_CANCEL
          - JUST_IN_TIME
          - GOOD_TIL_TIME
        type: string
      receiver:
        type: string
      tick_index_in_to_out:
        description: >-
          DEPRECATED: tick_index_in_to_out will be removed in future release;
          limit_sell_price should be used instead.
        format: int64
        type: string
      token_in:
        type: string
      token_out:
        type: string
    type: object
  neutron.dex.MsgPlaceLimitOrderResponse:
    properties:
      coin_in:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
        title: Total amount of coin used for the limit order
      taker_coin_in:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
        title: >-
          Total amount of the token in that was immediately swapped for
          takerOutCoin
      taker_coin_out:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
        title: >-
          Total amount of coin received from the taker portion of the limit
          order

          This is the amount of coin immediately available in the users account
          after

          executing the limit order. It does not include any future proceeds
          from the

          maker portion which will have withdrawn in the future
      trancheKey:
        type: string
    type: object
  neutron.dex.MsgWithdrawFilledLimitOrder:
    properties:
      creator:
        type: string
      tranche_key:
        type: string
    type: object
  neutron.dex.MsgWithdrawFilledLimitOrderResponse:
    properties:
      maker_coin_out:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
        title: >-
          Total amount of maker reserves that were withdrawn --only applies to
          inactive LimitOrders
      taker_coin_out:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
        title: Total amount of taker reserves that were withdrawn
    type: object
  neutron.dex.MsgWithdrawal:
    properties:
      creator:
        type: string
      fees:
        items:
          format: uint64
          type: string
        type: array
      receiver:
        type: string
      shares_to_remove:
        items:
          type: string
        type: array
      tick_indexes_a_to_b:
        items:
          format: int64
          type: string
        type: array
      token_a:
        type: string
      token_b:
        type: string
    type: object
  neutron.dex.MsgWithdrawalResponse:
    properties:
      reserve0_withdrawn:
        type: string
      reserve1_withdrawn:
        type: string
      shares_burned:
        items:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
    type: object
  neutron.dex.MultiHopRoute:
    properties:
      hops:
        items:
          type: string
        type: array
    type: object
  neutron.dex.PairID:
    properties:
      token0:
        type: string
      token1:
        type: string
    type: object
  neutron.dex.Params:
    description: Params defines the parameters for the module.
    properties:
      fee_tiers:
        items:
          format: uint64
          type: string
        type: array
      good_til_purge_allowance:
        format: uint64
        type: string
      max_jits_per_block:
        format: uint64
        type: string
      paused:
        type: boolean
    type: object
  neutron.dex.Pool:
    properties:
      id:
        format: uint64
        type: string
      lower_tick0:
        properties:
          key:
            properties:
              fee:
                format: uint64
                type: string
              tick_index_taker_to_maker:
                format: int64
                type: string
              trade_pair_id:
                properties:
                  maker_denom:
                    type: string
                  taker_denom:
                    type: string
                type: object
            type: object
          maker_price:
            title: >-
              This is the price of the PoolReserves denominated in the opposite
              token. (ie. 1 TokenA with a maker_price of 10 is worth 10 TokenB )
            type: string
          price_opposite_taker_to_maker:
            description: >-
              DEPRECATED: price_opposite_taker_maker was an internal
              implementation detail and will be removed in a future release.

              It is being kept strictly for backwards compatibility. The actual
              field value is unused.
            type: string
          price_taker_to_maker:
            description: >-
              DEPRECATED: price_taker_to_maker will be removed in future
              release, `maker_price` should always be used.
            type: string
          reserves_maker_denom:
            type: string
        type: object
      upper_tick1:
        properties:
          key:
            properties:
              fee:
                format: uint64
                type: string
              tick_index_taker_to_maker:
                format: int64
                type: string
              trade_pair_id:
                properties:
                  maker_denom:
                    type: string
                  taker_denom:
                    type: string
                type: object
            type: object
          maker_price:
            title: >-
              This is the price of the PoolReserves denominated in the opposite
              token. (ie. 1 TokenA with a maker_price of 10 is worth 10 TokenB )
            type: string
          price_opposite_taker_to_maker:
            description: >-
              DEPRECATED: price_opposite_taker_maker was an internal
              implementation detail and will be removed in a future release.

              It is being kept strictly for backwards compatibility. The actual
              field value is unused.
            type: string
          price_taker_to_maker:
            description: >-
              DEPRECATED: price_taker_to_maker will be removed in future
              release, `maker_price` should always be used.
            type: string
          reserves_maker_denom:
            type: string
        type: object
    type: object
  neutron.dex.PoolMetadata:
    properties:
      fee:
        format: uint64
        type: string
      id:
        format: uint64
        type: string
      pair_id:
        properties:
          token0:
            type: string
          token1:
            type: string
        type: object
      tick:
        format: int64
        type: string
    type: object
  neutron.dex.PoolReserves:
    properties:
      key:
        properties:
          fee:
            format: uint64
            type: string
          tick_index_taker_to_maker:
            format: int64
            type: string
          trade_pair_id:
            properties:
              maker_denom:
                type: string
              taker_denom:
                type: string
            type: object
        type: object
      maker_price:
        title: >-
          This is the price of the PoolReserves denominated in the opposite
          token. (ie. 1 TokenA with a maker_price of 10 is worth 10 TokenB )
        type: string
      price_opposite_taker_to_maker:
        description: >-
          DEPRECATED: price_opposite_taker_maker was an internal implementation
          detail and will be removed in a future release.

          It is being kept strictly for backwards compatibility. The actual
          field value is unused.
        type: string
      price_taker_to_maker:
        description: >-
          DEPRECATED: price_taker_to_maker will be removed in future release,
          `maker_price` should always be used.
        type: string
      reserves_maker_denom:
        type: string
    type: object
  neutron.dex.PoolReservesKey:
    properties:
      fee:
        format: uint64
        type: string
      tick_index_taker_to_maker:
        format: int64
        type: string
      trade_pair_id:
        properties:
          maker_denom:
            type: string
          taker_denom:
            type: string
        type: object
    type: object
  neutron.dex.QueryAllInactiveLimitOrderTrancheResponse:
    properties:
      inactive_limit_order_tranche:
        items:
          properties:
            expiration_time:
              format: date-time
              title: >-
                JIT orders also use expiration_time to handle deletion but
                represent a special case

                All JIT orders have a expiration_time of 0 and an exception is
                made to still treat these orders as live

                Order deletion still functions the same and the orders will be
                deleted at the end of the block
              type: string
            key:
              properties:
                tick_index_taker_to_maker:
                  format: int64
                  type: string
                trade_pair_id:
                  properties:
                    maker_denom:
                      type: string
                    taker_denom:
                      type: string
                  type: object
                tranche_key:
                  type: string
              type: object
            maker_price:
              title: >-
                This is the price of the LimitOrder denominated in the opposite
                token. (ie. 1 TokenA with a maker_price of 10 is worth 10 TokenB
                )
              type: string
            price_taker_to_maker:
              description: >-
                DEPRECATED: price_taker_to_maker will be removed in future
                release, `maker_price` should always be used.
              type: string
            reserves_maker_denom:
              type: string
            reserves_taker_denom:
              type: string
            total_maker_denom:
              type: string
            total_taker_denom:
              type: string
          type: object
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  neutron.dex.QueryAllLimitOrderTrancheResponse:
    properties:
      limit_order_tranche:
        items:
          properties:
            expiration_time:
              format: date-time
              title: >-
                JIT orders also use expiration_time to handle deletion but
                represent a special case

                All JIT orders have a expiration_time of 0 and an exception is
                made to still treat these orders as live

                Order deletion still functions the same and the orders will be
                deleted at the end of the block
              type: string
            key:
              properties:
                tick_index_taker_to_maker:
                  format: int64
                  type: string
                trade_pair_id:
                  properties:
                    maker_denom:
                      type: string
                    taker_denom:
                      type: string
                  type: object
                tranche_key:
                  type: string
              type: object
            maker_price:
              title: >-
                This is the price of the LimitOrder denominated in the opposite
                token. (ie. 1 TokenA with a maker_price of 10 is worth 10 TokenB
                )
              type: string
            price_taker_to_maker:
              description: >-
                DEPRECATED: price_taker_to_maker will be removed in future
                release, `maker_price` should always be used.
              type: string
            reserves_maker_denom:
              type: string
            reserves_taker_denom:
              type: string
            total_maker_denom:
              type: string
            total_taker_denom:
              type: string
          type: object
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  neutron.dex.QueryAllLimitOrderTrancheUserByAddressResponse:
    properties:
      limit_orders:
        items:
          properties:
            address:
              type: string
            order_type:
              default: GOOD_TIL_CANCELLED
              enum:
                - GOOD_TIL_CANCELLED
                - FILL_OR_KILL
                - IMMEDIATE_OR_CANCEL
                - JUST_IN_TIME
                - GOOD_TIL_TIME
              type: string
            shares_cancelled:
              title: 'TODO: remove this in next release. It is no longer used'
              type: string
            shares_owned:
              type: string
            shares_withdrawn:
              type: string
            tick_index_taker_to_maker:
              format: int64
              type: string
            trade_pair_id:
              properties:
                maker_denom:
                  type: string
                taker_denom:
                  type: string
              type: object
            tranche_key:
              type: string
          type: object
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  neutron.dex.QueryAllLimitOrderTrancheUserResponse:
    properties:
      limit_order_tranche_user:
        items:
          properties:
            address:
              type: string
            order_type:
              default: GOOD_TIL_CANCELLED
              enum:
                - GOOD_TIL_CANCELLED
                - FILL_OR_KILL
                - IMMEDIATE_OR_CANCEL
                - JUST_IN_TIME
                - GOOD_TIL_TIME
              type: string
            shares_cancelled:
              title: 'TODO: remove this in next release. It is no longer used'
              type: string
            shares_owned:
              type: string
            shares_withdrawn:
              type: string
            tick_index_taker_to_maker:
              format: int64
              type: string
            trade_pair_id:
              properties:
                maker_denom:
                  type: string
                taker_denom:
                  type: string
              type: object
            tranche_key:
              type: string
          type: object
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  neutron.dex.QueryAllPoolMetadataResponse:
    properties:
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
      pool_metadata:
        items:
          properties:
            fee:
              format: uint64
              type: string
            id:
              format: uint64
              type: string
            pair_id:
              properties:
                token0:
                  type: string
                token1:
                  type: string
              type: object
            tick:
              format: int64
              type: string
          type: object
        type: array
    type: object
  neutron.dex.QueryAllPoolReservesResponse:
    properties:
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
      pool_reserves:
        items:
          properties:
            key:
              properties:
                fee:
                  format: uint64
                  type: string
                tick_index_taker_to_maker:
                  format: int64
                  type: string
                trade_pair_id:
                  properties:
                    maker_denom:
                      type: string
                    taker_denom:
                      type: string
                  type: object
              type: object
            maker_price:
              title: >-
                This is the price of the PoolReserves denominated in the
                opposite token. (ie. 1 TokenA with a maker_price of 10 is worth
                10 TokenB )
              type: string
            price_opposite_taker_to_maker:
              description: >-
                DEPRECATED: price_opposite_taker_maker was an internal
                implementation detail and will be removed in a future release.

                It is being kept strictly for backwards compatibility. The
                actual field value is unused.
              type: string
            price_taker_to_maker:
              description: >-
                DEPRECATED: price_taker_to_maker will be removed in future
                release, `maker_price` should always be used.
              type: string
            reserves_maker_denom:
              type: string
          type: object
        type: array
    type: object
  neutron.dex.QueryAllTickLiquidityResponse:
    properties:
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
      tick_liquidity:
        items:
          properties:
            limit_order_tranche:
              properties:
                expiration_time:
                  format: date-time
                  title: >-
                    JIT orders also use expiration_time to handle deletion but
                    represent a special case

                    All JIT orders have a expiration_time of 0 and an exception
                    is made to still treat these orders as live

                    Order deletion still functions the same and the orders will
                    be deleted at the end of the block
                  type: string
                key:
                  properties:
                    tick_index_taker_to_maker:
                      format: int64
                      type: string
                    trade_pair_id:
                      properties:
                        maker_denom:
                          type: string
                        taker_denom:
                          type: string
                      type: object
                    tranche_key:
                      type: string
                  type: object
                maker_price:
                  title: >-
                    This is the price of the LimitOrder denominated in the
                    opposite token. (ie. 1 TokenA with a maker_price of 10 is
                    worth 10 TokenB )
                  type: string
                price_taker_to_maker:
                  description: >-
                    DEPRECATED: price_taker_to_maker will be removed in future
                    release, `maker_price` should always be used.
                  type: string
                reserves_maker_denom:
                  type: string
                reserves_taker_denom:
                  type: string
                total_maker_denom:
                  type: string
                total_taker_denom:
                  type: string
              type: object
            pool_reserves:
              properties:
                key:
                  properties:
                    fee:
                      format: uint64
                      type: string
                    tick_index_taker_to_maker:
                      format: int64
                      type: string
                    trade_pair_id:
                      properties:
                        maker_denom:
                          type: string
                        taker_denom:
                          type: string
                      type: object
                  type: object
                maker_price:
                  title: >-
                    This is the price of the PoolReserves denominated in the
                    opposite token. (ie. 1 TokenA with a maker_price of 10 is
                    worth 10 TokenB )
                  type: string
                price_opposite_taker_to_maker:
                  description: >-
                    DEPRECATED: price_opposite_taker_maker was an internal
                    implementation detail and will be removed in a future
                    release.

                    It is being kept strictly for backwards compatibility. The
                    actual field value is unused.
                  type: string
                price_taker_to_maker:
                  description: >-
                    DEPRECATED: price_taker_to_maker will be removed in future
                    release, `maker_price` should always be used.
                  type: string
                reserves_maker_denom:
                  type: string
              type: object
          type: object
        type: array
    type: object
  neutron.dex.QueryAllUserDepositsResponse:
    properties:
      deposits:
        items:
          properties:
            center_tick_index:
              format: int64
              type: string
            fee:
              format: uint64
              type: string
            lower_tick_index:
              format: int64
              type: string
            pair_id:
              properties:
                token0:
                  type: string
                token1:
                  type: string
              type: object
            pool:
              properties:
                id:
                  format: uint64
                  type: string
                lower_tick0:
                  properties:
                    key:
                      properties:
                        fee:
                          format: uint64
                          type: string
                        tick_index_taker_to_maker:
                          format: int64
                          type: string
                        trade_pair_id:
                          properties:
                            maker_denom:
                              type: string
                            taker_denom:
                              type: string
                          type: object
                      type: object
                    maker_price:
                      title: >-
                        This is the price of the PoolReserves denominated in the
                        opposite token. (ie. 1 TokenA with a maker_price of 10
                        is worth 10 TokenB )
                      type: string
                    price_opposite_taker_to_maker:
                      description: >-
                        DEPRECATED: price_opposite_taker_maker was an internal
                        implementation detail and will be removed in a future
                        release.

                        It is being kept strictly for backwards compatibility.
                        The actual field value is unused.
                      type: string
                    price_taker_to_maker:
                      description: >-
                        DEPRECATED: price_taker_to_maker will be removed in
                        future release, `maker_price` should always be used.
                      type: string
                    reserves_maker_denom:
                      type: string
                  type: object
                upper_tick1:
                  properties:
                    key:
                      properties:
                        fee:
                          format: uint64
                          type: string
                        tick_index_taker_to_maker:
                          format: int64
                          type: string
                        trade_pair_id:
                          properties:
                            maker_denom:
                              type: string
                            taker_denom:
                              type: string
                          type: object
                      type: object
                    maker_price:
                      title: >-
                        This is the price of the PoolReserves denominated in the
                        opposite token. (ie. 1 TokenA with a maker_price of 10
                        is worth 10 TokenB )
                      type: string
                    price_opposite_taker_to_maker:
                      description: >-
                        DEPRECATED: price_opposite_taker_maker was an internal
                        implementation detail and will be removed in a future
                        release.

                        It is being kept strictly for backwards compatibility.
                        The actual field value is unused.
                      type: string
                    price_taker_to_maker:
                      description: >-
                        DEPRECATED: price_taker_to_maker will be removed in
                        future release, `maker_price` should always be used.
                      type: string
                    reserves_maker_denom:
                      type: string
                  type: object
              type: object
            shares_owned:
              type: string
            total_shares:
              type: string
            upper_tick_index:
              format: int64
              type: string
          type: object
        type: array
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
    type: object
  neutron.dex.QueryEstimateMultiHopSwapResponse:
    properties:
      coin_out:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
    type: object
  neutron.dex.QueryEstimatePlaceLimitOrderResponse:
    properties:
      swap_in_coin:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
        title: >-
          Total amount of the token in that was immediately swapped for
          swapOutCoin
      swap_out_coin:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
        title: >-
          Total amount of coin received from the taker portion of the limit
          order

          This is the amount of coin immediately available in the users account
          after

          executing the limit order. It does not include any future proceeds
          from the

          maker portion which will have withdrawn in the future
      total_in_coin:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
        title: |-
          Total amount of coin used for the limit order
          You can derive makerLimitInCoin using the equation: totalInCoin =
          swapInCoin + makerLimitInCoin
    type: object
  neutron.dex.QueryGetInactiveLimitOrderTrancheResponse:
    properties:
      inactive_limit_order_tranche:
        properties:
          expiration_time:
            format: date-time
            title: >-
              JIT orders also use expiration_time to handle deletion but
              represent a special case

              All JIT orders have a expiration_time of 0 and an exception is
              made to still treat these orders as live

              Order deletion still functions the same and the orders will be
              deleted at the end of the block
            type: string
          key:
            properties:
              tick_index_taker_to_maker:
                format: int64
                type: string
              trade_pair_id:
                properties:
                  maker_denom:
                    type: string
                  taker_denom:
                    type: string
                type: object
              tranche_key:
                type: string
            type: object
          maker_price:
            title: >-
              This is the price of the LimitOrder denominated in the opposite
              token. (ie. 1 TokenA with a maker_price of 10 is worth 10 TokenB )
            type: string
          price_taker_to_maker:
            description: >-
              DEPRECATED: price_taker_to_maker will be removed in future
              release, `maker_price` should always be used.
            type: string
          reserves_maker_denom:
            type: string
          reserves_taker_denom:
            type: string
          total_maker_denom:
            type: string
          total_taker_denom:
            type: string
        type: object
    type: object
  neutron.dex.QueryGetLimitOrderTrancheResponse:
    properties:
      limit_order_tranche:
        properties:
          expiration_time:
            format: date-time
            title: >-
              JIT orders also use expiration_time to handle deletion but
              represent a special case

              All JIT orders have a expiration_time of 0 and an exception is
              made to still treat these orders as live

              Order deletion still functions the same and the orders will be
              deleted at the end of the block
            type: string
          key:
            properties:
              tick_index_taker_to_maker:
                format: int64
                type: string
              trade_pair_id:
                properties:
                  maker_denom:
                    type: string
                  taker_denom:
                    type: string
                type: object
              tranche_key:
                type: string
            type: object
          maker_price:
            title: >-
              This is the price of the LimitOrder denominated in the opposite
              token. (ie. 1 TokenA with a maker_price of 10 is worth 10 TokenB )
            type: string
          price_taker_to_maker:
            description: >-
              DEPRECATED: price_taker_to_maker will be removed in future
              release, `maker_price` should always be used.
            type: string
          reserves_maker_denom:
            type: string
          reserves_taker_denom:
            type: string
          total_maker_denom:
            type: string
          total_taker_denom:
            type: string
        type: object
    type: object
  neutron.dex.QueryGetLimitOrderTrancheUserResponse:
    properties:
      limit_order_tranche_user:
        properties:
          address:
            type: string
          order_type:
            default: GOOD_TIL_CANCELLED
            enum:
              - GOOD_TIL_CANCELLED
              - FILL_OR_KILL
              - IMMEDIATE_OR_CANCEL
              - JUST_IN_TIME
              - GOOD_TIL_TIME
            type: string
          shares_cancelled:
            title: 'TODO: remove this in next release. It is no longer used'
            type: string
          shares_owned:
            type: string
          shares_withdrawn:
            type: string
          tick_index_taker_to_maker:
            format: int64
            type: string
          trade_pair_id:
            properties:
              maker_denom:
                type: string
              taker_denom:
                type: string
            type: object
          tranche_key:
            type: string
        type: object
      withdrawable_shares:
        type: string
    type: object
  neutron.dex.QueryGetPoolMetadataResponse:
    properties:
      Pool_metadata:
        properties:
          fee:
            format: uint64
            type: string
          id:
            format: uint64
            type: string
          pair_id:
            properties:
              token0:
                type: string
              token1:
                type: string
            type: object
          tick:
            format: int64
            type: string
        type: object
    type: object
  neutron.dex.QueryGetPoolReservesResponse:
    properties:
      pool_reserves:
        properties:
          key:
            properties:
              fee:
                format: uint64
                type: string
              tick_index_taker_to_maker:
                format: int64
                type: string
              trade_pair_id:
                properties:
                  maker_denom:
                    type: string
                  taker_denom:
                    type: string
                type: object
            type: object
          maker_price:
            title: >-
              This is the price of the PoolReserves denominated in the opposite
              token. (ie. 1 TokenA with a maker_price of 10 is worth 10 TokenB )
            type: string
          price_opposite_taker_to_maker:
            description: >-
              DEPRECATED: price_opposite_taker_maker was an internal
              implementation detail and will be removed in a future release.

              It is being kept strictly for backwards compatibility. The actual
              field value is unused.
            type: string
          price_taker_to_maker:
            description: >-
              DEPRECATED: price_taker_to_maker will be removed in future
              release, `maker_price` should always be used.
            type: string
          reserves_maker_denom:
            type: string
        type: object
    type: object
  neutron.dex.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    properties:
      params:
        description: params holds all the parameters of this module.
        properties:
          fee_tiers:
            items:
              format: uint64
              type: string
            type: array
          good_til_purge_allowance:
            format: uint64
            type: string
          max_jits_per_block:
            format: uint64
            type: string
          paused:
            type: boolean
        type: object
    type: object
  neutron.dex.QueryPoolResponse:
    properties:
      pool:
        properties:
          id:
            format: uint64
            type: string
          lower_tick0:
            properties:
              key:
                properties:
                  fee:
                    format: uint64
                    type: string
                  tick_index_taker_to_maker:
                    format: int64
                    type: string
                  trade_pair_id:
                    properties:
                      maker_denom:
                        type: string
                      taker_denom:
                        type: string
                    type: object
                type: object
              maker_price:
                title: >-
                  This is the price of the PoolReserves denominated in the
                  opposite token. (ie. 1 TokenA with a maker_price of 10 is
                  worth 10 TokenB )
                type: string
              price_opposite_taker_to_maker:
                description: >-
                  DEPRECATED: price_opposite_taker_maker was an internal
                  implementation detail and will be removed in a future release.

                  It is being kept strictly for backwards compatibility. The
                  actual field value is unused.
                type: string
              price_taker_to_maker:
                description: >-
                  DEPRECATED: price_taker_to_maker will be removed in future
                  release, `maker_price` should always be used.
                type: string
              reserves_maker_denom:
                type: string
            type: object
          upper_tick1:
            properties:
              key:
                properties:
                  fee:
                    format: uint64
                    type: string
                  tick_index_taker_to_maker:
                    format: int64
                    type: string
                  trade_pair_id:
                    properties:
                      maker_denom:
                        type: string
                      taker_denom:
                        type: string
                    type: object
                type: object
              maker_price:
                title: >-
                  This is the price of the PoolReserves denominated in the
                  opposite token. (ie. 1 TokenA with a maker_price of 10 is
                  worth 10 TokenB )
                type: string
              price_opposite_taker_to_maker:
                description: >-
                  DEPRECATED: price_opposite_taker_maker was an internal
                  implementation detail and will be removed in a future release.

                  It is being kept strictly for backwards compatibility. The
                  actual field value is unused.
                type: string
              price_taker_to_maker:
                description: >-
                  DEPRECATED: price_taker_to_maker will be removed in future
                  release, `maker_price` should always be used.
                type: string
              reserves_maker_denom:
                type: string
            type: object
        type: object
    type: object
  neutron.dex.QuerySimulateCancelLimitOrderResponse:
    properties:
      resp:
        properties:
          maker_coin_out:
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
            title: Total amount of maker reserves that were canceled
          taker_coin_out:
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
            title: Total amount of taker reserves that were withdrawn
        type: object
    type: object
  neutron.dex.QuerySimulateDepositResponse:
    properties:
      resp:
        properties:
          failed_deposits:
            items:
              properties:
                deposit_idx:
                  format: uint64
                  type: string
                error:
                  type: string
              type: object
            type: array
          reserve0_deposited:
            items:
              type: string
            type: array
          reserve1_deposited:
            items:
              type: string
            type: array
          shares_issued:
            items:
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            type: array
        type: object
    type: object
  neutron.dex.QuerySimulateMultiHopSwapResponse:
    properties:
      resp:
        properties:
          coin_out:
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          dust:
            items:
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            type: array
          route:
            properties:
              hops:
                items:
                  type: string
                type: array
            type: object
        type: object
    type: object
  neutron.dex.QuerySimulatePlaceLimitOrderResponse:
    properties:
      resp:
        properties:
          coin_in:
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
            title: Total amount of coin used for the limit order
          taker_coin_in:
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
            title: >-
              Total amount of the token in that was immediately swapped for
              takerOutCoin
          taker_coin_out:
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
            title: >-
              Total amount of coin received from the taker portion of the limit
              order

              This is the amount of coin immediately available in the users
              account after

              executing the limit order. It does not include any future proceeds
              from the

              maker portion which will have withdrawn in the future
          trancheKey:
            type: string
        type: object
    type: object
  neutron.dex.QuerySimulateWithdrawFilledLimitOrderResponse:
    properties:
      resp:
        properties:
          maker_coin_out:
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
            title: >-
              Total amount of maker reserves that were withdrawn --only applies
              to inactive LimitOrders
          taker_coin_out:
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
            title: Total amount of taker reserves that were withdrawn
        type: object
    type: object
  neutron.dex.QuerySimulateWithdrawalResponse:
    properties:
      resp:
        properties:
          reserve0_withdrawn:
            type: string
          reserve1_withdrawn:
            type: string
          shares_burned:
            items:
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            type: array
        type: object
    type: object
  neutron.dex.TickLiquidity:
    properties:
      limit_order_tranche:
        properties:
          expiration_time:
            format: date-time
            title: >-
              JIT orders also use expiration_time to handle deletion but
              represent a special case

              All JIT orders have a expiration_time of 0 and an exception is
              made to still treat these orders as live

              Order deletion still functions the same and the orders will be
              deleted at the end of the block
            type: string
          key:
            properties:
              tick_index_taker_to_maker:
                format: int64
                type: string
              trade_pair_id:
                properties:
                  maker_denom:
                    type: string
                  taker_denom:
                    type: string
                type: object
              tranche_key:
                type: string
            type: object
          maker_price:
            title: >-
              This is the price of the LimitOrder denominated in the opposite
              token. (ie. 1 TokenA with a maker_price of 10 is worth 10 TokenB )
            type: string
          price_taker_to_maker:
            description: >-
              DEPRECATED: price_taker_to_maker will be removed in future
              release, `maker_price` should always be used.
            type: string
          reserves_maker_denom:
            type: string
          reserves_taker_denom:
            type: string
          total_maker_denom:
            type: string
          total_taker_denom:
            type: string
        type: object
      pool_reserves:
        properties:
          key:
            properties:
              fee:
                format: uint64
                type: string
              tick_index_taker_to_maker:
                format: int64
                type: string
              trade_pair_id:
                properties:
                  maker_denom:
                    type: string
                  taker_denom:
                    type: string
                type: object
            type: object
          maker_price:
            title: >-
              This is the price of the PoolReserves denominated in the opposite
              token. (ie. 1 TokenA with a maker_price of 10 is worth 10 TokenB )
            type: string
          price_opposite_taker_to_maker:
            description: >-
              DEPRECATED: price_opposite_taker_maker was an internal
              implementation detail and will be removed in a future release.

              It is being kept strictly for backwards compatibility. The actual
              field value is unused.
            type: string
          price_taker_to_maker:
            description: >-
              DEPRECATED: price_taker_to_maker will be removed in future
              release, `maker_price` should always be used.
            type: string
          reserves_maker_denom:
            type: string
        type: object
    type: object
  neutron.dex.TradePairID:
    properties:
      maker_denom:
        type: string
      taker_denom:
        type: string
    type: object
  neutron.dynamicfees.v1.Params:
    description: Params defines the parameters for the module.
    properties:
      ntrn_prices:
        items:
          description: |-
            DecCoin defines a token with a denomination and a decimal amount.

            NOTE: The amount field is an Dec which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        title: >-
          List of asset prices by the NTRN

          it's used in cooperation with feemarket module

          ntrn_prices is a data source to convert gas_price from feemarket's
          base_denom (untrn)

          into a given asset
        type: array
    type: object
  neutron.dynamicfees.v1.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    properties:
      params:
        description: params holds all the parameters of this module.
        properties:
          ntrn_prices:
            items:
              description: >-
                DecCoin defines a token with a denomination and a decimal
                amount.


                NOTE: The amount field is an Dec which implements the custom
                method

                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            title: >-
              List of asset prices by the NTRN

              it's used in cooperation with feemarket module

              ntrn_prices is a data source to convert gas_price from feemarket's
              base_denom (untrn)

              into a given asset
            type: array
        type: object
    type: object
  neutron.feeburner.Params:
    description: Params defines the parameters for the module.
    properties:
      neutron_denom:
        title: |-
          Defines Neutron denom, which will be burned during fee processing, any
          other denom will be sent to Treasury
        type: string
      reserve_address:
        title: Deprecated in v0.4.4. Is not used anymore
        type: string
      treasury_address:
        title: Defines treasury address
        type: string
    type: object
  neutron.feeburner.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    properties:
      params:
        description: params holds all the parameters of this module.
        properties:
          neutron_denom:
            title: >-
              Defines Neutron denom, which will be burned during fee processing,
              any

              other denom will be sent to Treasury
            type: string
          reserve_address:
            title: Deprecated in v0.4.4. Is not used anymore
            type: string
          treasury_address:
            title: Defines treasury address
            type: string
        type: object
    type: object
  neutron.feeburner.QueryTotalBurnedNeutronsAmountResponse:
    description: |-
      QueryTotalBurnedNeutronsAmountResponse is response type for the
      Query/QueryTotalBurnedNeutronsAmount method.
    properties:
      total_burned_neutrons_amount:
        properties:
          coin:
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
        title: TotalBurnedNeutronsAmount defines total amount of burned neutron fees
        type: object
    type: object
  neutron.feeburner.TotalBurnedNeutronsAmount:
    properties:
      coin:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
    title: TotalBurnedNeutronsAmount defines total amount of burned neutron fees
    type: object
  neutron.feerefunder.Fee:
    properties:
      ack_fee:
        items:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        title: the packet acknowledgement fee
        type: array
      recv_fee:
        items:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        title: the packet receive fee
        type: array
      timeout_fee:
        items:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        title: the packet timeout fee
        type: array
    title: Fee defines the ICS29 receive, acknowledgement and timeout fees
    type: object
  neutron.feerefunder.FeeInfo:
    properties:
      fee:
        properties:
          ack_fee:
            items:
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            title: the packet acknowledgement fee
            type: array
          recv_fee:
            items:
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            title: the packet receive fee
            type: array
          timeout_fee:
            items:
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            title: the packet timeout fee
            type: array
        title: Fee defines the ICS29 receive, acknowledgement and timeout fees
        type: object
      packet_id:
        properties:
          channel_id:
            type: string
          port_id:
            type: string
          sequence:
            format: uint64
            type: string
        type: object
      payer:
        type: string
    type: object
  neutron.feerefunder.FeeInfoResponse:
    properties:
      fee_info:
        properties:
          fee:
            properties:
              ack_fee:
                items:
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: the packet acknowledgement fee
                type: array
              recv_fee:
                items:
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: the packet receive fee
                type: array
              timeout_fee:
                items:
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: the packet timeout fee
                type: array
            title: Fee defines the ICS29 receive, acknowledgement and timeout fees
            type: object
          packet_id:
            properties:
              channel_id:
                type: string
              port_id:
                type: string
              sequence:
                format: uint64
                type: string
            type: object
          payer:
            type: string
        type: object
    type: object
  neutron.feerefunder.PacketID:
    properties:
      channel_id:
        type: string
      port_id:
        type: string
      sequence:
        format: uint64
        type: string
    type: object
  neutron.feerefunder.Params:
    description: Params defines the parameters for the module.
    properties:
      min_fee:
        properties:
          ack_fee:
            items:
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            title: the packet acknowledgement fee
            type: array
          recv_fee:
            items:
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            title: the packet receive fee
            type: array
          timeout_fee:
            items:
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            title: the packet timeout fee
            type: array
        title: Fee defines the ICS29 receive, acknowledgement and timeout fees
        type: object
    type: object
  neutron.feerefunder.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    properties:
      params:
        description: params holds all the parameters of this module.
        properties:
          min_fee:
            properties:
              ack_fee:
                items:
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: the packet acknowledgement fee
                type: array
              recv_fee:
                items:
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: the packet receive fee
                type: array
              timeout_fee:
                items:
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: the packet timeout fee
                type: array
            title: Fee defines the ICS29 receive, acknowledgement and timeout fees
            type: object
        type: object
    type: object
  neutron.ibcratelimit.v1beta1.Params:
    description: Params defines the parameters for the ibc-rate-limit module.
    properties:
      contract_address:
        type: string
    type: object
  neutron.ibcratelimit.v1beta1.QueryParamsResponse:
    description: aramsResponse is the response type for the Query/Params RPC method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties:
          contract_address:
            type: string
        type: object
    type: object
  neutron.interchainqueries.Block:
    description: A single verifiable result of an Interchain Query of TX type.
    properties:
      header:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
        description: >-
          The header of the block the transaction is included in. It is needed
          to know block header to

          verify inclusion of the transaction.
      next_block_header:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
        description: >-
          The header of the block next to the block the transaction is included
          in. It is needed to know

          block X+1 header to verify response of transaction for block X since
          LastResultsHash is root

          hash of all results of the txs from the previous block.
      tx:
        description: The transaction matched by the Interchain Query's transaction filter.
        properties:
          data:
            description: The arbitrary data typed body of the transaction.
            format: byte
            type: string
          delivery_proof:
            description: >-
              The Merkle Proof which proves existence of response in the block
              next to the block the

              transaction is included in.
            properties:
              aunts:
                items:
                  format: byte
                  type: string
                type: array
              index:
                format: int64
                type: string
              leaf_hash:
                format: byte
                type: string
              total:
                format: int64
                type: string
            type: object
          inclusion_proof:
            description: >-
              The Merkle Proof which proves inclusion of the transaction in the
              block.
            properties:
              aunts:
                items:
                  format: byte
                  type: string
                type: array
              index:
                format: int64
                type: string
              leaf_hash:
                format: byte
                type: string
              total:
                format: int64
                type: string
            type: object
          response:
            description: The result of the transaction execution.
            properties:
              code:
                format: int64
                type: integer
              codespace:
                type: string
              data:
                format: byte
                type: string
              events:
                items:
                  description: >-
                    Event allows application developers to attach additional
                    information to

                    ResponseFinalizeBlock and ResponseCheckTx.

                    Later, transactions may be queried using these events.
                  properties:
                    attributes:
                      items:
                        description: >-
                          EventAttribute is a single key-value pair, associated
                          with an event.
                        properties:
                          index:
                            type: boolean
                          key:
                            type: string
                          value:
                            type: string
                        type: object
                      type: array
                    type:
                      type: string
                  type: object
                type: array
              gas_used:
                format: int64
                type: string
              gas_wanted:
                format: int64
                type: string
              info:
                type: string
              log:
                type: string
            type: object
        type: object
    type: object
  neutron.interchainqueries.KVKey:
    description: Represents a path to an IAVL storage node.
    properties:
      key:
        description: >-
          A bytes field representing the key for specific data in the module's
          storage.
        format: byte
        type: string
      path:
        description: >-
          The substore name used in an Interchain Query. Typically, this
          corresponds to the keeper's

          storeKey, usually the module's name, such as "bank", "staking", etc.
        type: string
    type: object
  neutron.interchainqueries.Params:
    description: The parameters for the module.
    properties:
      max_kv_query_keys_count:
        format: uint64
        title: Maximum amount of keys in a registered key value query
        type: string
      max_transactions_filters:
        format: uint64
        title: >-
          max_transactions_filters defines maximum allowed amount of tx filters
          in msgRegisterInterchainQuery
        type: string
      query_deposit:
        description: >-
          Amount of coins required to be provided as deposit on Interchain Query
          registration.
        items:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      query_submit_timeout:
        description: >-
          The duration, measured in blocks, that must pass since the query's
          registration or its last

          result submission before the query becomes eligible for removal by
          anyone. Is used to set

          `submit_timeout` on Interchain Query registration.
        format: uint64
        type: string
      tx_query_removal_limit:
        description: >-
          Amount of tx hashes to be removed during a single EndBlock. Can vary
          to balance between

          network cleaning speed and EndBlock duration. A zero value means no
          limit.
        format: uint64
        type: string
    type: object
  neutron.interchainqueries.QueryLastRemoteHeightResponse:
    description: Response type for the Query/LastRemoteHeight RPC method.
    properties:
      height:
        description: The height of the chain that the IBC client is currently on.
        format: uint64
        type: string
      revision:
        description: The revision of the chain that the IBC client is currently on.
        format: uint64
        type: string
    type: object
  neutron.interchainqueries.QueryParamsResponse:
    description: Response type for the Query/Params RPC method.
    properties:
      params:
        description: Contains all parameters of the module.
        properties:
          max_kv_query_keys_count:
            format: uint64
            title: Maximum amount of keys in a registered key value query
            type: string
          max_transactions_filters:
            format: uint64
            title: >-
              max_transactions_filters defines maximum allowed amount of tx
              filters in msgRegisterInterchainQuery
            type: string
          query_deposit:
            description: >-
              Amount of coins required to be provided as deposit on Interchain
              Query registration.
            items:
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            type: array
          query_submit_timeout:
            description: >-
              The duration, measured in blocks, that must pass since the query's
              registration or its last

              result submission before the query becomes eligible for removal by
              anyone. Is used to set

              `submit_timeout` on Interchain Query registration.
            format: uint64
            type: string
          tx_query_removal_limit:
            description: >-
              Amount of tx hashes to be removed during a single EndBlock. Can
              vary to balance between

              network cleaning speed and EndBlock duration. A zero value means
              no limit.
            format: uint64
            type: string
        type: object
    type: object
  neutron.interchainqueries.QueryRegisteredQueriesResponse:
    description: Response type for the Query/RegisteredQueries RPC method.
    properties:
      pagination:
        description: |-
          PageResponse is to be embedded in gRPC response messages where the
          corresponding request message has used PageRequest.

           message SomeResponse {
                   repeated Bar results = 1;
                   PageResponse page = 2;
           }
        properties:
          next_key:
            description: |-
              next_key is the key to be passed to PageRequest.key to
              query the next page most efficiently. It will be empty if
              there are no more results.
            format: byte
            type: string
          total:
            format: uint64
            title: >-
              total is total number of results available if
              PageRequest.count_total

              was set, its value is undefined otherwise
            type: string
        type: object
      registered_queries:
        description: A list of registered Interchain Queries.
        items:
          description: >-
            Information about an Interchain Query registered in the
            interchainqueries module.
          properties:
            connection_id:
              description: >-
                The IBC connection ID to the remote chain (the source of
                querying data). Is used for getting

                ConsensusState from the respective IBC client to verify query
                result proofs.
              type: string
            deposit:
              description: >-
                Amount of coins paid for the Interchain Query registration. The
                deposit is paid back to the

                remover. The remover can be either the query owner (during the
                submit timeout) or anybody.
              items:
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
              type: array
            id:
              description: The unique id of the registered query.
              format: uint64
              type: string
            keys:
              description: >-
                The KV-storage keys for which to get values from the remote
                chain. Only applicable for the

                KV Interchain Queries. Max amount of keys is limited by the
                module's `max_kv_query_keys_count`

                parameters.
              items:
                description: Represents a path to an IAVL storage node.
                properties:
                  key:
                    description: >-
                      A bytes field representing the key for specific data in
                      the module's storage.
                    format: byte
                    type: string
                  path:
                    description: >-
                      The substore name used in an Interchain Query. Typically,
                      this corresponds to the keeper's

                      storeKey, usually the module's name, such as "bank",
                      "staking", etc.
                    type: string
                type: object
              type: array
            last_submitted_result_local_height:
              description: The local chain block height of the last query results update.
              format: uint64
              type: string
            last_submitted_result_remote_height:
              description: >-
                The remote chain block height that corresponds to the last query
                result update.
              properties:
                revision_height:
                  format: uint64
                  title: the height within the given revision
                  type: string
                revision_number:
                  format: uint64
                  title: the revision that the client is currently on
                  type: string
              title: >-
                Height is a monotonically increasing data type

                that can be compared against another Height for the purposes of
                updating and

                freezing clients
              type: object
            owner:
              description: The address of the contract that registered the query.
              type: string
            query_type:
              description: 'The query type identifier: `kv` or `tx`.'
              type: string
            registered_at_height:
              description: >-
                The local chain block height of the Interchain Query
                registration.
              format: uint64
              type: string
            submit_timeout:
              description: >-
                The duration, measured in blocks, that must pass since the
                query's registration or its last

                result submission before the query becomes eligible for removal
                by anyone.
              format: uint64
              type: string
            transactions_filter:
              description: >-
                A stringified list of filters for remote transactions search.
                Only applicable for the TX

                Interchain Queries. Example:
                "[{\"field\":\"tx.height\",\"op\":\"Gte\",\"value\":2644737}]".

                Supported operators: "eq", "lt", "gt", "lte", "gte". Max amount
                of filter conditions is limited

                by the module's `max_transactions_filters` parameters.
              type: string
            update_period:
              description: >-
                Parameter that defines the minimal delay between consecutive
                query executions (i.e. the

                minimal delay between query results update).
              format: uint64
              type: string
          type: object
        type: array
    type: object
  neutron.interchainqueries.QueryRegisteredQueryResponse:
    description: Response type for the Query/RegisteredQuery RPC method.
    properties:
      registered_query:
        description: >-
          Information about an Interchain Query registered in the
          interchainqueries module.
        properties:
          connection_id:
            description: >-
              The IBC connection ID to the remote chain (the source of querying
              data). Is used for getting

              ConsensusState from the respective IBC client to verify query
              result proofs.
            type: string
          deposit:
            description: >-
              Amount of coins paid for the Interchain Query registration. The
              deposit is paid back to the

              remover. The remover can be either the query owner (during the
              submit timeout) or anybody.
            items:
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            type: array
          id:
            description: The unique id of the registered query.
            format: uint64
            type: string
          keys:
            description: >-
              The KV-storage keys for which to get values from the remote chain.
              Only applicable for the

              KV Interchain Queries. Max amount of keys is limited by the
              module's `max_kv_query_keys_count`

              parameters.
            items:
              description: Represents a path to an IAVL storage node.
              properties:
                key:
                  description: >-
                    A bytes field representing the key for specific data in the
                    module's storage.
                  format: byte
                  type: string
                path:
                  description: >-
                    The substore name used in an Interchain Query. Typically,
                    this corresponds to the keeper's

                    storeKey, usually the module's name, such as "bank",
                    "staking", etc.
                  type: string
              type: object
            type: array
          last_submitted_result_local_height:
            description: The local chain block height of the last query results update.
            format: uint64
            type: string
          last_submitted_result_remote_height:
            description: >-
              The remote chain block height that corresponds to the last query
              result update.
            properties:
              revision_height:
                format: uint64
                title: the height within the given revision
                type: string
              revision_number:
                format: uint64
                title: the revision that the client is currently on
                type: string
            title: >-
              Height is a monotonically increasing data type

              that can be compared against another Height for the purposes of
              updating and

              freezing clients
            type: object
          owner:
            description: The address of the contract that registered the query.
            type: string
          query_type:
            description: 'The query type identifier: `kv` or `tx`.'
            type: string
          registered_at_height:
            description: The local chain block height of the Interchain Query registration.
            format: uint64
            type: string
          submit_timeout:
            description: >-
              The duration, measured in blocks, that must pass since the query's
              registration or its last

              result submission before the query becomes eligible for removal by
              anyone.
            format: uint64
            type: string
          transactions_filter:
            description: >-
              A stringified list of filters for remote transactions search. Only
              applicable for the TX

              Interchain Queries. Example:
              "[{\"field\":\"tx.height\",\"op\":\"Gte\",\"value\":2644737}]".

              Supported operators: "eq", "lt", "gt", "lte", "gte". Max amount of
              filter conditions is limited

              by the module's `max_transactions_filters` parameters.
            type: string
          update_period:
            description: >-
              Parameter that defines the minimal delay between consecutive query
              executions (i.e. the

              minimal delay between query results update).
            format: uint64
            type: string
        type: object
    type: object
  neutron.interchainqueries.QueryRegisteredQueryResultResponse:
    description: Response type for the Query/QueryResult RPC method.
    properties:
      result:
        description: The last successfully submitted result of an Interchain Query.
        properties:
          allow_kv_callbacks:
            description: >-
              Whether to send the query result to the owner contract as a sudo
              message. Only applicable for

              KV type of Interchain Queries.
            type: boolean
          block:
            description: >-
              A TX Interchain Query execution result. Contains metainformation
              about the blocks of the query

              execution height. Only populated when submitting an Interchain
              Query result for verification

              and emptied when saving the result on chain.
            properties:
              header:
                properties:
                  type_url:
                    type: string
                  value:
                    format: byte
                    type: string
                type: object
                description: >-
                  The header of the block the transaction is included in. It is
                  needed to know block header to

                  verify inclusion of the transaction.
              next_block_header:
                properties:
                  type_url:
                    type: string
                  value:
                    format: byte
                    type: string
                type: object
                description: >-
                  The header of the block next to the block the transaction is
                  included in. It is needed to know

                  block X+1 header to verify response of transaction for block X
                  since LastResultsHash is root

                  hash of all results of the txs from the previous block.
              tx:
                description: >-
                  The transaction matched by the Interchain Query's transaction
                  filter.
                properties:
                  data:
                    description: The arbitrary data typed body of the transaction.
                    format: byte
                    type: string
                  delivery_proof:
                    description: >-
                      The Merkle Proof which proves existence of response in the
                      block next to the block the

                      transaction is included in.
                    properties:
                      aunts:
                        items:
                          format: byte
                          type: string
                        type: array
                      index:
                        format: int64
                        type: string
                      leaf_hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: string
                    type: object
                  inclusion_proof:
                    description: >-
                      The Merkle Proof which proves inclusion of the transaction
                      in the block.
                    properties:
                      aunts:
                        items:
                          format: byte
                          type: string
                        type: array
                      index:
                        format: int64
                        type: string
                      leaf_hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: string
                    type: object
                  response:
                    description: The result of the transaction execution.
                    properties:
                      code:
                        format: int64
                        type: integer
                      codespace:
                        type: string
                      data:
                        format: byte
                        type: string
                      events:
                        items:
                          description: >-
                            Event allows application developers to attach
                            additional information to

                            ResponseFinalizeBlock and ResponseCheckTx.

                            Later, transactions may be queried using these
                            events.
                          properties:
                            attributes:
                              items:
                                description: >-
                                  EventAttribute is a single key-value pair,
                                  associated with an event.
                                properties:
                                  index:
                                    type: boolean
                                  key:
                                    type: string
                                  value:
                                    type: string
                                type: object
                              type: array
                            type:
                              type: string
                          type: object
                        type: array
                      gas_used:
                        format: int64
                        type: string
                      gas_wanted:
                        format: int64
                        type: string
                      info:
                        type: string
                      log:
                        type: string
                    type: object
                type: object
            type: object
          height:
            description: >-
              The height of the chain at the moment of the Interchain Query
              execution.
            format: uint64
            type: string
          kv_results:
            description: >-
              A list of a KV Interchain Query execution results. Each result
              contains query parameters, a

              response value and a proof.
            items:
              description: A verifiable result of performing a single KVKey read.
              properties:
                Proof:
                  description: >-
                    The Merkle Proof which proves existence/nonexistence of
                    key-value pair in IAVL storage. Is

                    used to verify

                    the pair against the respective remote chain's header.
                  properties:
                    ops:
                      items:
                        properties:
                          data:
                            format: byte
                            type: string
                          key:
                            format: byte
                            type: string
                          type:
                            type: string
                        title: >-
                          ProofOp defines an operation used for calculating
                          Merkle root

                          The data could be arbitrary format, providing
                          nessecary data

                          for example neighbouring node hash
                        type: object
                      type: array
                  title: ProofOps is Merkle proof defined by the list of ProofOps
                  type: object
                key:
                  description: >-
                    A bytes field representing the key of the data read from the
                    module's storage.
                  format: byte
                  type: string
                storage_prefix:
                  description: >-
                    The substore name used in the read operation. Typically,
                    this corresponds to the keeper's

                    storeKey, usually the module's name, such as "bank",
                    "staking", etc.
                  type: string
                value:
                  description: >-
                    A bytes field containing the value associated with the key
                    in the store.
                  format: byte
                  type: string
              type: object
            type: array
          revision:
            description: >-
              The revision number of the chain at the moment of the Interchain
              Query execution.
            format: uint64
            type: string
        type: object
    type: object
  neutron.interchainqueries.QueryResult:
    description: >-
      Contains different information about a single Interchain Query execution
      result. Currently,

      this structure is used both in query result submission via an ICQ Relayer
      and as a query result

      storage for read/write operations to interchainqueries module, but the
      structure fields are

      populated in a bit different ways. When submitting a query result, all
      fields are populated and

      provided to the interchainqueries module in order to verify the result
      against the IBC client's

      state. But in order to lighten the chain state, the interchainqueries
      module removes the block

      field and proofs from the kv_results.
    properties:
      allow_kv_callbacks:
        description: >-
          Whether to send the query result to the owner contract as a sudo
          message. Only applicable for

          KV type of Interchain Queries.
        type: boolean
      block:
        description: >-
          A TX Interchain Query execution result. Contains metainformation about
          the blocks of the query

          execution height. Only populated when submitting an Interchain Query
          result for verification

          and emptied when saving the result on chain.
        properties:
          header:
            properties:
              type_url:
                type: string
              value:
                format: byte
                type: string
            type: object
            description: >-
              The header of the block the transaction is included in. It is
              needed to know block header to

              verify inclusion of the transaction.
          next_block_header:
            properties:
              type_url:
                type: string
              value:
                format: byte
                type: string
            type: object
            description: >-
              The header of the block next to the block the transaction is
              included in. It is needed to know

              block X+1 header to verify response of transaction for block X
              since LastResultsHash is root

              hash of all results of the txs from the previous block.
          tx:
            description: >-
              The transaction matched by the Interchain Query's transaction
              filter.
            properties:
              data:
                description: The arbitrary data typed body of the transaction.
                format: byte
                type: string
              delivery_proof:
                description: >-
                  The Merkle Proof which proves existence of response in the
                  block next to the block the

                  transaction is included in.
                properties:
                  aunts:
                    items:
                      format: byte
                      type: string
                    type: array
                  index:
                    format: int64
                    type: string
                  leaf_hash:
                    format: byte
                    type: string
                  total:
                    format: int64
                    type: string
                type: object
              inclusion_proof:
                description: >-
                  The Merkle Proof which proves inclusion of the transaction in
                  the block.
                properties:
                  aunts:
                    items:
                      format: byte
                      type: string
                    type: array
                  index:
                    format: int64
                    type: string
                  leaf_hash:
                    format: byte
                    type: string
                  total:
                    format: int64
                    type: string
                type: object
              response:
                description: The result of the transaction execution.
                properties:
                  code:
                    format: int64
                    type: integer
                  codespace:
                    type: string
                  data:
                    format: byte
                    type: string
                  events:
                    items:
                      description: >-
                        Event allows application developers to attach additional
                        information to

                        ResponseFinalizeBlock and ResponseCheckTx.

                        Later, transactions may be queried using these events.
                      properties:
                        attributes:
                          items:
                            description: >-
                              EventAttribute is a single key-value pair,
                              associated with an event.
                            properties:
                              index:
                                type: boolean
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        type:
                          type: string
                      type: object
                    type: array
                  gas_used:
                    format: int64
                    type: string
                  gas_wanted:
                    format: int64
                    type: string
                  info:
                    type: string
                  log:
                    type: string
                type: object
            type: object
        type: object
      height:
        description: >-
          The height of the chain at the moment of the Interchain Query
          execution.
        format: uint64
        type: string
      kv_results:
        description: >-
          A list of a KV Interchain Query execution results. Each result
          contains query parameters, a

          response value and a proof.
        items:
          description: A verifiable result of performing a single KVKey read.
          properties:
            Proof:
              description: >-
                The Merkle Proof which proves existence/nonexistence of
                key-value pair in IAVL storage. Is

                used to verify

                the pair against the respective remote chain's header.
              properties:
                ops:
                  items:
                    properties:
                      data:
                        format: byte
                        type: string
                      key:
                        format: byte
                        type: string
                      type:
                        type: string
                    title: >-
                      ProofOp defines an operation used for calculating Merkle
                      root

                      The data could be arbitrary format, providing nessecary
                      data

                      for example neighbouring node hash
                    type: object
                  type: array
              title: ProofOps is Merkle proof defined by the list of ProofOps
              type: object
            key:
              description: >-
                A bytes field representing the key of the data read from the
                module's storage.
              format: byte
              type: string
            storage_prefix:
              description: >-
                The substore name used in the read operation. Typically, this
                corresponds to the keeper's

                storeKey, usually the module's name, such as "bank", "staking",
                etc.
              type: string
            value:
              description: >-
                A bytes field containing the value associated with the key in
                the store.
              format: byte
              type: string
          type: object
        type: array
      revision:
        description: >-
          The revision number of the chain at the moment of the Interchain Query
          execution.
        format: uint64
        type: string
    type: object
  neutron.interchainqueries.RegisteredQuery:
    description: >-
      Information about an Interchain Query registered in the interchainqueries
      module.
    properties:
      connection_id:
        description: >-
          The IBC connection ID to the remote chain (the source of querying
          data). Is used for getting

          ConsensusState from the respective IBC client to verify query result
          proofs.
        type: string
      deposit:
        description: >-
          Amount of coins paid for the Interchain Query registration. The
          deposit is paid back to the

          remover. The remover can be either the query owner (during the submit
          timeout) or anybody.
        items:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      id:
        description: The unique id of the registered query.
        format: uint64
        type: string
      keys:
        description: >-
          The KV-storage keys for which to get values from the remote chain.
          Only applicable for the

          KV Interchain Queries. Max amount of keys is limited by the module's
          `max_kv_query_keys_count`

          parameters.
        items:
          description: Represents a path to an IAVL storage node.
          properties:
            key:
              description: >-
                A bytes field representing the key for specific data in the
                module's storage.
              format: byte
              type: string
            path:
              description: >-
                The substore name used in an Interchain Query. Typically, this
                corresponds to the keeper's

                storeKey, usually the module's name, such as "bank", "staking",
                etc.
              type: string
          type: object
        type: array
      last_submitted_result_local_height:
        description: The local chain block height of the last query results update.
        format: uint64
        type: string
      last_submitted_result_remote_height:
        description: >-
          The remote chain block height that corresponds to the last query
          result update.
        properties:
          revision_height:
            format: uint64
            title: the height within the given revision
            type: string
          revision_number:
            format: uint64
            title: the revision that the client is currently on
            type: string
        title: >-
          Height is a monotonically increasing data type

          that can be compared against another Height for the purposes of
          updating and

          freezing clients
        type: object
      owner:
        description: The address of the contract that registered the query.
        type: string
      query_type:
        description: 'The query type identifier: `kv` or `tx`.'
        type: string
      registered_at_height:
        description: The local chain block height of the Interchain Query registration.
        format: uint64
        type: string
      submit_timeout:
        description: >-
          The duration, measured in blocks, that must pass since the query's
          registration or its last

          result submission before the query becomes eligible for removal by
          anyone.
        format: uint64
        type: string
      transactions_filter:
        description: >-
          A stringified list of filters for remote transactions search. Only
          applicable for the TX

          Interchain Queries. Example:
          "[{\"field\":\"tx.height\",\"op\":\"Gte\",\"value\":2644737}]".

          Supported operators: "eq", "lt", "gt", "lte", "gte". Max amount of
          filter conditions is limited

          by the module's `max_transactions_filters` parameters.
        type: string
      update_period:
        description: >-
          Parameter that defines the minimal delay between consecutive query
          executions (i.e. the

          minimal delay between query results update).
        format: uint64
        type: string
    type: object
  neutron.interchainqueries.StorageValue:
    description: A verifiable result of performing a single KVKey read.
    properties:
      Proof:
        description: >-
          The Merkle Proof which proves existence/nonexistence of key-value pair
          in IAVL storage. Is

          used to verify

          the pair against the respective remote chain's header.
        properties:
          ops:
            items:
              properties:
                data:
                  format: byte
                  type: string
                key:
                  format: byte
                  type: string
                type:
                  type: string
              title: |-
                ProofOp defines an operation used for calculating Merkle root
                The data could be arbitrary format, providing nessecary data
                for example neighbouring node hash
              type: object
            type: array
        title: ProofOps is Merkle proof defined by the list of ProofOps
        type: object
      key:
        description: >-
          A bytes field representing the key of the data read from the module's
          storage.
        format: byte
        type: string
      storage_prefix:
        description: >-
          The substore name used in the read operation. Typically, this
          corresponds to the keeper's

          storeKey, usually the module's name, such as "bank", "staking", etc.
        type: string
      value:
        description: >-
          A bytes field containing the value associated with the key in the
          store.
        format: byte
        type: string
    type: object
  neutron.interchainqueries.TxValue:
    description: Contains transaction body, response, and proofs of inclusion and delivery.
    properties:
      data:
        description: The arbitrary data typed body of the transaction.
        format: byte
        type: string
      delivery_proof:
        description: >-
          The Merkle Proof which proves existence of response in the block next
          to the block the

          transaction is included in.
        properties:
          aunts:
            items:
              format: byte
              type: string
            type: array
          index:
            format: int64
            type: string
          leaf_hash:
            format: byte
            type: string
          total:
            format: int64
            type: string
        type: object
      inclusion_proof:
        description: >-
          The Merkle Proof which proves inclusion of the transaction in the
          block.
        properties:
          aunts:
            items:
              format: byte
              type: string
            type: array
          index:
            format: int64
            type: string
          leaf_hash:
            format: byte
            type: string
          total:
            format: int64
            type: string
        type: object
      response:
        description: The result of the transaction execution.
        properties:
          code:
            format: int64
            type: integer
          codespace:
            type: string
          data:
            format: byte
            type: string
          events:
            items:
              description: >-
                Event allows application developers to attach additional
                information to

                ResponseFinalizeBlock and ResponseCheckTx.

                Later, transactions may be queried using these events.
              properties:
                attributes:
                  items:
                    description: >-
                      EventAttribute is a single key-value pair, associated with
                      an event.
                    properties:
                      index:
                        type: boolean
                      key:
                        type: string
                      value:
                        type: string
                    type: object
                  type: array
                type:
                  type: string
              type: object
            type: array
          gas_used:
            format: int64
            type: string
          gas_wanted:
            format: int64
            type: string
          info:
            type: string
          log:
            type: string
        type: object
    type: object
  neutron.interchaintxs.v1.Params:
    description: Params defines the parameters for the module.
    properties:
      msg_submit_tx_max_messages:
        format: uint64
        title: Defines maximum amount of messages to be passed in MsgSubmitTx
        type: string
      register_fee:
        items:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        title: Defines a minimum fee required to register interchain account
        type: array
    type: object
  neutron.interchaintxs.v1.QueryInterchainAccountAddressResponse:
    properties:
      interchain_account_address:
        title: The corresponding interchain account address on the host chain
        type: string
    title: Query response for an interchain account address
    type: object
  neutron.interchaintxs.v1.QueryParamsResponse:
    description: QueryParamsResponse is response type for the Query/Params RPC method.
    properties:
      params:
        description: params holds all the parameters of this module.
        properties:
          msg_submit_tx_max_messages:
            format: uint64
            title: Defines maximum amount of messages to be passed in MsgSubmitTx
            type: string
          register_fee:
            items:
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            title: Defines a minimum fee required to register interchain account
            type: array
        type: object
    type: object
  osmosis.tokenfactory.Params:
    description: Params defines the parameters for the tokenfactory module.
    properties:
      denom_creation_fee:
        description: >-
          DenomCreationFee defines the fee to be charged on the creation of a
          new

          denom. The fee is drawn from the MsgCreateDenom's sender account, and

          transferred to the community pool.
        items:
          description: |-
            Coin defines a token with a denomination and an amount.

            NOTE: The amount field is an Int which implements the custom method
            signatures required by gogoproto.
          properties:
            amount:
              type: string
            denom:
              type: string
          type: object
        type: array
      denom_creation_gas_consume:
        description: |-
          DenomCreationGasConsume defines the gas cost for creating a new denom.
          This is intended as a spam deterrence mechanism.

          See: https://github.com/CosmWasm/token-factory/issues/11
        format: uint64
        type: string
      fee_collector_address:
        title: >-
          FeeCollectorAddress is the address where fees collected from denom
          creation

          are sent to
        type: string
      whitelisted_hooks:
        items:
          properties:
            code_id:
              format: uint64
              type: string
            denom_creator:
              type: string
          title: >-
            WhitelistedHook describes a beforeSendHook which is allowed to be
            added and executed

            SetBeforeSendHook can only be called on denoms where the denom
            creator and

            code_id for the `contract_addr` match a WhitelistedHook
          type: object
        title: >-
          whitelisted_hooks is the list of hooks which are allowed to be added
          and executed
        type: array
    type: object
  osmosis.tokenfactory.WhitelistedHook:
    properties:
      code_id:
        format: uint64
        type: string
      denom_creator:
        type: string
    title: >-
      WhitelistedHook describes a beforeSendHook which is allowed to be added
      and executed

      SetBeforeSendHook can only be called on denoms where the denom creator and

      code_id for the `contract_addr` match a WhitelistedHook
    type: object
  osmosis.tokenfactory.v1beta1.DenomAuthorityMetadata:
    description: |-
      DenomAuthorityMetadata specifies metadata for addresses that have specific
      capabilities over a token factory denom. Right now there is only one Admin
      permission, but is planned to be extended to the future.
    properties:
      Admin:
        title: Can be empty for no admin, or a valid osmosis address
        type: string
    type: object
  osmosis.tokenfactory.v1beta1.QueryBeforeSendHookAddressResponse:
    description: |-
      QueryBeforeSendHookAddressResponse defines the response structure for the
      BeforeSendHookAddress gRPC query.
    properties:
      contract_addr:
        type: string
    type: object
  osmosis.tokenfactory.v1beta1.QueryDenomAuthorityMetadataResponse:
    description: |-
      QueryDenomAuthorityMetadataResponse defines the response structure for the
      DenomAuthorityMetadata gRPC query.
    properties:
      authority_metadata:
        description: >-
          DenomAuthorityMetadata specifies metadata for addresses that have
          specific

          capabilities over a token factory denom. Right now there is only one
          Admin

          permission, but is planned to be extended to the future.
        properties:
          Admin:
            title: Can be empty for no admin, or a valid osmosis address
            type: string
        type: object
    type: object
  osmosis.tokenfactory.v1beta1.QueryDenomsFromCreatorResponse:
    description: |-
      QueryDenomsFromCreatorRequest defines the response structure for the
      DenomsFromCreator gRPC query.
    properties:
      denoms:
        items:
          type: string
        type: array
    type: object
  osmosis.tokenfactory.v1beta1.QueryFullDenomResponse:
    description: |-
      QueryFullDenomResponse defines the response structure for the
      FullDenom gRPC query.
    properties:
      full_denom:
        type: string
    type: object
  osmosis.tokenfactory.v1beta1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties:
          denom_creation_fee:
            description: >-
              DenomCreationFee defines the fee to be charged on the creation of
              a new

              denom. The fee is drawn from the MsgCreateDenom's sender account,
              and

              transferred to the community pool.
            items:
              description: >-
                Coin defines a token with a denomination and an amount.


                NOTE: The amount field is an Int which implements the custom
                method

                signatures required by gogoproto.
              properties:
                amount:
                  type: string
                denom:
                  type: string
              type: object
            type: array
          denom_creation_gas_consume:
            description: >-
              DenomCreationGasConsume defines the gas cost for creating a new
              denom.

              This is intended as a spam deterrence mechanism.


              See: https://github.com/CosmWasm/token-factory/issues/11
            format: uint64
            type: string
          fee_collector_address:
            title: >-
              FeeCollectorAddress is the address where fees collected from denom
              creation

              are sent to
            type: string
          whitelisted_hooks:
            items:
              properties:
                code_id:
                  format: uint64
                  type: string
                denom_creator:
                  type: string
              title: >-
                WhitelistedHook describes a beforeSendHook which is allowed to
                be added and executed

                SetBeforeSendHook can only be called on denoms where the denom
                creator and

                code_id for the `contract_addr` match a WhitelistedHook
              type: object
            title: >-
              whitelisted_hooks is the list of hooks which are allowed to be
              added and executed
            type: array
        type: object
    type: object
  packetforward.v1.Params:
    description: Params defines the set of packetforward parameters.
    properties:
      fee_percentage:
        type: string
    type: object
  packetforward.v1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    properties:
      params:
        description: params defines the parameters of the module.
        properties:
          fee_percentage:
            type: string
        type: object
    type: object
  sdk.auction.v1.Params:
    description: Params defines the parameters of the x/auction module.
    properties:
      escrow_account_address:
        description: >-
          escrow_account_address is the address of the account that will receive
          a

          portion of the bid proceeds.
        format: byte
        type: string
      front_running_protection:
        description: |-
          front_running_protection specifies whether front running and sandwich
          attack protection is enabled.
        type: boolean
      max_bundle_size:
        description: >-
          max_bundle_size is the maximum number of transactions that can be
          bundled

          in a single bundle.
        format: int64
        type: integer
      min_bid_increment:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
      proposer_fee:
        description: >-
          proposer_fee defines the portion of the winning bid that goes to the
          block

          proposer that proposed the block.
        type: string
      reserve_fee:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
    type: object
  sdk.auction.v1.QueryParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    properties:
      escrow_address_string:
        description: >-
          EscrowAddressString is the string representation of the escrow address
          stored

          in params.
        type: string
      params:
        description: Params defines the parameters of the module.
        properties:
          escrow_account_address:
            description: >-
              escrow_account_address is the address of the account that will
              receive a

              portion of the bid proceeds.
            format: byte
            type: string
          front_running_protection:
            description: >-
              front_running_protection specifies whether front running and
              sandwich

              attack protection is enabled.
            type: boolean
          max_bundle_size:
            description: >-
              max_bundle_size is the maximum number of transactions that can be
              bundled

              in a single bundle.
            format: int64
            type: integer
          min_bid_increment:
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
          proposer_fee:
            description: >-
              proposer_fee defines the portion of the winning bid that goes to
              the block

              proposer that proposed the block.
            type: string
          reserve_fee:
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
        type: object
    type: object
  sdk.mempool.v1.GetTxDistributionResponse:
    description: >-
      GetTxDistributionResponse is the response type for the
      Service.GetTxDistribution

      RPC method.
    properties:
      distribution:
        additionalProperties:
          format: uint64
          type: string
        description: >-
          Distribution is a map of lane to the number of transactions in the
          mempool for that lane.
        type: object
    type: object
  slinky.alerts.v1.Alert:
    description: >-
      Alert defines the basic meta-data necessary for the alerts module to
      resolve

      a claim that the price of a CurrencyPair on-chain is deviating from the
      price

      off-chain.
    properties:
      currency_pair:
        description: >-
          currency_pair is the currency-pair that this claim asserts is
          deviating

          from the price off-chain.
        properties:
          Base:
            type: string
          Quote:
            type: string
        title: >-
          CurrencyPair is the standard representation of a pair of assets, where
          one

          (Base) is priced in terms of the other (Quote)
        type: object
      height:
        description: height represents the height for which the alert is filed.
        format: uint64
        type: string
      signer:
        description: >-
          signer is the signer of this alert, this is the address that will
          receive

          the reward in the case of a positive conclusion, or whose bond will
          get

          slashed in the event of a negative conclusion.
        type: string
    type: object
  slinky.alerts.v1.AlertParams:
    description: >-
      AlertParams is the set of parameters for the x/Alerts module's Alerting.
      It

      defines whether or not Alerts can be submitted, and if so, the minimum

      bond amount required to submit an Alert.
    properties:
      bond_amount:
        description: |-
          Coin defines a token with a denomination and an amount.

          NOTE: The amount field is an Int which implements the custom method
          signatures required by gogoproto.
        properties:
          amount:
            type: string
          denom:
            type: string
        type: object
        title: |-
          BondAmount is the minimum amount of bond required to submit an
          Alert
      enabled:
        title: |-
          Enabled is a boolean defining whether or not Alerts can be submitted
          to the module
        type: boolean
      max_block_age:
        description: >-
          MaxBlockAge defines the maximum age of an Alert before it is pruned,
          notice

          this is defined wrt. the height that the Alert references, i.e Alerts
          are

          only relevant until Alert.Height + MaxBlockAge is reached.
        format: uint64
        type: string
    type: object
  slinky.alerts.v1.AlertStatusID:
    default: CONCLUSION_STATUS_UNSPECIFIED
    description: >-
      AlertStatus is the type for the status of an Alert, it can be Unconcluded
      or

      Concluded.
    enum:
      - CONCLUSION_STATUS_UNSPECIFIED
      - CONCLUSION_STATUS_UNCONCLUDED
      - CONCLUSION_STATUS_CONCLUDED
    type: string
  slinky.alerts.v1.AlertsResponse:
    description: |-
      AlertsResponse is the response type for the Query.Alerts RPC method, it
      contains the list of Alerts that are being tracked by the alerts module.
    properties:
      alerts:
        items:
          description: >-
            Alert defines the basic meta-data necessary for the alerts module to
            resolve

            a claim that the price of a CurrencyPair on-chain is deviating from
            the price

            off-chain.
          properties:
            currency_pair:
              description: >-
                currency_pair is the currency-pair that this claim asserts is
                deviating

                from the price off-chain.
              properties:
                Base:
                  type: string
                Quote:
                  type: string
              title: >-
                CurrencyPair is the standard representation of a pair of assets,
                where one

                (Base) is priced in terms of the other (Quote)
              type: object
            height:
              description: height represents the height for which the alert is filed.
              format: uint64
              type: string
            signer:
              description: >-
                signer is the signer of this alert, this is the address that
                will receive

                the reward in the case of a positive conclusion, or whose bond
                will get

                slashed in the event of a negative conclusion.
              type: string
          type: object
        type: array
    type: object
  slinky.alerts.v1.Params:
    description: Params is the set of parameters for the x/Alerts module.
    properties:
      alert_params:
        description: >-
          AlertParams is the set of parameters for the x/Alerts module's
          Alerting.
        properties:
          bond_amount:
            description: >-
              Coin defines a token with a denomination and an amount.


              NOTE: The amount field is an Int which implements the custom
              method

              signatures required by gogoproto.
            properties:
              amount:
                type: string
              denom:
                type: string
            type: object
            title: |-
              BondAmount is the minimum amount of bond required to submit an
              Alert
          enabled:
            title: >-
              Enabled is a boolean defining whether or not Alerts can be
              submitted

              to the module
            type: boolean
          max_block_age:
            description: >-
              MaxBlockAge defines the maximum age of an Alert before it is
              pruned, notice

              this is defined wrt. the height that the Alert references, i.e
              Alerts are

              only relevant until Alert.Height + MaxBlockAge is reached.
            format: uint64
            type: string
        type: object
      conclusion_verification_params:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
        description: |-
          ConclusionVerificationParams is the set of parameters for the x/Alerts
          module's conclusion verification.
      pruning_params:
        description: >-
          PruningParams is the set of parameters for the x/Alerts module's
          pruning.
        properties:
          blocks_to_prune:
            description: >-
              BlocksToPrune defines the number of blocks until an Alert will be
              pruned

              from state, notice this is defined wrt. the current block height,
              i.e

              Alerts will be stored in state until current_height +
              BlocksToPrune is

              reached.
            format: uint64
            type: string
          enabled:
            title: Enabled defines whether Alerts are to be pruned
            type: boolean
        type: object
    type: object
  slinky.alerts.v1.ParamsResponse:
    description: |-
      ParamsResponse is the response type for the Query.Params RPC method, it
      contains the Params of the module.
    properties:
      params:
        description: Params is the set of parameters for the x/Alerts module.
        properties:
          alert_params:
            description: >-
              AlertParams is the set of parameters for the x/Alerts module's
              Alerting.
            properties:
              bond_amount:
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
                title: |-
                  BondAmount is the minimum amount of bond required to submit an
                  Alert
              enabled:
                title: >-
                  Enabled is a boolean defining whether or not Alerts can be
                  submitted

                  to the module
                type: boolean
              max_block_age:
                description: >-
                  MaxBlockAge defines the maximum age of an Alert before it is
                  pruned, notice

                  this is defined wrt. the height that the Alert references, i.e
                  Alerts are

                  only relevant until Alert.Height + MaxBlockAge is reached.
                format: uint64
                type: string
            type: object
          conclusion_verification_params:
            properties:
              type_url:
                type: string
              value:
                format: byte
                type: string
            type: object
            description: >-
              ConclusionVerificationParams is the set of parameters for the
              x/Alerts

              module's conclusion verification.
          pruning_params:
            description: >-
              PruningParams is the set of parameters for the x/Alerts module's
              pruning.
            properties:
              blocks_to_prune:
                description: >-
                  BlocksToPrune defines the number of blocks until an Alert will
                  be pruned

                  from state, notice this is defined wrt. the current block
                  height, i.e

                  Alerts will be stored in state until current_height +
                  BlocksToPrune is

                  reached.
                format: uint64
                type: string
              enabled:
                title: Enabled defines whether Alerts are to be pruned
                type: boolean
            type: object
        type: object
    type: object
  slinky.alerts.v1.PruningParams:
    description: PruningParams defines the criterion for pruning Alerts from the state.
    properties:
      blocks_to_prune:
        description: >-
          BlocksToPrune defines the number of blocks until an Alert will be
          pruned

          from state, notice this is defined wrt. the current block height, i.e

          Alerts will be stored in state until current_height + BlocksToPrune is

          reached.
        format: uint64
        type: string
      enabled:
        title: Enabled defines whether Alerts are to be pruned
        type: boolean
    type: object
  slinky.incentives.v1.GetAllIncentivesResponse:
    description: >-
      GetAllIncentivesResponse is the response type for the
      Query/GetAllIncentives

      RPC method.
    properties:
      registry:
        description: Registry is the list of all incentives, grouped by type.
        items:
          description: >-
            IncentivesByType encapsulates a list of incentives by type. Each of
            the

            entries here must correspond to the same incentive type defined
            here.
          properties:
            entries:
              description: Entries is a list of incentive bytes.
              items:
                format: byte
                type: string
              type: array
            incentive_type:
              description: |-
                IncentiveType is the incentive type i.e. (BadPriceIncentiveType,
                GoodPriceIncentiveType).
              type: string
          type: object
        type: array
    type: object
  slinky.incentives.v1.GetIncentivesByTypeResponse:
    description: |-
      GetIncentivesByTypeResponse is the response type for the
      Query/GetIncentivesByType RPC method.
    properties:
      entries:
        description: Entries is the list of incentives of the given type.
        items:
          format: byte
          type: string
        type: array
    type: object
  slinky.incentives.v1.IncentivesByType:
    description: |-
      IncentivesByType encapsulates a list of incentives by type. Each of the
      entries here must correspond to the same incentive type defined here.
    properties:
      entries:
        description: Entries is a list of incentive bytes.
        items:
          format: byte
          type: string
        type: array
      incentive_type:
        description: |-
          IncentiveType is the incentive type i.e. (BadPriceIncentiveType,
          GoodPriceIncentiveType).
        type: string
    type: object
  slinky.marketmap.v1.LastUpdatedResponse:
    description: |-
      LastUpdatedResponse is the response type for the Query/LastUpdated RPC
      method.
    properties:
      last_updated:
        format: uint64
        type: string
    type: object
  slinky.marketmap.v1.Market:
    description: Market encapsulates a Ticker and its provider-specific configuration.
    properties:
      provider_configs:
        description: >-
          ProviderConfigs is the list of provider-specific configs for this
          Market.
        items:
          properties:
            invert:
              title: >-
                Invert is a boolean indicating if the BASE and QUOTE of the
                market should

                be inverted. i.e. BASE -> QUOTE, QUOTE -> BASE
              type: boolean
            metadata_JSON:
              description: >-
                MetadataJSON is a string of JSON that encodes any extra
                configuration

                for the given provider config.
              type: string
            name:
              description: >-
                Name corresponds to the name of the provider for which the
                configuration is

                being set.
              type: string
            normalize_by_pair:
              description: >-
                NormalizeByPair is the currency pair for this ticker to be
                normalized by.

                For example, if the desired Ticker is BTC/USD, this market could
                be reached

                using: OffChainTicker = BTC/USDT NormalizeByPair = USDT/USD This
                field is

                optional and nullable.
              properties:
                Base:
                  type: string
                Quote:
                  type: string
              title: >-
                CurrencyPair is the standard representation of a pair of assets,
                where one

                (Base) is priced in terms of the other (Quote)
              type: object
            off_chain_ticker:
              description: >-
                OffChainTicker is the off-chain representation of the ticker
                i.e. BTC/USD.

                The off-chain ticker is unique to a given provider and is used
                to fetch the

                price of the ticker from the provider.
              type: string
          type: object
        type: array
      ticker:
        description: >-
          Ticker represents a price feed for a given asset pair i.e. BTC/USD.
          The

          price feed is scaled to a number of decimal places and has a minimum
          number

          of providers required to consider the ticker valid.
        properties:
          currency_pair:
            description: CurrencyPair is the currency pair for this ticker.
            properties:
              Base:
                type: string
              Quote:
                type: string
            title: >-
              CurrencyPair is the standard representation of a pair of assets,
              where one

              (Base) is priced in terms of the other (Quote)
            type: object
          decimals:
            description: >-
              Decimals is the number of decimal places for the ticker. The
              number of

              decimal places is used to convert the price to a human-readable
              format.
            format: uint64
            type: string
          enabled:
            description: >-
              Enabled is the flag that denotes if the Ticker is enabled for
              price

              fetching by an oracle.
            type: boolean
          metadata_JSON:
            description: >-
              MetadataJSON is a string of JSON that encodes any extra
              configuration

              for the given ticker.
            type: string
          min_provider_count:
            description: >-
              MinProviderCount is the minimum number of providers required to
              consider

              the ticker valid.
            format: uint64
            type: string
        type: object
    type: object
  slinky.marketmap.v1.MarketMap:
    description: MarketMap maps ticker strings to their Markets.
    properties:
      markets:
        additionalProperties:
          description: >-
            Market encapsulates a Ticker and its provider-specific
            configuration.
          properties:
            provider_configs:
              description: >-
                ProviderConfigs is the list of provider-specific configs for
                this Market.
              items:
                properties:
                  invert:
                    title: >-
                      Invert is a boolean indicating if the BASE and QUOTE of
                      the market should

                      be inverted. i.e. BASE -> QUOTE, QUOTE -> BASE
                    type: boolean
                  metadata_JSON:
                    description: >-
                      MetadataJSON is a string of JSON that encodes any extra
                      configuration

                      for the given provider config.
                    type: string
                  name:
                    description: >-
                      Name corresponds to the name of the provider for which the
                      configuration is

                      being set.
                    type: string
                  normalize_by_pair:
                    description: >-
                      NormalizeByPair is the currency pair for this ticker to be
                      normalized by.

                      For example, if the desired Ticker is BTC/USD, this market
                      could be reached

                      using: OffChainTicker = BTC/USDT NormalizeByPair =
                      USDT/USD This field is

                      optional and nullable.
                    properties:
                      Base:
                        type: string
                      Quote:
                        type: string
                    title: >-
                      CurrencyPair is the standard representation of a pair of
                      assets, where one

                      (Base) is priced in terms of the other (Quote)
                    type: object
                  off_chain_ticker:
                    description: >-
                      OffChainTicker is the off-chain representation of the
                      ticker i.e. BTC/USD.

                      The off-chain ticker is unique to a given provider and is
                      used to fetch the

                      price of the ticker from the provider.
                    type: string
                type: object
              type: array
            ticker:
              description: >-
                Ticker represents a price feed for a given asset pair i.e.
                BTC/USD. The

                price feed is scaled to a number of decimal places and has a
                minimum number

                of providers required to consider the ticker valid.
              properties:
                currency_pair:
                  description: CurrencyPair is the currency pair for this ticker.
                  properties:
                    Base:
                      type: string
                    Quote:
                      type: string
                  title: >-
                    CurrencyPair is the standard representation of a pair of
                    assets, where one

                    (Base) is priced in terms of the other (Quote)
                  type: object
                decimals:
                  description: >-
                    Decimals is the number of decimal places for the ticker. The
                    number of

                    decimal places is used to convert the price to a
                    human-readable format.
                  format: uint64
                  type: string
                enabled:
                  description: >-
                    Enabled is the flag that denotes if the Ticker is enabled
                    for price

                    fetching by an oracle.
                  type: boolean
                metadata_JSON:
                  description: >-
                    MetadataJSON is a string of JSON that encodes any extra
                    configuration

                    for the given ticker.
                  type: string
                min_provider_count:
                  description: >-
                    MinProviderCount is the minimum number of providers required
                    to consider

                    the ticker valid.
                  format: uint64
                  type: string
              type: object
          type: object
        description: >-
          Markets is the full list of tickers and their associated
          configurations

          to be stored on-chain.
        type: object
    type: object
  slinky.marketmap.v1.MarketMapResponse:
    description: MarketMapResponse is the query response for the MarketMap query.
    properties:
      chain_id:
        description: ChainId is the chain identifier for the market map.
        type: string
      last_updated:
        description: >-
          LastUpdated is the last block height that the market map was updated.

          This field can be used as an optimization for clients checking if
          there

          is a new update to the map.
        format: uint64
        type: string
      market_map:
        description: >-
          MarketMap defines the global set of market configurations for all
          providers

          and markets.
        properties:
          markets:
            additionalProperties:
              description: >-
                Market encapsulates a Ticker and its provider-specific
                configuration.
              properties:
                provider_configs:
                  description: >-
                    ProviderConfigs is the list of provider-specific configs for
                    this Market.
                  items:
                    properties:
                      invert:
                        title: >-
                          Invert is a boolean indicating if the BASE and QUOTE
                          of the market should

                          be inverted. i.e. BASE -> QUOTE, QUOTE -> BASE
                        type: boolean
                      metadata_JSON:
                        description: >-
                          MetadataJSON is a string of JSON that encodes any
                          extra configuration

                          for the given provider config.
                        type: string
                      name:
                        description: >-
                          Name corresponds to the name of the provider for which
                          the configuration is

                          being set.
                        type: string
                      normalize_by_pair:
                        description: >-
                          NormalizeByPair is the currency pair for this ticker
                          to be normalized by.

                          For example, if the desired Ticker is BTC/USD, this
                          market could be reached

                          using: OffChainTicker = BTC/USDT NormalizeByPair =
                          USDT/USD This field is

                          optional and nullable.
                        properties:
                          Base:
                            type: string
                          Quote:
                            type: string
                        title: >-
                          CurrencyPair is the standard representation of a pair
                          of assets, where one

                          (Base) is priced in terms of the other (Quote)
                        type: object
                      off_chain_ticker:
                        description: >-
                          OffChainTicker is the off-chain representation of the
                          ticker i.e. BTC/USD.

                          The off-chain ticker is unique to a given provider and
                          is used to fetch the

                          price of the ticker from the provider.
                        type: string
                    type: object
                  type: array
                ticker:
                  description: >-
                    Ticker represents a price feed for a given asset pair i.e.
                    BTC/USD. The

                    price feed is scaled to a number of decimal places and has a
                    minimum number

                    of providers required to consider the ticker valid.
                  properties:
                    currency_pair:
                      description: CurrencyPair is the currency pair for this ticker.
                      properties:
                        Base:
                          type: string
                        Quote:
                          type: string
                      title: >-
                        CurrencyPair is the standard representation of a pair of
                        assets, where one

                        (Base) is priced in terms of the other (Quote)
                      type: object
                    decimals:
                      description: >-
                        Decimals is the number of decimal places for the ticker.
                        The number of

                        decimal places is used to convert the price to a
                        human-readable format.
                      format: uint64
                      type: string
                    enabled:
                      description: >-
                        Enabled is the flag that denotes if the Ticker is
                        enabled for price

                        fetching by an oracle.
                      type: boolean
                    metadata_JSON:
                      description: >-
                        MetadataJSON is a string of JSON that encodes any extra
                        configuration

                        for the given ticker.
                      type: string
                    min_provider_count:
                      description: >-
                        MinProviderCount is the minimum number of providers
                        required to consider

                        the ticker valid.
                      format: uint64
                      type: string
                  type: object
              type: object
            description: >-
              Markets is the full list of tickers and their associated
              configurations

              to be stored on-chain.
            type: object
        type: object
    type: object
  slinky.marketmap.v1.MarketResponse:
    description: MarketResponse is the query response for the Market query.
    properties:
      market:
        description: Market encapsulates a Ticker and its provider-specific configuration.
        properties:
          provider_configs:
            description: >-
              ProviderConfigs is the list of provider-specific configs for this
              Market.
            items:
              properties:
                invert:
                  title: >-
                    Invert is a boolean indicating if the BASE and QUOTE of the
                    market should

                    be inverted. i.e. BASE -> QUOTE, QUOTE -> BASE
                  type: boolean
                metadata_JSON:
                  description: >-
                    MetadataJSON is a string of JSON that encodes any extra
                    configuration

                    for the given provider config.
                  type: string
                name:
                  description: >-
                    Name corresponds to the name of the provider for which the
                    configuration is

                    being set.
                  type: string
                normalize_by_pair:
                  description: >-
                    NormalizeByPair is the currency pair for this ticker to be
                    normalized by.

                    For example, if the desired Ticker is BTC/USD, this market
                    could be reached

                    using: OffChainTicker = BTC/USDT NormalizeByPair = USDT/USD
                    This field is

                    optional and nullable.
                  properties:
                    Base:
                      type: string
                    Quote:
                      type: string
                  title: >-
                    CurrencyPair is the standard representation of a pair of
                    assets, where one

                    (Base) is priced in terms of the other (Quote)
                  type: object
                off_chain_ticker:
                  description: >-
                    OffChainTicker is the off-chain representation of the ticker
                    i.e. BTC/USD.

                    The off-chain ticker is unique to a given provider and is
                    used to fetch the

                    price of the ticker from the provider.
                  type: string
              type: object
            type: array
          ticker:
            description: >-
              Ticker represents a price feed for a given asset pair i.e.
              BTC/USD. The

              price feed is scaled to a number of decimal places and has a
              minimum number

              of providers required to consider the ticker valid.
            properties:
              currency_pair:
                description: CurrencyPair is the currency pair for this ticker.
                properties:
                  Base:
                    type: string
                  Quote:
                    type: string
                title: >-
                  CurrencyPair is the standard representation of a pair of
                  assets, where one

                  (Base) is priced in terms of the other (Quote)
                type: object
              decimals:
                description: >-
                  Decimals is the number of decimal places for the ticker. The
                  number of

                  decimal places is used to convert the price to a
                  human-readable format.
                format: uint64
                type: string
              enabled:
                description: >-
                  Enabled is the flag that denotes if the Ticker is enabled for
                  price

                  fetching by an oracle.
                type: boolean
              metadata_JSON:
                description: >-
                  MetadataJSON is a string of JSON that encodes any extra
                  configuration

                  for the given ticker.
                type: string
              min_provider_count:
                description: >-
                  MinProviderCount is the minimum number of providers required
                  to consider

                  the ticker valid.
                format: uint64
                type: string
            type: object
        type: object
    type: object
  slinky.marketmap.v1.Params:
    description: Params defines the parameters for the x/marketmap module.
    properties:
      admin:
        description: >-
          Admin is an address that can remove addresses from the
          MarketAuthorities

          list. Only governance can add to the MarketAuthorities or change the
          Admin.
        type: string
      market_authorities:
        description: |-
          MarketAuthorities is the list of authority accounts that are able to
          control updating the marketmap.
        items:
          type: string
        type: array
    type: object
  slinky.marketmap.v1.ParamsResponse:
    description: ParamsResponse is the response type for the Query/Params RPC method.
    properties:
      params:
        description: Params defines the parameters for the x/marketmap module.
        properties:
          admin:
            description: >-
              Admin is an address that can remove addresses from the
              MarketAuthorities

              list. Only governance can add to the MarketAuthorities or change
              the Admin.
            type: string
          market_authorities:
            description: >-
              MarketAuthorities is the list of authority accounts that are able
              to

              control updating the marketmap.
            items:
              type: string
            type: array
        type: object
    type: object
  slinky.marketmap.v1.ProviderConfig:
    properties:
      invert:
        title: >-
          Invert is a boolean indicating if the BASE and QUOTE of the market
          should

          be inverted. i.e. BASE -> QUOTE, QUOTE -> BASE
        type: boolean
      metadata_JSON:
        description: |-
          MetadataJSON is a string of JSON that encodes any extra configuration
          for the given provider config.
        type: string
      name:
        description: >-
          Name corresponds to the name of the provider for which the
          configuration is

          being set.
        type: string
      normalize_by_pair:
        description: >-
          NormalizeByPair is the currency pair for this ticker to be normalized
          by.

          For example, if the desired Ticker is BTC/USD, this market could be
          reached

          using: OffChainTicker = BTC/USDT NormalizeByPair = USDT/USD This field
          is

          optional and nullable.
        properties:
          Base:
            type: string
          Quote:
            type: string
        title: >-
          CurrencyPair is the standard representation of a pair of assets, where
          one

          (Base) is priced in terms of the other (Quote)
        type: object
      off_chain_ticker:
        description: >-
          OffChainTicker is the off-chain representation of the ticker i.e.
          BTC/USD.

          The off-chain ticker is unique to a given provider and is used to
          fetch the

          price of the ticker from the provider.
        type: string
    type: object
  slinky.marketmap.v1.Ticker:
    description: >-
      Ticker represents a price feed for a given asset pair i.e. BTC/USD. The
      price

      feed is scaled to a number of decimal places and has a minimum number of

      providers required to consider the ticker valid.
    properties:
      currency_pair:
        description: CurrencyPair is the currency pair for this ticker.
        properties:
          Base:
            type: string
          Quote:
            type: string
        title: >-
          CurrencyPair is the standard representation of a pair of assets, where
          one

          (Base) is priced in terms of the other (Quote)
        type: object
      decimals:
        description: >-
          Decimals is the number of decimal places for the ticker. The number of

          decimal places is used to convert the price to a human-readable
          format.
        format: uint64
        type: string
      enabled:
        description: |-
          Enabled is the flag that denotes if the Ticker is enabled for price
          fetching by an oracle.
        type: boolean
      metadata_JSON:
        description: |-
          MetadataJSON is a string of JSON that encodes any extra configuration
          for the given ticker.
        type: string
      min_provider_count:
        description: >-
          MinProviderCount is the minimum number of providers required to
          consider

          the ticker valid.
        format: uint64
        type: string
    type: object
  slinky.oracle.v1.GetAllCurrencyPairsResponse:
    description: |-
      GetAllCurrencyPairsResponse returns all CurrencyPairs that the module is
      currently tracking.
    properties:
      currency_pairs:
        items:
          properties:
            Base:
              type: string
            Quote:
              type: string
          title: >-
            CurrencyPair is the standard representation of a pair of assets,
            where one

            (Base) is priced in terms of the other (Quote)
          type: object
        type: array
    type: object
  slinky.oracle.v1.GetCurrencyPairMappingResponse:
    description: >-
      GetCurrencyPairMappingResponse is the GetCurrencyPairMapping response
      type.
    properties:
      currency_pair_mapping:
        additionalProperties:
          properties:
            Base:
              type: string
            Quote:
              type: string
          title: >-
            CurrencyPair is the standard representation of a pair of assets,
            where one

            (Base) is priced in terms of the other (Quote)
          type: object
        description: >-
          currency_pair_mapping is a mapping of the id representing the currency
          pair

          to the currency pair itself.
        type: object
    type: object
  slinky.oracle.v1.GetPriceResponse:
    description: >-
      GetPriceResponse is the response from the GetPrice grpc method exposed
      from

      the x/oracle query service.
    properties:
      decimals:
        description: |-
          decimals represents the number of decimals that the quote-price is
          represented in. For Pairs where ETHEREUM is the quote this will be 18,
          otherwise it will be 8.
        format: uint64
        type: string
      id:
        description: ID represents the identifier for the CurrencyPair.
        format: uint64
        type: string
      nonce:
        format: uint64
        title: nonce represents the nonce for the CurrencyPair if it exists in state
        type: string
      price:
        title: |-
          QuotePrice represents the quote-price for the CurrencyPair given in
          GetPriceRequest (possibly nil if no update has been made)
        properties:
          block_height:
            format: uint64
            title: BlockHeight is height of block mentioned above
            type: string
          block_timestamp:
            format: date-time
            title: >-
              BlockTimestamp tracks the block height associated with this price
              update.

              We include block timestamp alongside the price to ensure that
              smart

              contracts and applications are not utilizing stale oracle prices
            type: string
          price:
            type: string
        type: object
    type: object
  slinky.oracle.v1.GetPricesResponse:
    description: >-
      GetPricesResponse is the response from the GetPrices grpc method exposed
      from

      the x/oracle query service.
    properties:
      prices:
        items:
          description: >-
            GetPriceResponse is the response from the GetPrice grpc method
            exposed from

            the x/oracle query service.
          properties:
            decimals:
              description: >-
                decimals represents the number of decimals that the quote-price
                is

                represented in. For Pairs where ETHEREUM is the quote this will
                be 18,

                otherwise it will be 8.
              format: uint64
              type: string
            id:
              description: ID represents the identifier for the CurrencyPair.
              format: uint64
              type: string
            nonce:
              format: uint64
              title: >-
                nonce represents the nonce for the CurrencyPair if it exists in
                state
              type: string
            price:
              title: >-
                QuotePrice represents the quote-price for the CurrencyPair given
                in

                GetPriceRequest (possibly nil if no update has been made)
              properties:
                block_height:
                  format: uint64
                  title: BlockHeight is height of block mentioned above
                  type: string
                block_timestamp:
                  format: date-time
                  title: >-
                    BlockTimestamp tracks the block height associated with this
                    price update.

                    We include block timestamp alongside the price to ensure
                    that smart

                    contracts and applications are not utilizing stale oracle
                    prices
                  type: string
                price:
                  type: string
              type: object
          type: object
        type: array
    type: object
  slinky.oracle.v1.QuotePrice:
    properties:
      block_height:
        format: uint64
        title: BlockHeight is height of block mentioned above
        type: string
      block_timestamp:
        format: date-time
        title: >-
          BlockTimestamp tracks the block height associated with this price
          update.

          We include block timestamp alongside the price to ensure that smart

          contracts and applications are not utilizing stale oracle prices
        type: string
      price:
        type: string
    title: >-
      QuotePrice is the representation of the aggregated prices for a
      CurrencyPair,

      where price represents the price of Base in terms of Quote
    type: object
  slinky.sla.v1.GetAllSLAsResponse:
    description: |-
      QueryAllSLAsResponse is the response type for the Query/GetAllSLAs RPC
      method.
    properties:
      slas:
        items:
          description: >-
            PriceFeedSLA defines the the desired SLA for a given set of price
            feeds. A

            price feed is defined to be a set of price prices for the same
            (currency

            pair, validator).
          properties:
            expected_uptime:
              description: >-
                ExpectedUptime is the expected uptime for the given validator
                and price

                feed.
              type: string
            frequency:
              description: Frequency is the frequency at which we will check the SLA.
              format: uint64
              type: string
            id:
              description: ID is the unique identifier for the SLA.
              type: string
            maximum_viable_window:
              description: >-
                MaximumViableWindow is the maximum time window that we are
                interested

                for the SLA. This is used to determine the moving window of
                blocks that

                we are interested in.
              format: uint64
              type: string
            minimum_block_updates:
              description: |-
                MinimumBlockUpdates is the minimum number of blocks that the
                validator had to have voted on in the maximum viable window
                in order to be considered for the SLA.
              format: uint64
              type: string
            slash_constant:
              description: >-
                SlashConstant is the constant by which we will multiply the
                deviation from

                the expected uptime.
              type: string
          type: object
        type: array
    type: object
  slinky.sla.v1.GetPriceFeedsResponse:
    description: >-
      QueryGetPriceFeedsResponse is the response type for the
      Query/GetPriceFeeds

      RPC method.
    properties:
      price_feeds:
        description: PriceFeeds defines the price feeds for the given SLA.
        items:
          description: >-
            PriceFeed defines the object type that will be utilized to monitor
            how

            frequently validators are voting with price updates across the
            network.
          properties:
            currency_pair:
              properties:
                Base:
                  type: string
                Quote:
                  type: string
              title: >-
                CurrencyPair is the standard representation of a pair of assets,
                where one

                (Base) is priced in terms of the other (Quote)
              type: object
              description: >-
                CurrencyPair represents the currency pair that this SLA
                corresponds to.
            id:
              description: >-
                ID corresponds to the SLA ID that this price feed corresponds
                to.
              type: string
            inclusion_map:
              description: >-
                InclusionMap represents the relevant moving window of blocks
                that the

                validator has voted on.
              format: byte
              type: string
            index:
              description: Index corresponds to the current index into the bitmap.
              format: uint64
              type: string
            maximum_viable_window:
              description: >-
                MaximumViableWindow represents the maximum number of blocks that
                can be

                represented by the bit map.
              format: uint64
              type: string
            update_map:
              description: >-
                UpdateMap represents the relevant moving window of price feed
                updates.
              format: byte
              type: string
            validator:
              description: Validator represents the validator that this SLA corresponds to.
              format: byte
              type: string
          type: object
        type: array
    type: object
  slinky.sla.v1.Params:
    description: Params defines the parameters for the sla module.
    properties:
      enabled:
        description: Enabled is a flag to enable or disable the sla module.
        type: boolean
    type: object
  slinky.sla.v1.ParamsResponse:
    description: QueryParamsResponse is the response type for the Query/Params RPC method.
    properties:
      params:
        description: Params defines the parameters for the sla module.
        properties:
          enabled:
            description: Enabled is a flag to enable or disable the sla module.
            type: boolean
        type: object
    type: object
  slinky.sla.v1.PriceFeed:
    description: |-
      PriceFeed defines the object type that will be utilized to monitor how
      frequently validators are voting with price updates across the network.
    properties:
      currency_pair:
        properties:
          Base:
            type: string
          Quote:
            type: string
        title: >-
          CurrencyPair is the standard representation of a pair of assets, where
          one

          (Base) is priced in terms of the other (Quote)
        type: object
        description: >-
          CurrencyPair represents the currency pair that this SLA corresponds
          to.
      id:
        description: ID corresponds to the SLA ID that this price feed corresponds to.
        type: string
      inclusion_map:
        description: |-
          InclusionMap represents the relevant moving window of blocks that the
          validator has voted on.
        format: byte
        type: string
      index:
        description: Index corresponds to the current index into the bitmap.
        format: uint64
        type: string
      maximum_viable_window:
        description: >-
          MaximumViableWindow represents the maximum number of blocks that can
          be

          represented by the bit map.
        format: uint64
        type: string
      update_map:
        description: UpdateMap represents the relevant moving window of price feed updates.
        format: byte
        type: string
      validator:
        description: Validator represents the validator that this SLA corresponds to.
        format: byte
        type: string
    type: object
  slinky.sla.v1.PriceFeedSLA:
    description: |-
      PriceFeedSLA defines the the desired SLA for a given set of price feeds. A
      price feed is defined to be a set of price prices for the same (currency
      pair, validator).
    properties:
      expected_uptime:
        description: >-
          ExpectedUptime is the expected uptime for the given validator and
          price

          feed.
        type: string
      frequency:
        description: Frequency is the frequency at which we will check the SLA.
        format: uint64
        type: string
      id:
        description: ID is the unique identifier for the SLA.
        type: string
      maximum_viable_window:
        description: >-
          MaximumViableWindow is the maximum time window that we are interested

          for the SLA. This is used to determine the moving window of blocks
          that

          we are interested in.
        format: uint64
        type: string
      minimum_block_updates:
        description: |-
          MinimumBlockUpdates is the minimum number of blocks that the
          validator had to have voted on in the maximum viable window
          in order to be considered for the SLA.
        format: uint64
        type: string
      slash_constant:
        description: >-
          SlashConstant is the constant by which we will multiply the deviation
          from

          the expected uptime.
        type: string
    type: object
  slinky.types.v1.CurrencyPair:
    properties:
      Base:
        type: string
      Quote:
        type: string
    title: |-
      CurrencyPair is the standard representation of a pair of assets, where one
      (Base) is priced in terms of the other (Quote)
    type: object
  tendermint.abci.Event:
    description: |-
      Event allows application developers to attach additional information to
      ResponseFinalizeBlock and ResponseCheckTx.
      Later, transactions may be queried using these events.
    properties:
      attributes:
        items:
          description: EventAttribute is a single key-value pair, associated with an event.
          properties:
            index:
              type: boolean
            key:
              type: string
            value:
              type: string
          type: object
        type: array
      type:
        type: string
    type: object
  tendermint.abci.EventAttribute:
    description: EventAttribute is a single key-value pair, associated with an event.
    properties:
      index:
        type: boolean
      key:
        type: string
      value:
        type: string
    type: object
  tendermint.abci.ExecTxResult:
    description: >-
      ExecTxResult contains results of executing one individual transaction.


      * Its structure is equivalent to #ResponseDeliverTx which will be
      deprecated/deleted
    properties:
      code:
        format: int64
        type: integer
      codespace:
        type: string
      data:
        format: byte
        type: string
      events:
        items:
          description: >-
            Event allows application developers to attach additional information
            to

            ResponseFinalizeBlock and ResponseCheckTx.

            Later, transactions may be queried using these events.
          properties:
            attributes:
              items:
                description: >-
                  EventAttribute is a single key-value pair, associated with an
                  event.
                properties:
                  index:
                    type: boolean
                  key:
                    type: string
                  value:
                    type: string
                type: object
              type: array
            type:
              type: string
          type: object
        type: array
      gas_used:
        format: int64
        type: string
      gas_wanted:
        format: int64
        type: string
      info:
        type: string
      log:
        type: string
    type: object
  tendermint.abci.Validator:
    properties:
      address:
        format: byte
        type: string
      power:
        format: int64
        title: PubKey pub_key = 2 [(gogoproto.nullable)=false];
        type: string
    type: object
  tendermint.crypto.Proof:
    properties:
      aunts:
        items:
          format: byte
          type: string
        type: array
      index:
        format: int64
        type: string
      leaf_hash:
        format: byte
        type: string
      total:
        format: int64
        type: string
    type: object
  tendermint.crypto.ProofOp:
    properties:
      data:
        format: byte
        type: string
      key:
        format: byte
        type: string
      type:
        type: string
    title: |-
      ProofOp defines an operation used for calculating Merkle root
      The data could be arbitrary format, providing nessecary data
      for example neighbouring node hash
    type: object
  tendermint.crypto.ProofOps:
    properties:
      ops:
        items:
          properties:
            data:
              format: byte
              type: string
            key:
              format: byte
              type: string
            type:
              type: string
          title: |-
            ProofOp defines an operation used for calculating Merkle root
            The data could be arbitrary format, providing nessecary data
            for example neighbouring node hash
          type: object
        type: array
    title: ProofOps is Merkle proof defined by the list of ProofOps
    type: object
  tendermint.crypto.PublicKey:
    properties:
      ed25519:
        format: byte
        type: string
      secp256k1:
        format: byte
        type: string
    title: PublicKey defines the keys available for use with Validators
    type: object
  tendermint.p2p.DefaultNodeInfo:
    properties:
      channels:
        format: byte
        type: string
      default_node_id:
        type: string
      listen_addr:
        type: string
      moniker:
        type: string
      network:
        type: string
      other:
        properties:
          rpc_address:
            type: string
          tx_index:
            type: string
        type: object
      protocol_version:
        properties:
          app:
            format: uint64
            type: string
          block:
            format: uint64
            type: string
          p2p:
            format: uint64
            type: string
        type: object
      version:
        type: string
    type: object
  tendermint.p2p.DefaultNodeInfoOther:
    properties:
      rpc_address:
        type: string
      tx_index:
        type: string
    type: object
  tendermint.p2p.ProtocolVersion:
    properties:
      app:
        format: uint64
        type: string
      block:
        format: uint64
        type: string
      p2p:
        format: uint64
        type: string
    type: object
  tendermint.types.ABCIParams:
    description: >-
      ABCIParams configure functionality specific to the Application Blockchain
      Interface.
    properties:
      vote_extensions_enable_height:
        description: >-
          vote_extensions_enable_height configures the first height during which

          vote extensions will be enabled. During this specified height, and for
          all

          subsequent heights, precommit messages that do not contain valid
          extension data

          will be considered invalid. Prior to this height, vote extensions will
          not

          be used or accepted by validators on the network.


          Once enabled, vote extensions will be created by the application in
          ExtendVote,

          passed to the application for validation in VerifyVoteExtension and
          given

          to the application to use when proposing a block during
          PrepareProposal.
        format: int64
        type: string
    type: object
  tendermint.types.Block:
    properties:
      data:
        properties:
          txs:
            description: >-
              Txs that will be applied by state @ block.Height+1.

              NOTE: not all txs here are valid.  We're just agreeing on the
              order first.

              This means that block.AppHash does not include these txs.
            items:
              format: byte
              type: string
            type: array
        title: Data contains the set of transactions included in the block
        type: object
      evidence:
        properties:
          evidence:
            items:
              properties:
                duplicate_vote_evidence:
                  description: >-
                    DuplicateVoteEvidence contains evidence of a validator
                    signed two conflicting votes.
                  properties:
                    timestamp:
                      format: date-time
                      type: string
                    total_voting_power:
                      format: int64
                      type: string
                    validator_power:
                      format: int64
                      type: string
                    vote_a:
                      description: >-
                        Vote represents a prevote or precommit vote from
                        validators for

                        consensus.
                      properties:
                        block_id:
                          properties:
                            hash:
                              format: byte
                              type: string
                            part_set_header:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                total:
                                  format: int64
                                  type: integer
                              title: PartsetHeader
                              type: object
                          title: BlockID
                          type: object
                        extension:
                          description: >-
                            Vote extension provided by the application. Only
                            valid for precommit

                            messages.
                          format: byte
                          type: string
                        extension_signature:
                          description: >-
                            Vote extension signature by the validator if they
                            participated in

                            consensus for the associated block.

                            Only valid for precommit messages.
                          format: byte
                          type: string
                        height:
                          format: int64
                          type: string
                        round:
                          format: int32
                          type: integer
                        signature:
                          description: >-
                            Vote signature by the validator if they participated
                            in consensus for the

                            associated block.
                          format: byte
                          type: string
                        timestamp:
                          format: date-time
                          type: string
                        type:
                          default: SIGNED_MSG_TYPE_UNKNOWN
                          description: >-
                            SignedMsgType is a type of signed message in the
                            consensus.

                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                          enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                          type: string
                        validator_address:
                          format: byte
                          type: string
                        validator_index:
                          format: int32
                          type: integer
                      type: object
                    vote_b:
                      description: >-
                        Vote represents a prevote or precommit vote from
                        validators for

                        consensus.
                      properties:
                        block_id:
                          properties:
                            hash:
                              format: byte
                              type: string
                            part_set_header:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                total:
                                  format: int64
                                  type: integer
                              title: PartsetHeader
                              type: object
                          title: BlockID
                          type: object
                        extension:
                          description: >-
                            Vote extension provided by the application. Only
                            valid for precommit

                            messages.
                          format: byte
                          type: string
                        extension_signature:
                          description: >-
                            Vote extension signature by the validator if they
                            participated in

                            consensus for the associated block.

                            Only valid for precommit messages.
                          format: byte
                          type: string
                        height:
                          format: int64
                          type: string
                        round:
                          format: int32
                          type: integer
                        signature:
                          description: >-
                            Vote signature by the validator if they participated
                            in consensus for the

                            associated block.
                          format: byte
                          type: string
                        timestamp:
                          format: date-time
                          type: string
                        type:
                          default: SIGNED_MSG_TYPE_UNKNOWN
                          description: >-
                            SignedMsgType is a type of signed message in the
                            consensus.

                             - SIGNED_MSG_TYPE_PREVOTE: Votes
                             - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                          enum:
                            - SIGNED_MSG_TYPE_UNKNOWN
                            - SIGNED_MSG_TYPE_PREVOTE
                            - SIGNED_MSG_TYPE_PRECOMMIT
                            - SIGNED_MSG_TYPE_PROPOSAL
                          type: string
                        validator_address:
                          format: byte
                          type: string
                        validator_index:
                          format: int32
                          type: integer
                      type: object
                  type: object
                light_client_attack_evidence:
                  description: >-
                    LightClientAttackEvidence contains evidence of a set of
                    validators attempting to mislead a light client.
                  properties:
                    byzantine_validators:
                      items:
                        properties:
                          address:
                            format: byte
                            type: string
                          proposer_priority:
                            format: int64
                            type: string
                          pub_key:
                            properties:
                              ed25519:
                                format: byte
                                type: string
                              secp256k1:
                                format: byte
                                type: string
                            title: >-
                              PublicKey defines the keys available for use with
                              Validators
                            type: object
                          voting_power:
                            format: int64
                            type: string
                        type: object
                      type: array
                    common_height:
                      format: int64
                      type: string
                    conflicting_block:
                      properties:
                        signed_header:
                          properties:
                            commit:
                              description: >-
                                Commit contains the evidence that a block was
                                committed by a set of validators.
                              properties:
                                block_id:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    part_set_header:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        total:
                                          format: int64
                                          type: integer
                                      title: PartsetHeader
                                      type: object
                                  title: BlockID
                                  type: object
                                height:
                                  format: int64
                                  type: string
                                round:
                                  format: int32
                                  type: integer
                                signatures:
                                  items:
                                    description: >-
                                      CommitSig is a part of the Vote included
                                      in a Commit.
                                    properties:
                                      block_id_flag:
                                        default: BLOCK_ID_FLAG_UNKNOWN
                                        enum:
                                          - BLOCK_ID_FLAG_UNKNOWN
                                          - BLOCK_ID_FLAG_ABSENT
                                          - BLOCK_ID_FLAG_COMMIT
                                          - BLOCK_ID_FLAG_NIL
                                        title: >-
                                          BlockIdFlag indicates which BlockID the
                                          signature is for
                                        type: string
                                      signature:
                                        format: byte
                                        type: string
                                      timestamp:
                                        format: date-time
                                        type: string
                                      validator_address:
                                        format: byte
                                        type: string
                                    type: object
                                  type: array
                              type: object
                            header:
                              description: Header defines the structure of a block header.
                              properties:
                                app_hash:
                                  format: byte
                                  type: string
                                chain_id:
                                  type: string
                                consensus_hash:
                                  format: byte
                                  type: string
                                data_hash:
                                  format: byte
                                  type: string
                                evidence_hash:
                                  format: byte
                                  title: consensus info
                                  type: string
                                height:
                                  format: int64
                                  type: string
                                last_block_id:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    part_set_header:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        total:
                                          format: int64
                                          type: integer
                                      title: PartsetHeader
                                      type: object
                                  title: BlockID
                                  type: object
                                last_commit_hash:
                                  format: byte
                                  title: hashes of block data
                                  type: string
                                last_results_hash:
                                  format: byte
                                  type: string
                                next_validators_hash:
                                  format: byte
                                  type: string
                                proposer_address:
                                  format: byte
                                  type: string
                                time:
                                  format: date-time
                                  type: string
                                validators_hash:
                                  format: byte
                                  title: >-
                                    hashes from the app output from the prev
                                    block
                                  type: string
                                version:
                                  title: basic block info
                                  description: >-
                                    Consensus captures the consensus rules for
                                    processing a block in the blockchain,

                                    including all blockchain data structures and
                                    the rules of the application's

                                    state transition machine.
                                  properties:
                                    app:
                                      format: uint64
                                      type: string
                                    block:
                                      format: uint64
                                      type: string
                                  type: object
                              type: object
                          type: object
                        validator_set:
                          properties:
                            proposer:
                              properties:
                                address:
                                  format: byte
                                  type: string
                                proposer_priority:
                                  format: int64
                                  type: string
                                pub_key:
                                  properties:
                                    ed25519:
                                      format: byte
                                      type: string
                                    secp256k1:
                                      format: byte
                                      type: string
                                  title: >-
                                    PublicKey defines the keys available for use
                                    with Validators
                                  type: object
                                voting_power:
                                  format: int64
                                  type: string
                              type: object
                            total_voting_power:
                              format: int64
                              type: string
                            validators:
                              items:
                                properties:
                                  address:
                                    format: byte
                                    type: string
                                  proposer_priority:
                                    format: int64
                                    type: string
                                  pub_key:
                                    properties:
                                      ed25519:
                                        format: byte
                                        type: string
                                      secp256k1:
                                        format: byte
                                        type: string
                                    title: >-
                                      PublicKey defines the keys available for
                                      use with Validators
                                    type: object
                                  voting_power:
                                    format: int64
                                    type: string
                                type: object
                              type: array
                          type: object
                      type: object
                    timestamp:
                      format: date-time
                      type: string
                    total_voting_power:
                      format: int64
                      type: string
                  type: object
              type: object
            type: array
        type: object
      header:
        description: Header defines the structure of a block header.
        properties:
          app_hash:
            format: byte
            type: string
          chain_id:
            type: string
          consensus_hash:
            format: byte
            type: string
          data_hash:
            format: byte
            type: string
          evidence_hash:
            format: byte
            title: consensus info
            type: string
          height:
            format: int64
            type: string
          last_block_id:
            properties:
              hash:
                format: byte
                type: string
              part_set_header:
                properties:
                  hash:
                    format: byte
                    type: string
                  total:
                    format: int64
                    type: integer
                title: PartsetHeader
                type: object
            title: BlockID
            type: object
          last_commit_hash:
            format: byte
            title: hashes of block data
            type: string
          last_results_hash:
            format: byte
            type: string
          next_validators_hash:
            format: byte
            type: string
          proposer_address:
            format: byte
            type: string
          time:
            format: date-time
            type: string
          validators_hash:
            format: byte
            title: hashes from the app output from the prev block
            type: string
          version:
            title: basic block info
            description: >-
              Consensus captures the consensus rules for processing a block in
              the blockchain,

              including all blockchain data structures and the rules of the
              application's

              state transition machine.
            properties:
              app:
                format: uint64
                type: string
              block:
                format: uint64
                type: string
            type: object
        type: object
      last_commit:
        description: >-
          Commit contains the evidence that a block was committed by a set of
          validators.
        properties:
          block_id:
            properties:
              hash:
                format: byte
                type: string
              part_set_header:
                properties:
                  hash:
                    format: byte
                    type: string
                  total:
                    format: int64
                    type: integer
                title: PartsetHeader
                type: object
            title: BlockID
            type: object
          height:
            format: int64
            type: string
          round:
            format: int32
            type: integer
          signatures:
            items:
              description: CommitSig is a part of the Vote included in a Commit.
              properties:
                block_id_flag:
                  default: BLOCK_ID_FLAG_UNKNOWN
                  enum:
                    - BLOCK_ID_FLAG_UNKNOWN
                    - BLOCK_ID_FLAG_ABSENT
                    - BLOCK_ID_FLAG_COMMIT
                    - BLOCK_ID_FLAG_NIL
                  title: BlockIdFlag indicates which BlockID the signature is for
                  type: string
                signature:
                  format: byte
                  type: string
                timestamp:
                  format: date-time
                  type: string
                validator_address:
                  format: byte
                  type: string
              type: object
            type: array
        type: object
    type: object
  tendermint.types.BlockID:
    properties:
      hash:
        format: byte
        type: string
      part_set_header:
        properties:
          hash:
            format: byte
            type: string
          total:
            format: int64
            type: integer
        title: PartsetHeader
        type: object
    title: BlockID
    type: object
  tendermint.types.BlockIDFlag:
    default: BLOCK_ID_FLAG_UNKNOWN
    enum:
      - BLOCK_ID_FLAG_UNKNOWN
      - BLOCK_ID_FLAG_ABSENT
      - BLOCK_ID_FLAG_COMMIT
      - BLOCK_ID_FLAG_NIL
    title: BlockIdFlag indicates which BlockID the signature is for
    type: string
  tendermint.types.BlockParams:
    description: BlockParams contains limits on the block size.
    properties:
      max_bytes:
        format: int64
        title: |-
          Max block size, in bytes.
          Note: must be greater than 0
        type: string
      max_gas:
        format: int64
        title: |-
          Max gas per block.
          Note: must be greater or equal to -1
        type: string
    type: object
  tendermint.types.Commit:
    description: >-
      Commit contains the evidence that a block was committed by a set of
      validators.
    properties:
      block_id:
        properties:
          hash:
            format: byte
            type: string
          part_set_header:
            properties:
              hash:
                format: byte
                type: string
              total:
                format: int64
                type: integer
            title: PartsetHeader
            type: object
        title: BlockID
        type: object
      height:
        format: int64
        type: string
      round:
        format: int32
        type: integer
      signatures:
        items:
          description: CommitSig is a part of the Vote included in a Commit.
          properties:
            block_id_flag:
              default: BLOCK_ID_FLAG_UNKNOWN
              enum:
                - BLOCK_ID_FLAG_UNKNOWN
                - BLOCK_ID_FLAG_ABSENT
                - BLOCK_ID_FLAG_COMMIT
                - BLOCK_ID_FLAG_NIL
              title: BlockIdFlag indicates which BlockID the signature is for
              type: string
            signature:
              format: byte
              type: string
            timestamp:
              format: date-time
              type: string
            validator_address:
              format: byte
              type: string
          type: object
        type: array
    type: object
  tendermint.types.CommitSig:
    description: CommitSig is a part of the Vote included in a Commit.
    properties:
      block_id_flag:
        default: BLOCK_ID_FLAG_UNKNOWN
        enum:
          - BLOCK_ID_FLAG_UNKNOWN
          - BLOCK_ID_FLAG_ABSENT
          - BLOCK_ID_FLAG_COMMIT
          - BLOCK_ID_FLAG_NIL
        title: BlockIdFlag indicates which BlockID the signature is for
        type: string
      signature:
        format: byte
        type: string
      timestamp:
        format: date-time
        type: string
      validator_address:
        format: byte
        type: string
    type: object
  tendermint.types.ConsensusParams:
    description: |-
      ConsensusParams contains consensus critical parameters that determine the
      validity of blocks.
    properties:
      abci:
        description: >-
          ABCIParams configure functionality specific to the Application
          Blockchain Interface.
        properties:
          vote_extensions_enable_height:
            description: >-
              vote_extensions_enable_height configures the first height during
              which

              vote extensions will be enabled. During this specified height, and
              for all

              subsequent heights, precommit messages that do not contain valid
              extension data

              will be considered invalid. Prior to this height, vote extensions
              will not

              be used or accepted by validators on the network.


              Once enabled, vote extensions will be created by the application
              in ExtendVote,

              passed to the application for validation in VerifyVoteExtension
              and given

              to the application to use when proposing a block during
              PrepareProposal.
            format: int64
            type: string
        type: object
      block:
        description: BlockParams contains limits on the block size.
        properties:
          max_bytes:
            format: int64
            title: |-
              Max block size, in bytes.
              Note: must be greater than 0
            type: string
          max_gas:
            format: int64
            title: |-
              Max gas per block.
              Note: must be greater or equal to -1
            type: string
        type: object
      evidence:
        description: EvidenceParams determine how we handle evidence of malfeasance.
        properties:
          max_age_duration:
            description: >-
              Max age of evidence, in time.


              It should correspond with an app's "unbonding period" or other
              similar

              mechanism for handling [Nothing-At-Stake

              attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
            type: string
          max_age_num_blocks:
            description: >-
              Max age of evidence, in blocks.


              The basic formula for calculating this is: MaxAgeDuration /
              {average block

              time}.
            format: int64
            type: string
          max_bytes:
            format: int64
            title: >-
              This sets the maximum size of total evidence in bytes that can be
              committed in a single block.

              and should fall comfortably under the max block bytes.

              Default is 1048576 or 1MB
            type: string
        type: object
      validator:
        description: |-
          ValidatorParams restrict the public key types validators can use.
          NOTE: uses ABCI pubkey naming, not Amino names.
        properties:
          pub_key_types:
            items:
              type: string
            type: array
        type: object
      version:
        description: VersionParams contains the ABCI application version.
        properties:
          app:
            format: uint64
            type: string
        type: object
    type: object
  tendermint.types.Data:
    properties:
      txs:
        description: >-
          Txs that will be applied by state @ block.Height+1.

          NOTE: not all txs here are valid.  We're just agreeing on the order
          first.

          This means that block.AppHash does not include these txs.
        items:
          format: byte
          type: string
        type: array
    title: Data contains the set of transactions included in the block
    type: object
  tendermint.types.DuplicateVoteEvidence:
    description: >-
      DuplicateVoteEvidence contains evidence of a validator signed two
      conflicting votes.
    properties:
      timestamp:
        format: date-time
        type: string
      total_voting_power:
        format: int64
        type: string
      validator_power:
        format: int64
        type: string
      vote_a:
        description: |-
          Vote represents a prevote or precommit vote from validators for
          consensus.
        properties:
          block_id:
            properties:
              hash:
                format: byte
                type: string
              part_set_header:
                properties:
                  hash:
                    format: byte
                    type: string
                  total:
                    format: int64
                    type: integer
                title: PartsetHeader
                type: object
            title: BlockID
            type: object
          extension:
            description: >-
              Vote extension provided by the application. Only valid for
              precommit

              messages.
            format: byte
            type: string
          extension_signature:
            description: |-
              Vote extension signature by the validator if they participated in
              consensus for the associated block.
              Only valid for precommit messages.
            format: byte
            type: string
          height:
            format: int64
            type: string
          round:
            format: int32
            type: integer
          signature:
            description: >-
              Vote signature by the validator if they participated in consensus
              for the

              associated block.
            format: byte
            type: string
          timestamp:
            format: date-time
            type: string
          type:
            default: SIGNED_MSG_TYPE_UNKNOWN
            description: |-
              SignedMsgType is a type of signed message in the consensus.

               - SIGNED_MSG_TYPE_PREVOTE: Votes
               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
            enum:
              - SIGNED_MSG_TYPE_UNKNOWN
              - SIGNED_MSG_TYPE_PREVOTE
              - SIGNED_MSG_TYPE_PRECOMMIT
              - SIGNED_MSG_TYPE_PROPOSAL
            type: string
          validator_address:
            format: byte
            type: string
          validator_index:
            format: int32
            type: integer
        type: object
      vote_b:
        description: |-
          Vote represents a prevote or precommit vote from validators for
          consensus.
        properties:
          block_id:
            properties:
              hash:
                format: byte
                type: string
              part_set_header:
                properties:
                  hash:
                    format: byte
                    type: string
                  total:
                    format: int64
                    type: integer
                title: PartsetHeader
                type: object
            title: BlockID
            type: object
          extension:
            description: >-
              Vote extension provided by the application. Only valid for
              precommit

              messages.
            format: byte
            type: string
          extension_signature:
            description: |-
              Vote extension signature by the validator if they participated in
              consensus for the associated block.
              Only valid for precommit messages.
            format: byte
            type: string
          height:
            format: int64
            type: string
          round:
            format: int32
            type: integer
          signature:
            description: >-
              Vote signature by the validator if they participated in consensus
              for the

              associated block.
            format: byte
            type: string
          timestamp:
            format: date-time
            type: string
          type:
            default: SIGNED_MSG_TYPE_UNKNOWN
            description: |-
              SignedMsgType is a type of signed message in the consensus.

               - SIGNED_MSG_TYPE_PREVOTE: Votes
               - SIGNED_MSG_TYPE_PROPOSAL: Proposals
            enum:
              - SIGNED_MSG_TYPE_UNKNOWN
              - SIGNED_MSG_TYPE_PREVOTE
              - SIGNED_MSG_TYPE_PRECOMMIT
              - SIGNED_MSG_TYPE_PROPOSAL
            type: string
          validator_address:
            format: byte
            type: string
          validator_index:
            format: int32
            type: integer
        type: object
    type: object
  tendermint.types.Evidence:
    properties:
      duplicate_vote_evidence:
        description: >-
          DuplicateVoteEvidence contains evidence of a validator signed two
          conflicting votes.
        properties:
          timestamp:
            format: date-time
            type: string
          total_voting_power:
            format: int64
            type: string
          validator_power:
            format: int64
            type: string
          vote_a:
            description: |-
              Vote represents a prevote or precommit vote from validators for
              consensus.
            properties:
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              extension:
                description: >-
                  Vote extension provided by the application. Only valid for
                  precommit

                  messages.
                format: byte
                type: string
              extension_signature:
                description: >-
                  Vote extension signature by the validator if they participated
                  in

                  consensus for the associated block.

                  Only valid for precommit messages.
                format: byte
                type: string
              height:
                format: int64
                type: string
              round:
                format: int32
                type: integer
              signature:
                description: >-
                  Vote signature by the validator if they participated in
                  consensus for the

                  associated block.
                format: byte
                type: string
              timestamp:
                format: date-time
                type: string
              type:
                default: SIGNED_MSG_TYPE_UNKNOWN
                description: |-
                  SignedMsgType is a type of signed message in the consensus.

                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                enum:
                  - SIGNED_MSG_TYPE_UNKNOWN
                  - SIGNED_MSG_TYPE_PREVOTE
                  - SIGNED_MSG_TYPE_PRECOMMIT
                  - SIGNED_MSG_TYPE_PROPOSAL
                type: string
              validator_address:
                format: byte
                type: string
              validator_index:
                format: int32
                type: integer
            type: object
          vote_b:
            description: |-
              Vote represents a prevote or precommit vote from validators for
              consensus.
            properties:
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              extension:
                description: >-
                  Vote extension provided by the application. Only valid for
                  precommit

                  messages.
                format: byte
                type: string
              extension_signature:
                description: >-
                  Vote extension signature by the validator if they participated
                  in

                  consensus for the associated block.

                  Only valid for precommit messages.
                format: byte
                type: string
              height:
                format: int64
                type: string
              round:
                format: int32
                type: integer
              signature:
                description: >-
                  Vote signature by the validator if they participated in
                  consensus for the

                  associated block.
                format: byte
                type: string
              timestamp:
                format: date-time
                type: string
              type:
                default: SIGNED_MSG_TYPE_UNKNOWN
                description: |-
                  SignedMsgType is a type of signed message in the consensus.

                   - SIGNED_MSG_TYPE_PREVOTE: Votes
                   - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                enum:
                  - SIGNED_MSG_TYPE_UNKNOWN
                  - SIGNED_MSG_TYPE_PREVOTE
                  - SIGNED_MSG_TYPE_PRECOMMIT
                  - SIGNED_MSG_TYPE_PROPOSAL
                type: string
              validator_address:
                format: byte
                type: string
              validator_index:
                format: int32
                type: integer
            type: object
        type: object
      light_client_attack_evidence:
        description: >-
          LightClientAttackEvidence contains evidence of a set of validators
          attempting to mislead a light client.
        properties:
          byzantine_validators:
            items:
              properties:
                address:
                  format: byte
                  type: string
                proposer_priority:
                  format: int64
                  type: string
                pub_key:
                  properties:
                    ed25519:
                      format: byte
                      type: string
                    secp256k1:
                      format: byte
                      type: string
                  title: PublicKey defines the keys available for use with Validators
                  type: object
                voting_power:
                  format: int64
                  type: string
              type: object
            type: array
          common_height:
            format: int64
            type: string
          conflicting_block:
            properties:
              signed_header:
                properties:
                  commit:
                    description: >-
                      Commit contains the evidence that a block was committed by
                      a set of validators.
                    properties:
                      block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      height:
                        format: int64
                        type: string
                      round:
                        format: int32
                        type: integer
                      signatures:
                        items:
                          description: >-
                            CommitSig is a part of the Vote included in a
                            Commit.
                          properties:
                            block_id_flag:
                              default: BLOCK_ID_FLAG_UNKNOWN
                              enum:
                                - BLOCK_ID_FLAG_UNKNOWN
                                - BLOCK_ID_FLAG_ABSENT
                                - BLOCK_ID_FLAG_COMMIT
                                - BLOCK_ID_FLAG_NIL
                              title: >-
                                BlockIdFlag indicates which BlockID the
                                signature is for
                              type: string
                            signature:
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            validator_address:
                              format: byte
                              type: string
                          type: object
                        type: array
                    type: object
                  header:
                    description: Header defines the structure of a block header.
                    properties:
                      app_hash:
                        format: byte
                        type: string
                      chain_id:
                        type: string
                      consensus_hash:
                        format: byte
                        type: string
                      data_hash:
                        format: byte
                        type: string
                      evidence_hash:
                        format: byte
                        title: consensus info
                        type: string
                      height:
                        format: int64
                        type: string
                      last_block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      last_commit_hash:
                        format: byte
                        title: hashes of block data
                        type: string
                      last_results_hash:
                        format: byte
                        type: string
                      next_validators_hash:
                        format: byte
                        type: string
                      proposer_address:
                        format: byte
                        type: string
                      time:
                        format: date-time
                        type: string
                      validators_hash:
                        format: byte
                        title: hashes from the app output from the prev block
                        type: string
                      version:
                        title: basic block info
                        description: >-
                          Consensus captures the consensus rules for processing
                          a block in the blockchain,

                          including all blockchain data structures and the rules
                          of the application's

                          state transition machine.
                        properties:
                          app:
                            format: uint64
                            type: string
                          block:
                            format: uint64
                            type: string
                        type: object
                    type: object
                type: object
              validator_set:
                properties:
                  proposer:
                    properties:
                      address:
                        format: byte
                        type: string
                      proposer_priority:
                        format: int64
                        type: string
                      pub_key:
                        properties:
                          ed25519:
                            format: byte
                            type: string
                          secp256k1:
                            format: byte
                            type: string
                        title: >-
                          PublicKey defines the keys available for use with
                          Validators
                        type: object
                      voting_power:
                        format: int64
                        type: string
                    type: object
                  total_voting_power:
                    format: int64
                    type: string
                  validators:
                    items:
                      properties:
                        address:
                          format: byte
                          type: string
                        proposer_priority:
                          format: int64
                          type: string
                        pub_key:
                          properties:
                            ed25519:
                              format: byte
                              type: string
                            secp256k1:
                              format: byte
                              type: string
                          title: >-
                            PublicKey defines the keys available for use with
                            Validators
                          type: object
                        voting_power:
                          format: int64
                          type: string
                      type: object
                    type: array
                type: object
            type: object
          timestamp:
            format: date-time
            type: string
          total_voting_power:
            format: int64
            type: string
        type: object
    type: object
  tendermint.types.EvidenceList:
    properties:
      evidence:
        items:
          properties:
            duplicate_vote_evidence:
              description: >-
                DuplicateVoteEvidence contains evidence of a validator signed
                two conflicting votes.
              properties:
                timestamp:
                  format: date-time
                  type: string
                total_voting_power:
                  format: int64
                  type: string
                validator_power:
                  format: int64
                  type: string
                vote_a:
                  description: >-
                    Vote represents a prevote or precommit vote from validators
                    for

                    consensus.
                  properties:
                    block_id:
                      properties:
                        hash:
                          format: byte
                          type: string
                        part_set_header:
                          properties:
                            hash:
                              format: byte
                              type: string
                            total:
                              format: int64
                              type: integer
                          title: PartsetHeader
                          type: object
                      title: BlockID
                      type: object
                    extension:
                      description: >-
                        Vote extension provided by the application. Only valid
                        for precommit

                        messages.
                      format: byte
                      type: string
                    extension_signature:
                      description: >-
                        Vote extension signature by the validator if they
                        participated in

                        consensus for the associated block.

                        Only valid for precommit messages.
                      format: byte
                      type: string
                    height:
                      format: int64
                      type: string
                    round:
                      format: int32
                      type: integer
                    signature:
                      description: >-
                        Vote signature by the validator if they participated in
                        consensus for the

                        associated block.
                      format: byte
                      type: string
                    timestamp:
                      format: date-time
                      type: string
                    type:
                      default: SIGNED_MSG_TYPE_UNKNOWN
                      description: >-
                        SignedMsgType is a type of signed message in the
                        consensus.

                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                      enum:
                        - SIGNED_MSG_TYPE_UNKNOWN
                        - SIGNED_MSG_TYPE_PREVOTE
                        - SIGNED_MSG_TYPE_PRECOMMIT
                        - SIGNED_MSG_TYPE_PROPOSAL
                      type: string
                    validator_address:
                      format: byte
                      type: string
                    validator_index:
                      format: int32
                      type: integer
                  type: object
                vote_b:
                  description: >-
                    Vote represents a prevote or precommit vote from validators
                    for

                    consensus.
                  properties:
                    block_id:
                      properties:
                        hash:
                          format: byte
                          type: string
                        part_set_header:
                          properties:
                            hash:
                              format: byte
                              type: string
                            total:
                              format: int64
                              type: integer
                          title: PartsetHeader
                          type: object
                      title: BlockID
                      type: object
                    extension:
                      description: >-
                        Vote extension provided by the application. Only valid
                        for precommit

                        messages.
                      format: byte
                      type: string
                    extension_signature:
                      description: >-
                        Vote extension signature by the validator if they
                        participated in

                        consensus for the associated block.

                        Only valid for precommit messages.
                      format: byte
                      type: string
                    height:
                      format: int64
                      type: string
                    round:
                      format: int32
                      type: integer
                    signature:
                      description: >-
                        Vote signature by the validator if they participated in
                        consensus for the

                        associated block.
                      format: byte
                      type: string
                    timestamp:
                      format: date-time
                      type: string
                    type:
                      default: SIGNED_MSG_TYPE_UNKNOWN
                      description: >-
                        SignedMsgType is a type of signed message in the
                        consensus.

                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                      enum:
                        - SIGNED_MSG_TYPE_UNKNOWN
                        - SIGNED_MSG_TYPE_PREVOTE
                        - SIGNED_MSG_TYPE_PRECOMMIT
                        - SIGNED_MSG_TYPE_PROPOSAL
                      type: string
                    validator_address:
                      format: byte
                      type: string
                    validator_index:
                      format: int32
                      type: integer
                  type: object
              type: object
            light_client_attack_evidence:
              description: >-
                LightClientAttackEvidence contains evidence of a set of
                validators attempting to mislead a light client.
              properties:
                byzantine_validators:
                  items:
                    properties:
                      address:
                        format: byte
                        type: string
                      proposer_priority:
                        format: int64
                        type: string
                      pub_key:
                        properties:
                          ed25519:
                            format: byte
                            type: string
                          secp256k1:
                            format: byte
                            type: string
                        title: >-
                          PublicKey defines the keys available for use with
                          Validators
                        type: object
                      voting_power:
                        format: int64
                        type: string
                    type: object
                  type: array
                common_height:
                  format: int64
                  type: string
                conflicting_block:
                  properties:
                    signed_header:
                      properties:
                        commit:
                          description: >-
                            Commit contains the evidence that a block was
                            committed by a set of validators.
                          properties:
                            block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            height:
                              format: int64
                              type: string
                            round:
                              format: int32
                              type: integer
                            signatures:
                              items:
                                description: >-
                                  CommitSig is a part of the Vote included in a
                                  Commit.
                                properties:
                                  block_id_flag:
                                    default: BLOCK_ID_FLAG_UNKNOWN
                                    enum:
                                      - BLOCK_ID_FLAG_UNKNOWN
                                      - BLOCK_ID_FLAG_ABSENT
                                      - BLOCK_ID_FLAG_COMMIT
                                      - BLOCK_ID_FLAG_NIL
                                    title: >-
                                      BlockIdFlag indicates which BlockID the
                                      signature is for
                                    type: string
                                  signature:
                                    format: byte
                                    type: string
                                  timestamp:
                                    format: date-time
                                    type: string
                                  validator_address:
                                    format: byte
                                    type: string
                                type: object
                              type: array
                          type: object
                        header:
                          description: Header defines the structure of a block header.
                          properties:
                            app_hash:
                              format: byte
                              type: string
                            chain_id:
                              type: string
                            consensus_hash:
                              format: byte
                              type: string
                            data_hash:
                              format: byte
                              type: string
                            evidence_hash:
                              format: byte
                              title: consensus info
                              type: string
                            height:
                              format: int64
                              type: string
                            last_block_id:
                              properties:
                                hash:
                                  format: byte
                                  type: string
                                part_set_header:
                                  properties:
                                    hash:
                                      format: byte
                                      type: string
                                    total:
                                      format: int64
                                      type: integer
                                  title: PartsetHeader
                                  type: object
                              title: BlockID
                              type: object
                            last_commit_hash:
                              format: byte
                              title: hashes of block data
                              type: string
                            last_results_hash:
                              format: byte
                              type: string
                            next_validators_hash:
                              format: byte
                              type: string
                            proposer_address:
                              format: byte
                              type: string
                            time:
                              format: date-time
                              type: string
                            validators_hash:
                              format: byte
                              title: hashes from the app output from the prev block
                              type: string
                            version:
                              title: basic block info
                              description: >-
                                Consensus captures the consensus rules for
                                processing a block in the blockchain,

                                including all blockchain data structures and the
                                rules of the application's

                                state transition machine.
                              properties:
                                app:
                                  format: uint64
                                  type: string
                                block:
                                  format: uint64
                                  type: string
                              type: object
                          type: object
                      type: object
                    validator_set:
                      properties:
                        proposer:
                          properties:
                            address:
                              format: byte
                              type: string
                            proposer_priority:
                              format: int64
                              type: string
                            pub_key:
                              properties:
                                ed25519:
                                  format: byte
                                  type: string
                                secp256k1:
                                  format: byte
                                  type: string
                              title: >-
                                PublicKey defines the keys available for use
                                with Validators
                              type: object
                            voting_power:
                              format: int64
                              type: string
                          type: object
                        total_voting_power:
                          format: int64
                          type: string
                        validators:
                          items:
                            properties:
                              address:
                                format: byte
                                type: string
                              proposer_priority:
                                format: int64
                                type: string
                              pub_key:
                                properties:
                                  ed25519:
                                    format: byte
                                    type: string
                                  secp256k1:
                                    format: byte
                                    type: string
                                title: >-
                                  PublicKey defines the keys available for use
                                  with Validators
                                type: object
                              voting_power:
                                format: int64
                                type: string
                            type: object
                          type: array
                      type: object
                  type: object
                timestamp:
                  format: date-time
                  type: string
                total_voting_power:
                  format: int64
                  type: string
              type: object
          type: object
        type: array
    type: object
  tendermint.types.EvidenceParams:
    description: EvidenceParams determine how we handle evidence of malfeasance.
    properties:
      max_age_duration:
        description: >-
          Max age of evidence, in time.


          It should correspond with an app's "unbonding period" or other similar

          mechanism for handling [Nothing-At-Stake

          attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
        type: string
      max_age_num_blocks:
        description: >-
          Max age of evidence, in blocks.


          The basic formula for calculating this is: MaxAgeDuration / {average
          block

          time}.
        format: int64
        type: string
      max_bytes:
        format: int64
        title: >-
          This sets the maximum size of total evidence in bytes that can be
          committed in a single block.

          and should fall comfortably under the max block bytes.

          Default is 1048576 or 1MB
        type: string
    type: object
  tendermint.types.Header:
    description: Header defines the structure of a block header.
    properties:
      app_hash:
        format: byte
        type: string
      chain_id:
        type: string
      consensus_hash:
        format: byte
        type: string
      data_hash:
        format: byte
        type: string
      evidence_hash:
        format: byte
        title: consensus info
        type: string
      height:
        format: int64
        type: string
      last_block_id:
        properties:
          hash:
            format: byte
            type: string
          part_set_header:
            properties:
              hash:
                format: byte
                type: string
              total:
                format: int64
                type: integer
            title: PartsetHeader
            type: object
        title: BlockID
        type: object
      last_commit_hash:
        format: byte
        title: hashes of block data
        type: string
      last_results_hash:
        format: byte
        type: string
      next_validators_hash:
        format: byte
        type: string
      proposer_address:
        format: byte
        type: string
      time:
        format: date-time
        type: string
      validators_hash:
        format: byte
        title: hashes from the app output from the prev block
        type: string
      version:
        title: basic block info
        description: >-
          Consensus captures the consensus rules for processing a block in the
          blockchain,

          including all blockchain data structures and the rules of the
          application's

          state transition machine.
        properties:
          app:
            format: uint64
            type: string
          block:
            format: uint64
            type: string
        type: object
    type: object
  tendermint.types.LightBlock:
    properties:
      signed_header:
        properties:
          commit:
            description: >-
              Commit contains the evidence that a block was committed by a set
              of validators.
            properties:
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              height:
                format: int64
                type: string
              round:
                format: int32
                type: integer
              signatures:
                items:
                  description: CommitSig is a part of the Vote included in a Commit.
                  properties:
                    block_id_flag:
                      default: BLOCK_ID_FLAG_UNKNOWN
                      enum:
                        - BLOCK_ID_FLAG_UNKNOWN
                        - BLOCK_ID_FLAG_ABSENT
                        - BLOCK_ID_FLAG_COMMIT
                        - BLOCK_ID_FLAG_NIL
                      title: BlockIdFlag indicates which BlockID the signature is for
                      type: string
                    signature:
                      format: byte
                      type: string
                    timestamp:
                      format: date-time
                      type: string
                    validator_address:
                      format: byte
                      type: string
                  type: object
                type: array
            type: object
          header:
            description: Header defines the structure of a block header.
            properties:
              app_hash:
                format: byte
                type: string
              chain_id:
                type: string
              consensus_hash:
                format: byte
                type: string
              data_hash:
                format: byte
                type: string
              evidence_hash:
                format: byte
                title: consensus info
                type: string
              height:
                format: int64
                type: string
              last_block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              last_commit_hash:
                format: byte
                title: hashes of block data
                type: string
              last_results_hash:
                format: byte
                type: string
              next_validators_hash:
                format: byte
                type: string
              proposer_address:
                format: byte
                type: string
              time:
                format: date-time
                type: string
              validators_hash:
                format: byte
                title: hashes from the app output from the prev block
                type: string
              version:
                title: basic block info
                description: >-
                  Consensus captures the consensus rules for processing a block
                  in the blockchain,

                  including all blockchain data structures and the rules of the
                  application's

                  state transition machine.
                properties:
                  app:
                    format: uint64
                    type: string
                  block:
                    format: uint64
                    type: string
                type: object
            type: object
        type: object
      validator_set:
        properties:
          proposer:
            properties:
              address:
                format: byte
                type: string
              proposer_priority:
                format: int64
                type: string
              pub_key:
                properties:
                  ed25519:
                    format: byte
                    type: string
                  secp256k1:
                    format: byte
                    type: string
                title: PublicKey defines the keys available for use with Validators
                type: object
              voting_power:
                format: int64
                type: string
            type: object
          total_voting_power:
            format: int64
            type: string
          validators:
            items:
              properties:
                address:
                  format: byte
                  type: string
                proposer_priority:
                  format: int64
                  type: string
                pub_key:
                  properties:
                    ed25519:
                      format: byte
                      type: string
                    secp256k1:
                      format: byte
                      type: string
                  title: PublicKey defines the keys available for use with Validators
                  type: object
                voting_power:
                  format: int64
                  type: string
              type: object
            type: array
        type: object
    type: object
  tendermint.types.LightClientAttackEvidence:
    description: >-
      LightClientAttackEvidence contains evidence of a set of validators
      attempting to mislead a light client.
    properties:
      byzantine_validators:
        items:
          properties:
            address:
              format: byte
              type: string
            proposer_priority:
              format: int64
              type: string
            pub_key:
              properties:
                ed25519:
                  format: byte
                  type: string
                secp256k1:
                  format: byte
                  type: string
              title: PublicKey defines the keys available for use with Validators
              type: object
            voting_power:
              format: int64
              type: string
          type: object
        type: array
      common_height:
        format: int64
        type: string
      conflicting_block:
        properties:
          signed_header:
            properties:
              commit:
                description: >-
                  Commit contains the evidence that a block was committed by a
                  set of validators.
                properties:
                  block_id:
                    properties:
                      hash:
                        format: byte
                        type: string
                      part_set_header:
                        properties:
                          hash:
                            format: byte
                            type: string
                          total:
                            format: int64
                            type: integer
                        title: PartsetHeader
                        type: object
                    title: BlockID
                    type: object
                  height:
                    format: int64
                    type: string
                  round:
                    format: int32
                    type: integer
                  signatures:
                    items:
                      description: CommitSig is a part of the Vote included in a Commit.
                      properties:
                        block_id_flag:
                          default: BLOCK_ID_FLAG_UNKNOWN
                          enum:
                            - BLOCK_ID_FLAG_UNKNOWN
                            - BLOCK_ID_FLAG_ABSENT
                            - BLOCK_ID_FLAG_COMMIT
                            - BLOCK_ID_FLAG_NIL
                          title: >-
                            BlockIdFlag indicates which BlockID the signature is
                            for
                          type: string
                        signature:
                          format: byte
                          type: string
                        timestamp:
                          format: date-time
                          type: string
                        validator_address:
                          format: byte
                          type: string
                      type: object
                    type: array
                type: object
              header:
                description: Header defines the structure of a block header.
                properties:
                  app_hash:
                    format: byte
                    type: string
                  chain_id:
                    type: string
                  consensus_hash:
                    format: byte
                    type: string
                  data_hash:
                    format: byte
                    type: string
                  evidence_hash:
                    format: byte
                    title: consensus info
                    type: string
                  height:
                    format: int64
                    type: string
                  last_block_id:
                    properties:
                      hash:
                        format: byte
                        type: string
                      part_set_header:
                        properties:
                          hash:
                            format: byte
                            type: string
                          total:
                            format: int64
                            type: integer
                        title: PartsetHeader
                        type: object
                    title: BlockID
                    type: object
                  last_commit_hash:
                    format: byte
                    title: hashes of block data
                    type: string
                  last_results_hash:
                    format: byte
                    type: string
                  next_validators_hash:
                    format: byte
                    type: string
                  proposer_address:
                    format: byte
                    type: string
                  time:
                    format: date-time
                    type: string
                  validators_hash:
                    format: byte
                    title: hashes from the app output from the prev block
                    type: string
                  version:
                    title: basic block info
                    description: >-
                      Consensus captures the consensus rules for processing a
                      block in the blockchain,

                      including all blockchain data structures and the rules of
                      the application's

                      state transition machine.
                    properties:
                      app:
                        format: uint64
                        type: string
                      block:
                        format: uint64
                        type: string
                    type: object
                type: object
            type: object
          validator_set:
            properties:
              proposer:
                properties:
                  address:
                    format: byte
                    type: string
                  proposer_priority:
                    format: int64
                    type: string
                  pub_key:
                    properties:
                      ed25519:
                        format: byte
                        type: string
                      secp256k1:
                        format: byte
                        type: string
                    title: >-
                      PublicKey defines the keys available for use with
                      Validators
                    type: object
                  voting_power:
                    format: int64
                    type: string
                type: object
              total_voting_power:
                format: int64
                type: string
              validators:
                items:
                  properties:
                    address:
                      format: byte
                      type: string
                    proposer_priority:
                      format: int64
                      type: string
                    pub_key:
                      properties:
                        ed25519:
                          format: byte
                          type: string
                        secp256k1:
                          format: byte
                          type: string
                      title: >-
                        PublicKey defines the keys available for use with
                        Validators
                      type: object
                    voting_power:
                      format: int64
                      type: string
                  type: object
                type: array
            type: object
        type: object
      timestamp:
        format: date-time
        type: string
      total_voting_power:
        format: int64
        type: string
    type: object
  tendermint.types.PartSetHeader:
    properties:
      hash:
        format: byte
        type: string
      total:
        format: int64
        type: integer
    title: PartsetHeader
    type: object
  tendermint.types.SignedHeader:
    properties:
      commit:
        description: >-
          Commit contains the evidence that a block was committed by a set of
          validators.
        properties:
          block_id:
            properties:
              hash:
                format: byte
                type: string
              part_set_header:
                properties:
                  hash:
                    format: byte
                    type: string
                  total:
                    format: int64
                    type: integer
                title: PartsetHeader
                type: object
            title: BlockID
            type: object
          height:
            format: int64
            type: string
          round:
            format: int32
            type: integer
          signatures:
            items:
              description: CommitSig is a part of the Vote included in a Commit.
              properties:
                block_id_flag:
                  default: BLOCK_ID_FLAG_UNKNOWN
                  enum:
                    - BLOCK_ID_FLAG_UNKNOWN
                    - BLOCK_ID_FLAG_ABSENT
                    - BLOCK_ID_FLAG_COMMIT
                    - BLOCK_ID_FLAG_NIL
                  title: BlockIdFlag indicates which BlockID the signature is for
                  type: string
                signature:
                  format: byte
                  type: string
                timestamp:
                  format: date-time
                  type: string
                validator_address:
                  format: byte
                  type: string
              type: object
            type: array
        type: object
      header:
        description: Header defines the structure of a block header.
        properties:
          app_hash:
            format: byte
            type: string
          chain_id:
            type: string
          consensus_hash:
            format: byte
            type: string
          data_hash:
            format: byte
            type: string
          evidence_hash:
            format: byte
            title: consensus info
            type: string
          height:
            format: int64
            type: string
          last_block_id:
            properties:
              hash:
                format: byte
                type: string
              part_set_header:
                properties:
                  hash:
                    format: byte
                    type: string
                  total:
                    format: int64
                    type: integer
                title: PartsetHeader
                type: object
            title: BlockID
            type: object
          last_commit_hash:
            format: byte
            title: hashes of block data
            type: string
          last_results_hash:
            format: byte
            type: string
          next_validators_hash:
            format: byte
            type: string
          proposer_address:
            format: byte
            type: string
          time:
            format: date-time
            type: string
          validators_hash:
            format: byte
            title: hashes from the app output from the prev block
            type: string
          version:
            title: basic block info
            description: >-
              Consensus captures the consensus rules for processing a block in
              the blockchain,

              including all blockchain data structures and the rules of the
              application's

              state transition machine.
            properties:
              app:
                format: uint64
                type: string
              block:
                format: uint64
                type: string
            type: object
        type: object
    type: object
  tendermint.types.SignedMsgType:
    default: SIGNED_MSG_TYPE_UNKNOWN
    description: |-
      SignedMsgType is a type of signed message in the consensus.

       - SIGNED_MSG_TYPE_PREVOTE: Votes
       - SIGNED_MSG_TYPE_PROPOSAL: Proposals
    enum:
      - SIGNED_MSG_TYPE_UNKNOWN
      - SIGNED_MSG_TYPE_PREVOTE
      - SIGNED_MSG_TYPE_PRECOMMIT
      - SIGNED_MSG_TYPE_PROPOSAL
    type: string
  tendermint.types.Validator:
    properties:
      address:
        format: byte
        type: string
      proposer_priority:
        format: int64
        type: string
      pub_key:
        properties:
          ed25519:
            format: byte
            type: string
          secp256k1:
            format: byte
            type: string
        title: PublicKey defines the keys available for use with Validators
        type: object
      voting_power:
        format: int64
        type: string
    type: object
  tendermint.types.ValidatorParams:
    description: |-
      ValidatorParams restrict the public key types validators can use.
      NOTE: uses ABCI pubkey naming, not Amino names.
    properties:
      pub_key_types:
        items:
          type: string
        type: array
    type: object
  tendermint.types.ValidatorSet:
    properties:
      proposer:
        properties:
          address:
            format: byte
            type: string
          proposer_priority:
            format: int64
            type: string
          pub_key:
            properties:
              ed25519:
                format: byte
                type: string
              secp256k1:
                format: byte
                type: string
            title: PublicKey defines the keys available for use with Validators
            type: object
          voting_power:
            format: int64
            type: string
        type: object
      total_voting_power:
        format: int64
        type: string
      validators:
        items:
          properties:
            address:
              format: byte
              type: string
            proposer_priority:
              format: int64
              type: string
            pub_key:
              properties:
                ed25519:
                  format: byte
                  type: string
                secp256k1:
                  format: byte
                  type: string
              title: PublicKey defines the keys available for use with Validators
              type: object
            voting_power:
              format: int64
              type: string
          type: object
        type: array
    type: object
  tendermint.types.VersionParams:
    description: VersionParams contains the ABCI application version.
    properties:
      app:
        format: uint64
        type: string
    type: object
  tendermint.types.Vote:
    description: |-
      Vote represents a prevote or precommit vote from validators for
      consensus.
    properties:
      block_id:
        properties:
          hash:
            format: byte
            type: string
          part_set_header:
            properties:
              hash:
                format: byte
                type: string
              total:
                format: int64
                type: integer
            title: PartsetHeader
            type: object
        title: BlockID
        type: object
      extension:
        description: |-
          Vote extension provided by the application. Only valid for precommit
          messages.
        format: byte
        type: string
      extension_signature:
        description: |-
          Vote extension signature by the validator if they participated in
          consensus for the associated block.
          Only valid for precommit messages.
        format: byte
        type: string
      height:
        format: int64
        type: string
      round:
        format: int32
        type: integer
      signature:
        description: >-
          Vote signature by the validator if they participated in consensus for
          the

          associated block.
        format: byte
        type: string
      timestamp:
        format: date-time
        type: string
      type:
        default: SIGNED_MSG_TYPE_UNKNOWN
        description: |-
          SignedMsgType is a type of signed message in the consensus.

           - SIGNED_MSG_TYPE_PREVOTE: Votes
           - SIGNED_MSG_TYPE_PROPOSAL: Proposals
        enum:
          - SIGNED_MSG_TYPE_UNKNOWN
          - SIGNED_MSG_TYPE_PREVOTE
          - SIGNED_MSG_TYPE_PRECOMMIT
          - SIGNED_MSG_TYPE_PROPOSAL
        type: string
      validator_address:
        format: byte
        type: string
      validator_index:
        format: int32
        type: integer
    type: object
  tendermint.version.Consensus:
    description: >-
      Consensus captures the consensus rules for processing a block in the
      blockchain,

      including all blockchain data structures and the rules of the
      application's

      state transition machine.
    properties:
      app:
        format: uint64
        type: string
      block:
        format: uint64
        type: string
    type: object
  testpb.EchoResponse:
    properties:
      message:
        type: string
    type: object
  testpb.HasAnimal:
    properties:
      animal:
        properties:
          type_url:
            type: string
          value:
            format: byte
            type: string
        type: object
      x:
        format: int64
        type: string
    type: object
  testpb.SayHelloResponse:
    properties:
      greeting:
        type: string
    type: object
  testpb.TestAnyResponse:
    properties:
      has_animal:
        properties:
          animal:
            properties:
              type_url:
                type: string
              value:
                format: byte
                type: string
            type: object
          x:
            format: int64
            type: string
        type: object
    type: object
info:
  title: Neutron
  version: v5
paths:
  /block-sdk/auction/v1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
            properties:
              escrow_address_string:
                description: >-
                  EscrowAddressString is the string representation of the escrow
                  address stored

                  in params.
                type: string
              params:
                description: Params defines the parameters of the module.
                properties:
                  escrow_account_address:
                    description: >-
                      escrow_account_address is the address of the account that
                      will receive a

                      portion of the bid proceeds.
                    format: byte
                    type: string
                  front_running_protection:
                    description: >-
                      front_running_protection specifies whether front running
                      and sandwich

                      attack protection is enabled.
                    type: boolean
                  max_bundle_size:
                    description: >-
                      max_bundle_size is the maximum number of transactions that
                      can be bundled

                      in a single bundle.
                    format: int64
                    type: integer
                  min_bid_increment:
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                  proposer_fee:
                    description: >-
                      proposer_fee defines the portion of the winning bid that
                      goes to the block

                      proposer that proposed the block.
                    type: string
                  reserve_fee:
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params queries the parameters of the x/auction module.
      tags:
        - Query
  /block-sdk/mempool/v1/distribution:
    get:
      operationId: GetTxDistribution
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              GetTxDistributionResponse is the response type for the
              Service.GetTxDistribution

              RPC method.
            properties:
              distribution:
                additionalProperties:
                  format: uint64
                  type: string
                description: >-
                  Distribution is a map of lane to the number of transactions in
                  the mempool for that lane.
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        GetTxDistribution returns the distribution of transactions in the
        mempool.
      tags:
        - Service
  /cosmos/adminmodule/adminmodule/admins:
    get:
      operationId: Admins
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              admins:
                items:
                  type: string
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a list of admins items.
      tags:
        - Query
  /cosmos/adminmodule/adminmodule/archivedproposals:
    get:
      operationId: ArchivedProposals
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              proposals:
                items:
                  description: >-
                    Proposal defines the core field members of a governance
                    proposal.
                  properties:
                    deposit_end_time:
                      description: deposit_end_time is the end time for deposition.
                      format: date-time
                      type: string
                    expedited:
                      description: 'Since: cosmos-sdk 0.50'
                      title: expedited defines if the proposal is expedited
                      type: boolean
                    failed_reason:
                      description: 'Since: cosmos-sdk 0.50'
                      title: failed_reason defines the reason why the proposal failed
                      type: string
                    final_tally_result:
                      description: >-
                        final_tally_result is the final tally result of the
                        proposal. When

                        querying a proposal via gRPC, this field is not
                        populated until the

                        proposal's voting period has ended.
                      properties:
                        abstain_count:
                          description: >-
                            abstain_count is the number of abstain votes on a
                            proposal.
                          type: string
                        no_count:
                          description: no_count is the number of no votes on a proposal.
                          type: string
                        no_with_veto_count:
                          description: >-
                            no_with_veto_count is the number of no with veto
                            votes on a proposal.
                          type: string
                        yes_count:
                          description: yes_count is the number of yes votes on a proposal.
                          type: string
                      type: object
                    id:
                      description: id defines the unique id of the proposal.
                      format: uint64
                      type: string
                    messages:
                      description: >-
                        messages are the arbitrary messages to be executed if
                        the proposal passes.
                      items:
                        properties:
                          type_url:
                            type: string
                          value:
                            format: byte
                            type: string
                        type: object
                      type: array
                    metadata:
                      title: >-
                        metadata is any arbitrary metadata attached to the
                        proposal.

                        the recommended format of the metadata is to be found
                        here:
                        https://docs.cosmos.network/v0.47/modules/gov#proposal-3
                      type: string
                    proposer:
                      description: 'Since: cosmos-sdk 0.47'
                      title: proposer is the address of the proposal sumbitter
                      type: string
                    status:
                      description: status defines the proposal status.
                      default: PROPOSAL_STATUS_UNSPECIFIED
                      enum:
                        - PROPOSAL_STATUS_UNSPECIFIED
                        - PROPOSAL_STATUS_DEPOSIT_PERIOD
                        - PROPOSAL_STATUS_VOTING_PERIOD
                        - PROPOSAL_STATUS_PASSED
                        - PROPOSAL_STATUS_REJECTED
                        - PROPOSAL_STATUS_FAILED
                      type: string
                    submit_time:
                      description: submit_time is the time of proposal submission.
                      format: date-time
                      type: string
                    summary:
                      description: 'Since: cosmos-sdk 0.47'
                      title: summary is a short summary of the proposal
                      type: string
                    title:
                      description: 'Since: cosmos-sdk 0.47'
                      title: title is the title of the proposal
                      type: string
                    total_deposit:
                      description: total_deposit is the total deposit on the proposal.
                      items:
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      type: array
                    voting_end_time:
                      description: voting_end_time is the end time of voting on a proposal.
                      format: date-time
                      type: string
                    voting_start_time:
                      description: >-
                        voting_start_time is the starting time to vote on a
                        proposal.
                      format: date-time
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a list of archived proposals.
      tags:
        - Query
  /cosmos/adminmodule/adminmodule/archivedproposalslegacy:
    get:
      operationId: ArchivedProposalsLegacy
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              proposalsLegacy:
                items:
                  description: >-
                    Proposal defines the core field members of a governance
                    proposal.
                  properties:
                    content:
                      description: content is the proposal's content.
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    deposit_end_time:
                      description: deposit_end_time is the end time for deposition.
                      format: date-time
                      type: string
                    final_tally_result:
                      description: >-
                        final_tally_result is the final tally result of the
                        proposal. When

                        querying a proposal via gRPC, this field is not
                        populated until the

                        proposal's voting period has ended.
                      properties:
                        abstain:
                          description: >-
                            abstain is the number of abstain votes on a
                            proposal.
                          type: string
                        'no':
                          description: no is the number of no votes on a proposal.
                          type: string
                        no_with_veto:
                          description: >-
                            no_with_veto is the number of no with veto votes on
                            a proposal.
                          type: string
                        'yes':
                          description: yes is the number of yes votes on a proposal.
                          type: string
                      type: object
                    proposal_id:
                      description: proposal_id defines the unique id of the proposal.
                      format: uint64
                      type: string
                    status:
                      description: status defines the proposal status.
                      default: PROPOSAL_STATUS_UNSPECIFIED
                      enum:
                        - PROPOSAL_STATUS_UNSPECIFIED
                        - PROPOSAL_STATUS_DEPOSIT_PERIOD
                        - PROPOSAL_STATUS_VOTING_PERIOD
                        - PROPOSAL_STATUS_PASSED
                        - PROPOSAL_STATUS_REJECTED
                        - PROPOSAL_STATUS_FAILED
                      type: string
                    submit_time:
                      description: submit_time is the time of proposal submission.
                      format: date-time
                      type: string
                    total_deposit:
                      description: total_deposit is the total deposit on the proposal.
                      items:
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      type: array
                    voting_end_time:
                      description: voting_end_time is the end time of voting on a proposal.
                      format: date-time
                      type: string
                    voting_start_time:
                      description: >-
                        voting_start_time is the starting time to vote on a
                        proposal.
                      format: date-time
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a list of archived proposals.
      tags:
        - Query
  /cosmos/auth/v1beta1/account_info/{address}:
    get:
      description: 'Since: cosmos-sdk 0.47'
      operationId: AccountInfo
      parameters:
        - description: address is the account address string.
          in: path
          name: address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: |-
              QueryAccountInfoResponse is the Query/AccountInfo response type.

              Since: cosmos-sdk 0.47
            properties:
              info:
                description: info is the account info which is represented by BaseAccount.
                properties:
                  account_number:
                    format: uint64
                    type: string
                  address:
                    type: string
                  pub_key:
                    properties:
                      type_url:
                        type: string
                      value:
                        format: byte
                        type: string
                    type: object
                  sequence:
                    format: uint64
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: AccountInfo queries account info which is common to all account types.
      tags:
        - Query
  /cosmos/auth/v1beta1/accounts:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.


        Since: cosmos-sdk 0.43
      operationId: Accounts
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryAccountsResponse is the response type for the Query/Accounts
              RPC method.


              Since: cosmos-sdk 0.43
            properties:
              accounts:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                title: accounts are the existing accounts
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Accounts returns all the existing accounts.
      tags:
        - Query
  /cosmos/auth/v1beta1/accounts/{address}:
    get:
      operationId: Account
      parameters:
        - description: address defines the address to query for.
          in: path
          name: address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryAccountResponse is the response type for the Query/Account
              RPC method.
            properties:
              account:
                properties:
                  type_url:
                    type: string
                  value:
                    format: byte
                    type: string
                type: object
                description: account defines the account of the corresponding address.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Account returns account details based on address.
      tags:
        - Query
  /cosmos/auth/v1beta1/address_by_id/{id}:
    get:
      description: 'Since: cosmos-sdk 0.46.2'
      operationId: AccountAddressByID
      parameters:
        - description: |-
            Deprecated, use account_id instead

            id is the account number of the address to be queried. This field
            should have been an uint64 (like all account numbers), and will be
            updated to uint64 in a future version of the auth query.
          format: int64
          in: path
          name: id
          required: true
          type: string
        - description: |-
            account_id is the account number of the address to be queried.

            Since: cosmos-sdk 0.47
          format: uint64
          in: query
          name: account_id
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'Since: cosmos-sdk 0.46.2'
            properties:
              account_address:
                type: string
            title: >-
              QueryAccountAddressByIDResponse is the response type for
              AccountAddressByID rpc method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: AccountAddressByID returns account address based on account number.
      tags:
        - Query
  /cosmos/auth/v1beta1/bech32:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: Bech32Prefix
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              Bech32PrefixResponse is the response type for Bech32Prefix rpc
              method.


              Since: cosmos-sdk 0.46
            properties:
              bech32_prefix:
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Bech32Prefix queries bech32Prefix
      tags:
        - Query
  /cosmos/auth/v1beta1/bech32/{address_bytes}:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: AddressBytesToString
      parameters:
        - format: byte
          in: path
          name: address_bytes
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              AddressBytesToStringResponse is the response type for
              AddressString rpc method.


              Since: cosmos-sdk 0.46
            properties:
              address_string:
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: AddressBytesToString converts Account Address bytes to string
      tags:
        - Query
  /cosmos/auth/v1beta1/bech32/{address_string}:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: AddressStringToBytes
      parameters:
        - in: path
          name: address_string
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              AddressStringToBytesResponse is the response type for AddressBytes
              rpc method.


              Since: cosmos-sdk 0.46
            properties:
              address_bytes:
                format: byte
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: AddressStringToBytes converts Address string to bytes
      tags:
        - Query
  /cosmos/auth/v1beta1/module_accounts:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: ModuleAccounts
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryModuleAccountsResponse is the response type for the
              Query/ModuleAccounts RPC method.


              Since: cosmos-sdk 0.46
            properties:
              accounts:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ModuleAccounts returns all the existing module accounts.
      tags:
        - Query
  /cosmos/auth/v1beta1/module_accounts/{name}:
    get:
      operationId: ModuleAccountByName
      parameters:
        - in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryModuleAccountByNameResponse is the response type for the
              Query/ModuleAccountByName RPC method.
            properties:
              account:
                properties:
                  type_url:
                    type: string
                  value:
                    format: byte
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ModuleAccountByName returns the module account info by module name
      tags:
        - Query
  /cosmos/auth/v1beta1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
            properties:
              params:
                description: params defines the parameters of the module.
                properties:
                  max_memo_characters:
                    format: uint64
                    type: string
                  sig_verify_cost_ed25519:
                    format: uint64
                    type: string
                  sig_verify_cost_secp256k1:
                    format: uint64
                    type: string
                  tx_sig_limit:
                    format: uint64
                    type: string
                  tx_size_cost_per_byte:
                    format: uint64
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params queries all parameters.
      tags:
        - Query
  /cosmos/authz/v1beta1/grants:
    get:
      operationId: Grants
      parameters:
        - in: query
          name: granter
          required: false
          type: string
        - in: query
          name: grantee
          required: false
          type: string
        - description: >-
            Optional, msg_type_url, when set, will query only grants matching
            given msg type.
          in: query
          name: msg_type_url
          required: false
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryGrantsResponse is the response type for the
              Query/Authorizations RPC method.
            properties:
              grants:
                description: >-
                  authorizations is a list of grants granted for grantee by
                  granter.
                items:
                  description: |-
                    Grant gives permissions to execute
                    the provide method with expiration time.
                  properties:
                    authorization:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    expiration:
                      format: date-time
                      title: >-
                        time when the grant will expire and will be pruned. If
                        null, then the grant

                        doesn't have a time expiration (other conditions  in
                        `authorization`

                        may apply to invalidate the grant)
                      type: string
                  type: object
                type: array
              pagination:
                description: pagination defines an pagination for the response.
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Returns list of `Authorization`, granted to the grantee by the granter.
      tags:
        - Query
  /cosmos/authz/v1beta1/grants/grantee/{grantee}:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: GranteeGrants
      parameters:
        - in: path
          name: grantee
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryGranteeGrantsResponse is the response type for the
              Query/GranteeGrants RPC method.
            properties:
              grants:
                description: grants is a list of grants granted to the grantee.
                items:
                  properties:
                    authorization:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    expiration:
                      format: date-time
                      type: string
                    grantee:
                      type: string
                    granter:
                      type: string
                  title: >-
                    GrantAuthorization extends a grant with both the addresses
                    of the grantee and granter.

                    It is used in genesis.proto and query.proto
                  type: object
                type: array
              pagination:
                description: pagination defines an pagination for the response.
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GranteeGrants returns a list of `GrantAuthorization` by grantee.
      tags:
        - Query
  /cosmos/authz/v1beta1/grants/granter/{granter}:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: GranterGrants
      parameters:
        - in: path
          name: granter
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryGranterGrantsResponse is the response type for the
              Query/GranterGrants RPC method.
            properties:
              grants:
                description: grants is a list of grants granted by the granter.
                items:
                  properties:
                    authorization:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    expiration:
                      format: date-time
                      type: string
                    grantee:
                      type: string
                    granter:
                      type: string
                  title: >-
                    GrantAuthorization extends a grant with both the addresses
                    of the grantee and granter.

                    It is used in genesis.proto and query.proto
                  type: object
                type: array
              pagination:
                description: pagination defines an pagination for the response.
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GranterGrants returns list of `GrantAuthorization`, granted by granter.
      tags:
        - Query
  /cosmos/bank/v1beta1/balances/{address}:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: AllBalances
      parameters:
        - description: address is the address to query balances for.
          in: path
          name: address
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
        - description: >-
            resolve_denom is the flag to resolve the denom into a human-readable
            form from the metadata.


            Since: cosmos-sdk 0.50
          in: query
          name: resolve_denom
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryAllBalancesResponse is the response type for the
              Query/AllBalances RPC

              method.
            properties:
              balances:
                description: balances is the balances of all the coins.
                items:
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: AllBalances queries the balance of all coins for a single account.
      tags:
        - Query
  /cosmos/bank/v1beta1/balances/{address}/by_denom:
    get:
      operationId: Balance
      parameters:
        - description: address is the address to query balances for.
          in: path
          name: address
          required: true
          type: string
        - description: denom is the coin denom to query balances for.
          in: query
          name: denom
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryBalanceResponse is the response type for the Query/Balance
              RPC method.
            properties:
              balance:
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Balance queries the balance of a single coin for a single account.
      tags:
        - Query
  /cosmos/bank/v1beta1/denom_owners/{denom}:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.


        Since: cosmos-sdk 0.46
      operationId: DenomOwners
      parameters:
        - description: >-
            denom defines the coin denomination to query all account holders
            for.
          in: path
          name: denom
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryDenomOwnersResponse defines the RPC response of a DenomOwners
              RPC query.


              Since: cosmos-sdk 0.46
            properties:
              denom_owners:
                items:
                  description: >-
                    DenomOwner defines structure representing an account that
                    owns or holds a

                    particular denominated token. It contains the account
                    address and account

                    balance of the denominated token.


                    Since: cosmos-sdk 0.46
                  properties:
                    address:
                      description: >-
                        address defines the address that owns a particular
                        denomination.
                      type: string
                    balance:
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        DenomOwners queries for all account addresses that own a particular
        token

        denomination.
      tags:
        - Query
  /cosmos/bank/v1beta1/denom_owners_by_query:
    get:
      description: 'Since: cosmos-sdk 0.50.3'
      operationId: DenomOwnersByQuery
      parameters:
        - description: >-
            denom defines the coin denomination to query all account holders
            for.
          in: query
          name: denom
          required: false
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryDenomOwnersByQueryResponse defines the RPC response of a
              DenomOwnersByQuery RPC query.


              Since: cosmos-sdk 0.50.3
            properties:
              denom_owners:
                items:
                  description: >-
                    DenomOwner defines structure representing an account that
                    owns or holds a

                    particular denominated token. It contains the account
                    address and account

                    balance of the denominated token.


                    Since: cosmos-sdk 0.46
                  properties:
                    address:
                      description: >-
                        address defines the address that owns a particular
                        denomination.
                      type: string
                    balance:
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        DenomOwnersByQuery queries for all account addresses that own a
        particular token

        denomination.
      tags:
        - Query
  /cosmos/bank/v1beta1/denoms_metadata:
    get:
      operationId: DenomsMetadata
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryDenomsMetadataResponse is the response type for the
              Query/DenomsMetadata RPC

              method.
            properties:
              metadatas:
                description: >-
                  metadata provides the client information for all the
                  registered tokens.
                items:
                  description: |-
                    Metadata represents a struct that describes
                    a basic token.
                  properties:
                    base:
                      description: >-
                        base represents the base denom (should be the DenomUnit
                        with exponent = 0).
                      type: string
                    denom_units:
                      items:
                        description: |-
                          DenomUnit represents a struct that describes a given
                          denomination unit of the basic token.
                        properties:
                          aliases:
                            items:
                              type: string
                            title: >-
                              aliases is a list of string aliases for the given
                              denom
                            type: array
                          denom:
                            description: >-
                              denom represents the string name of the given
                              denom unit (e.g uatom).
                            type: string
                          exponent:
                            description: >-
                              exponent represents power of 10 exponent that one
                              must

                              raise the base_denom to in order to equal the
                              given DenomUnit's denom

                              1 denom = 10^exponent base_denom

                              (e.g. with a base_denom of uatom, one can create a
                              DenomUnit of 'atom' with

                              exponent = 6, thus: 1 atom = 10^6 uatom).
                            format: int64
                            type: integer
                        type: object
                      title: >-
                        denom_units represents the list of DenomUnit's for a
                        given coin
                      type: array
                    description:
                      type: string
                    display:
                      description: |-
                        display indicates the suggested denom that should be
                        displayed in clients.
                      type: string
                    name:
                      description: 'Since: cosmos-sdk 0.43'
                      title: 'name defines the name of the token (eg: Cosmos Atom)'
                      type: string
                    symbol:
                      description: >-
                        symbol is the token symbol usually shown on exchanges
                        (eg: ATOM). This can

                        be the same as the display.


                        Since: cosmos-sdk 0.43
                      type: string
                    uri:
                      description: >-
                        URI to a document (on or off-chain) that contains
                        additional information. Optional.


                        Since: cosmos-sdk 0.46
                      type: string
                    uri_hash:
                      description: >-
                        URIHash is a sha256 hash of a document pointed by URI.
                        It's used to verify that

                        the document didn't change. Optional.


                        Since: cosmos-sdk 0.46
                      type: string
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: |-
        DenomsMetadata queries the client metadata for all registered coin
        denominations.
      tags:
        - Query
  /cosmos/bank/v1beta1/denoms_metadata/{denom}:
    get:
      operationId: DenomMetadata
      parameters:
        - description: denom is the coin denom to query the metadata for.
          in: path
          name: denom
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryDenomMetadataResponse is the response type for the
              Query/DenomMetadata RPC

              method.
            properties:
              metadata:
                description: >-
                  metadata describes and provides all the client information for
                  the requested token.
                properties:
                  base:
                    description: >-
                      base represents the base denom (should be the DenomUnit
                      with exponent = 0).
                    type: string
                  denom_units:
                    items:
                      description: |-
                        DenomUnit represents a struct that describes a given
                        denomination unit of the basic token.
                      properties:
                        aliases:
                          items:
                            type: string
                          title: >-
                            aliases is a list of string aliases for the given
                            denom
                          type: array
                        denom:
                          description: >-
                            denom represents the string name of the given denom
                            unit (e.g uatom).
                          type: string
                        exponent:
                          description: >-
                            exponent represents power of 10 exponent that one
                            must

                            raise the base_denom to in order to equal the given
                            DenomUnit's denom

                            1 denom = 10^exponent base_denom

                            (e.g. with a base_denom of uatom, one can create a
                            DenomUnit of 'atom' with

                            exponent = 6, thus: 1 atom = 10^6 uatom).
                          format: int64
                          type: integer
                      type: object
                    title: >-
                      denom_units represents the list of DenomUnit's for a given
                      coin
                    type: array
                  description:
                    type: string
                  display:
                    description: |-
                      display indicates the suggested denom that should be
                      displayed in clients.
                    type: string
                  name:
                    description: 'Since: cosmos-sdk 0.43'
                    title: 'name defines the name of the token (eg: Cosmos Atom)'
                    type: string
                  symbol:
                    description: >-
                      symbol is the token symbol usually shown on exchanges (eg:
                      ATOM). This can

                      be the same as the display.


                      Since: cosmos-sdk 0.43
                    type: string
                  uri:
                    description: >-
                      URI to a document (on or off-chain) that contains
                      additional information. Optional.


                      Since: cosmos-sdk 0.46
                    type: string
                  uri_hash:
                    description: >-
                      URIHash is a sha256 hash of a document pointed by URI.
                      It's used to verify that

                      the document didn't change. Optional.


                      Since: cosmos-sdk 0.46
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: DenomMetadata queries the client metadata of a given coin denomination.
      tags:
        - Query
  /cosmos/bank/v1beta1/denoms_metadata_by_query_string:
    get:
      operationId: DenomMetadataByQueryString
      parameters:
        - description: denom is the coin denom to query the metadata for.
          in: query
          name: denom
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryDenomMetadataByQueryStringResponse is the response type for
              the Query/DenomMetadata RPC

              method. Identical with QueryDenomMetadataResponse but receives
              denom as query string in request.
            properties:
              metadata:
                description: >-
                  metadata describes and provides all the client information for
                  the requested token.
                properties:
                  base:
                    description: >-
                      base represents the base denom (should be the DenomUnit
                      with exponent = 0).
                    type: string
                  denom_units:
                    items:
                      description: |-
                        DenomUnit represents a struct that describes a given
                        denomination unit of the basic token.
                      properties:
                        aliases:
                          items:
                            type: string
                          title: >-
                            aliases is a list of string aliases for the given
                            denom
                          type: array
                        denom:
                          description: >-
                            denom represents the string name of the given denom
                            unit (e.g uatom).
                          type: string
                        exponent:
                          description: >-
                            exponent represents power of 10 exponent that one
                            must

                            raise the base_denom to in order to equal the given
                            DenomUnit's denom

                            1 denom = 10^exponent base_denom

                            (e.g. with a base_denom of uatom, one can create a
                            DenomUnit of 'atom' with

                            exponent = 6, thus: 1 atom = 10^6 uatom).
                          format: int64
                          type: integer
                      type: object
                    title: >-
                      denom_units represents the list of DenomUnit's for a given
                      coin
                    type: array
                  description:
                    type: string
                  display:
                    description: |-
                      display indicates the suggested denom that should be
                      displayed in clients.
                    type: string
                  name:
                    description: 'Since: cosmos-sdk 0.43'
                    title: 'name defines the name of the token (eg: Cosmos Atom)'
                    type: string
                  symbol:
                    description: >-
                      symbol is the token symbol usually shown on exchanges (eg:
                      ATOM). This can

                      be the same as the display.


                      Since: cosmos-sdk 0.43
                    type: string
                  uri:
                    description: >-
                      URI to a document (on or off-chain) that contains
                      additional information. Optional.


                      Since: cosmos-sdk 0.46
                    type: string
                  uri_hash:
                    description: >-
                      URIHash is a sha256 hash of a document pointed by URI.
                      It's used to verify that

                      the document didn't change. Optional.


                      Since: cosmos-sdk 0.46
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        DenomMetadataByQueryString queries the client metadata of a given coin
        denomination.
      tags:
        - Query
  /cosmos/bank/v1beta1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryParamsResponse defines the response type for querying x/bank
              parameters.
            properties:
              params:
                description: params provides the parameters of the bank module.
                properties:
                  default_send_enabled:
                    type: boolean
                  send_enabled:
                    description: >-
                      Deprecated: Use of SendEnabled in params is deprecated.

                      For genesis, use the newly added send_enabled field in the
                      genesis object.

                      Storage, lookup, and manipulation of this information is
                      now in the keeper.


                      As of cosmos-sdk 0.47, this only exists for backwards
                      compatibility of genesis files.
                    items:
                      description: >-
                        SendEnabled maps coin denom to a send_enabled status
                        (whether a denom is

                        sendable).
                      properties:
                        denom:
                          type: string
                        enabled:
                          type: boolean
                      type: object
                    type: array
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params queries the parameters of x/bank module.
      tags:
        - Query
  /cosmos/bank/v1beta1/send_enabled:
    get:
      description: >-
        This query only returns denominations that have specific SendEnabled
        settings.

        Any denomination that does not have a specific setting will use the
        default

        params.default_send_enabled, and will not be returned by this query.


        Since: cosmos-sdk 0.47
      operationId: SendEnabled
      parameters:
        - collectionFormat: multi
          description: >-
            denoms is the specific denoms you want look up. Leave empty to get
            all entries.
          in: query
          items:
            type: string
          name: denoms
          required: false
          type: array
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QuerySendEnabledResponse defines the RPC response of a SendEnable
              query.


              Since: cosmos-sdk 0.47
            properties:
              pagination:
                description: >-
                  pagination defines the pagination in the response. This field
                  is only

                  populated if the denoms field in the request is empty.
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
              send_enabled:
                items:
                  description: >-
                    SendEnabled maps coin denom to a send_enabled status
                    (whether a denom is

                    sendable).
                  properties:
                    denom:
                      type: string
                    enabled:
                      type: boolean
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: SendEnabled queries for SendEnabled entries.
      tags:
        - Query
  /cosmos/bank/v1beta1/spendable_balances/{address}:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.


        Since: cosmos-sdk 0.46
      operationId: SpendableBalances
      parameters:
        - description: address is the address to query spendable balances for.
          in: path
          name: address
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QuerySpendableBalancesResponse defines the gRPC response structure
              for querying

              an account's spendable balances.


              Since: cosmos-sdk 0.46
            properties:
              balances:
                description: balances is the spendable balances of all the coins.
                items:
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        SpendableBalances queries the spendable balance of all coins for a
        single

        account.
      tags:
        - Query
  /cosmos/bank/v1beta1/spendable_balances/{address}/by_denom:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.


        Since: cosmos-sdk 0.47
      operationId: SpendableBalanceByDenom
      parameters:
        - description: address is the address to query balances for.
          in: path
          name: address
          required: true
          type: string
        - description: denom is the coin denom to query balances for.
          in: query
          name: denom
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QuerySpendableBalanceByDenomResponse defines the gRPC response
              structure for

              querying an account's spendable balance for a specific denom.


              Since: cosmos-sdk 0.47
            properties:
              balance:
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        SpendableBalanceByDenom queries the spendable balance of a single denom
        for

        a single account.
      tags:
        - Query
  /cosmos/bank/v1beta1/supply:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: TotalSupply
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              pagination:
                description: |-
                  pagination defines the pagination in the response.

                  Since: cosmos-sdk 0.43
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
              supply:
                items:
                  description: >-
                    Coin defines a token with a denomination and an amount.


                    NOTE: The amount field is an Int which implements the custom
                    method

                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                title: supply is the supply of the coins
                type: array
            title: >-
              QueryTotalSupplyResponse is the response type for the
              Query/TotalSupply RPC

              method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: TotalSupply queries the total supply of all coins.
      tags:
        - Query
  /cosmos/bank/v1beta1/supply/by_denom:
    get:
      description: >-
        When called from another module, this query might consume a high amount
        of

        gas if the pagination field is incorrectly set.
      operationId: SupplyOf
      parameters:
        - description: denom is the coin denom to query balances for.
          in: query
          name: denom
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QuerySupplyOfResponse is the response type for the Query/SupplyOf
              RPC method.
            properties:
              amount:
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: SupplyOf queries the supply of a single coin.
      tags:
        - Query
  /cosmos/base/node/v1beta1/config:
    get:
      operationId: Config
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              ConfigResponse defines the response structure for the Config gRPC
              query.
            properties:
              halt_height:
                format: uint64
                type: string
              minimum_gas_price:
                type: string
              pruning_interval:
                type: string
              pruning_keep_recent:
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Config queries for the operator configuration.
      tags:
        - Service
  /cosmos/base/node/v1beta1/status:
    get:
      operationId: Status
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              StateResponse defines the response structure for the status of a
              node.
            properties:
              app_hash:
                format: byte
                type: string
              earliest_store_height:
                format: uint64
                type: string
              height:
                format: uint64
                type: string
              timestamp:
                format: date-time
                type: string
              validator_hash:
                format: byte
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Status queries for the node status.
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/abci_query:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: ABCIQuery
      parameters:
        - format: byte
          in: query
          name: data
          required: false
          type: string
        - in: query
          name: path
          required: false
          type: string
        - format: int64
          in: query
          name: height
          required: false
          type: string
        - in: query
          name: prove
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              ABCIQueryResponse defines the response structure for the ABCIQuery
              gRPC query.


              Note: This type is a duplicate of the ResponseQuery proto type
              defined in

              Tendermint.
            properties:
              code:
                format: int64
                type: integer
              codespace:
                type: string
              height:
                format: int64
                type: string
              index:
                format: int64
                type: string
              info:
                type: string
              key:
                format: byte
                type: string
              log:
                type: string
              proof_ops:
                description: >-
                  ProofOps is Merkle proof defined by the list of ProofOps.


                  Note: This type is a duplicate of the ProofOps proto type
                  defined in Tendermint.
                properties:
                  ops:
                    items:
                      description: >-
                        ProofOp defines an operation used for calculating Merkle
                        root. The data could

                        be arbitrary format, providing necessary data for
                        example neighbouring node

                        hash.


                        Note: This type is a duplicate of the ProofOp proto type
                        defined in Tendermint.
                      properties:
                        data:
                          format: byte
                          type: string
                        key:
                          format: byte
                          type: string
                        type:
                          type: string
                      type: object
                    type: array
                type: object
              value:
                format: byte
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        ABCIQuery defines a query handler that supports ABCI queries directly to
        the

        application, bypassing Tendermint completely. The ABCI query must
        contain

        a valid and supported path, including app, custom, p2p, and store.
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/blocks/latest:
    get:
      operationId: GetLatestBlock
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              GetLatestBlockResponse is the response type for the
              Query/GetLatestBlock RPC method.
            properties:
              block:
                title: 'Deprecated: please use `sdk_block` instead'
                properties:
                  data:
                    properties:
                      txs:
                        description: >-
                          Txs that will be applied by state @ block.Height+1.

                          NOTE: not all txs here are valid.  We're just agreeing
                          on the order first.

                          This means that block.AppHash does not include these
                          txs.
                        items:
                          format: byte
                          type: string
                        type: array
                    title: >-
                      Data contains the set of transactions included in the
                      block
                    type: object
                  evidence:
                    properties:
                      evidence:
                        items:
                          properties:
                            duplicate_vote_evidence:
                              description: >-
                                DuplicateVoteEvidence contains evidence of a
                                validator signed two conflicting votes.
                              properties:
                                timestamp:
                                  format: date-time
                                  type: string
                                total_voting_power:
                                  format: int64
                                  type: string
                                validator_power:
                                  format: int64
                                  type: string
                                vote_a:
                                  description: >-
                                    Vote represents a prevote or precommit vote
                                    from validators for

                                    consensus.
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    extension:
                                      description: >-
                                        Vote extension provided by the
                                        application. Only valid for precommit

                                        messages.
                                      format: byte
                                      type: string
                                    extension_signature:
                                      description: >-
                                        Vote extension signature by the
                                        validator if they participated in

                                        consensus for the associated block.

                                        Only valid for precommit messages.
                                      format: byte
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signature:
                                      description: >-
                                        Vote signature by the validator if they
                                        participated in consensus for the

                                        associated block.
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    type:
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: >-
                                        SignedMsgType is a type of signed
                                        message in the consensus.

                                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                      enum:
                                        - SIGNED_MSG_TYPE_UNKNOWN
                                        - SIGNED_MSG_TYPE_PREVOTE
                                        - SIGNED_MSG_TYPE_PRECOMMIT
                                        - SIGNED_MSG_TYPE_PROPOSAL
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                    validator_index:
                                      format: int32
                                      type: integer
                                  type: object
                                vote_b:
                                  description: >-
                                    Vote represents a prevote or precommit vote
                                    from validators for

                                    consensus.
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    extension:
                                      description: >-
                                        Vote extension provided by the
                                        application. Only valid for precommit

                                        messages.
                                      format: byte
                                      type: string
                                    extension_signature:
                                      description: >-
                                        Vote extension signature by the
                                        validator if they participated in

                                        consensus for the associated block.

                                        Only valid for precommit messages.
                                      format: byte
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signature:
                                      description: >-
                                        Vote signature by the validator if they
                                        participated in consensus for the

                                        associated block.
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    type:
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: >-
                                        SignedMsgType is a type of signed
                                        message in the consensus.

                                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                      enum:
                                        - SIGNED_MSG_TYPE_UNKNOWN
                                        - SIGNED_MSG_TYPE_PREVOTE
                                        - SIGNED_MSG_TYPE_PRECOMMIT
                                        - SIGNED_MSG_TYPE_PROPOSAL
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                    validator_index:
                                      format: int32
                                      type: integer
                                  type: object
                              type: object
                            light_client_attack_evidence:
                              description: >-
                                LightClientAttackEvidence contains evidence of a
                                set of validators attempting to mislead a light
                                client.
                              properties:
                                byzantine_validators:
                                  items:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: >-
                                          PublicKey defines the keys available for
                                          use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  type: array
                                common_height:
                                  format: int64
                                  type: string
                                conflicting_block:
                                  properties:
                                    signed_header:
                                      properties:
                                        commit:
                                          description: >-
                                            Commit contains the evidence that a
                                            block was committed by a set of
                                            validators.
                                          properties:
                                            block_id:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                part_set_header:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    total:
                                                      format: int64
                                                      type: integer
                                                  title: PartsetHeader
                                                  type: object
                                              title: BlockID
                                              type: object
                                            height:
                                              format: int64
                                              type: string
                                            round:
                                              format: int32
                                              type: integer
                                            signatures:
                                              items:
                                                description: >-
                                                  CommitSig is a part of the Vote included
                                                  in a Commit.
                                                properties:
                                                  block_id_flag:
                                                    default: BLOCK_ID_FLAG_UNKNOWN
                                                    enum:
                                                      - BLOCK_ID_FLAG_UNKNOWN
                                                      - BLOCK_ID_FLAG_ABSENT
                                                      - BLOCK_ID_FLAG_COMMIT
                                                      - BLOCK_ID_FLAG_NIL
                                                    title: >-
                                                      BlockIdFlag indicates which BlockID the
                                                      signature is for
                                                    type: string
                                                  signature:
                                                    format: byte
                                                    type: string
                                                  timestamp:
                                                    format: date-time
                                                    type: string
                                                  validator_address:
                                                    format: byte
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        header:
                                          description: >-
                                            Header defines the structure of a block
                                            header.
                                          properties:
                                            app_hash:
                                              format: byte
                                              type: string
                                            chain_id:
                                              type: string
                                            consensus_hash:
                                              format: byte
                                              type: string
                                            data_hash:
                                              format: byte
                                              type: string
                                            evidence_hash:
                                              format: byte
                                              title: consensus info
                                              type: string
                                            height:
                                              format: int64
                                              type: string
                                            last_block_id:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                part_set_header:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    total:
                                                      format: int64
                                                      type: integer
                                                  title: PartsetHeader
                                                  type: object
                                              title: BlockID
                                              type: object
                                            last_commit_hash:
                                              format: byte
                                              title: hashes of block data
                                              type: string
                                            last_results_hash:
                                              format: byte
                                              type: string
                                            next_validators_hash:
                                              format: byte
                                              type: string
                                            proposer_address:
                                              format: byte
                                              type: string
                                            time:
                                              format: date-time
                                              type: string
                                            validators_hash:
                                              format: byte
                                              title: >-
                                                hashes from the app output from the prev
                                                block
                                              type: string
                                            version:
                                              title: basic block info
                                              description: >-
                                                Consensus captures the consensus rules
                                                for processing a block in the
                                                blockchain,

                                                including all blockchain data structures
                                                and the rules of the application's

                                                state transition machine.
                                              properties:
                                                app:
                                                  format: uint64
                                                  type: string
                                                block:
                                                  format: uint64
                                                  type: string
                                              type: object
                                          type: object
                                      type: object
                                    validator_set:
                                      properties:
                                        proposer:
                                          properties:
                                            address:
                                              format: byte
                                              type: string
                                            proposer_priority:
                                              format: int64
                                              type: string
                                            pub_key:
                                              properties:
                                                ed25519:
                                                  format: byte
                                                  type: string
                                                secp256k1:
                                                  format: byte
                                                  type: string
                                              title: >-
                                                PublicKey defines the keys available for
                                                use with Validators
                                              type: object
                                            voting_power:
                                              format: int64
                                              type: string
                                          type: object
                                        total_voting_power:
                                          format: int64
                                          type: string
                                        validators:
                                          items:
                                            properties:
                                              address:
                                                format: byte
                                                type: string
                                              proposer_priority:
                                                format: int64
                                                type: string
                                              pub_key:
                                                properties:
                                                  ed25519:
                                                    format: byte
                                                    type: string
                                                  secp256k1:
                                                    format: byte
                                                    type: string
                                                title: >-
                                                  PublicKey defines the keys available for
                                                  use with Validators
                                                type: object
                                              voting_power:
                                                format: int64
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                timestamp:
                                  format: date-time
                                  type: string
                                total_voting_power:
                                  format: int64
                                  type: string
                              type: object
                          type: object
                        type: array
                    type: object
                  header:
                    description: Header defines the structure of a block header.
                    properties:
                      app_hash:
                        format: byte
                        type: string
                      chain_id:
                        type: string
                      consensus_hash:
                        format: byte
                        type: string
                      data_hash:
                        format: byte
                        type: string
                      evidence_hash:
                        format: byte
                        title: consensus info
                        type: string
                      height:
                        format: int64
                        type: string
                      last_block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      last_commit_hash:
                        format: byte
                        title: hashes of block data
                        type: string
                      last_results_hash:
                        format: byte
                        type: string
                      next_validators_hash:
                        format: byte
                        type: string
                      proposer_address:
                        format: byte
                        type: string
                      time:
                        format: date-time
                        type: string
                      validators_hash:
                        format: byte
                        title: hashes from the app output from the prev block
                        type: string
                      version:
                        title: basic block info
                        description: >-
                          Consensus captures the consensus rules for processing
                          a block in the blockchain,

                          including all blockchain data structures and the rules
                          of the application's

                          state transition machine.
                        properties:
                          app:
                            format: uint64
                            type: string
                          block:
                            format: uint64
                            type: string
                        type: object
                    type: object
                  last_commit:
                    description: >-
                      Commit contains the evidence that a block was committed by
                      a set of validators.
                    properties:
                      block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      height:
                        format: int64
                        type: string
                      round:
                        format: int32
                        type: integer
                      signatures:
                        items:
                          description: >-
                            CommitSig is a part of the Vote included in a
                            Commit.
                          properties:
                            block_id_flag:
                              default: BLOCK_ID_FLAG_UNKNOWN
                              enum:
                                - BLOCK_ID_FLAG_UNKNOWN
                                - BLOCK_ID_FLAG_ABSENT
                                - BLOCK_ID_FLAG_COMMIT
                                - BLOCK_ID_FLAG_NIL
                              title: >-
                                BlockIdFlag indicates which BlockID the
                                signature is for
                              type: string
                            signature:
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            validator_address:
                              format: byte
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              sdk_block:
                title: 'Since: cosmos-sdk 0.47'
                description: >-
                  Block is tendermint type Block, with the Header proposer
                  address

                  field converted to bech32 string.
                properties:
                  data:
                    properties:
                      txs:
                        description: >-
                          Txs that will be applied by state @ block.Height+1.

                          NOTE: not all txs here are valid.  We're just agreeing
                          on the order first.

                          This means that block.AppHash does not include these
                          txs.
                        items:
                          format: byte
                          type: string
                        type: array
                    title: >-
                      Data contains the set of transactions included in the
                      block
                    type: object
                  evidence:
                    properties:
                      evidence:
                        items:
                          properties:
                            duplicate_vote_evidence:
                              description: >-
                                DuplicateVoteEvidence contains evidence of a
                                validator signed two conflicting votes.
                              properties:
                                timestamp:
                                  format: date-time
                                  type: string
                                total_voting_power:
                                  format: int64
                                  type: string
                                validator_power:
                                  format: int64
                                  type: string
                                vote_a:
                                  description: >-
                                    Vote represents a prevote or precommit vote
                                    from validators for

                                    consensus.
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    extension:
                                      description: >-
                                        Vote extension provided by the
                                        application. Only valid for precommit

                                        messages.
                                      format: byte
                                      type: string
                                    extension_signature:
                                      description: >-
                                        Vote extension signature by the
                                        validator if they participated in

                                        consensus for the associated block.

                                        Only valid for precommit messages.
                                      format: byte
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signature:
                                      description: >-
                                        Vote signature by the validator if they
                                        participated in consensus for the

                                        associated block.
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    type:
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: >-
                                        SignedMsgType is a type of signed
                                        message in the consensus.

                                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                      enum:
                                        - SIGNED_MSG_TYPE_UNKNOWN
                                        - SIGNED_MSG_TYPE_PREVOTE
                                        - SIGNED_MSG_TYPE_PRECOMMIT
                                        - SIGNED_MSG_TYPE_PROPOSAL
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                    validator_index:
                                      format: int32
                                      type: integer
                                  type: object
                                vote_b:
                                  description: >-
                                    Vote represents a prevote or precommit vote
                                    from validators for

                                    consensus.
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    extension:
                                      description: >-
                                        Vote extension provided by the
                                        application. Only valid for precommit

                                        messages.
                                      format: byte
                                      type: string
                                    extension_signature:
                                      description: >-
                                        Vote extension signature by the
                                        validator if they participated in

                                        consensus for the associated block.

                                        Only valid for precommit messages.
                                      format: byte
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signature:
                                      description: >-
                                        Vote signature by the validator if they
                                        participated in consensus for the

                                        associated block.
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    type:
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: >-
                                        SignedMsgType is a type of signed
                                        message in the consensus.

                                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                      enum:
                                        - SIGNED_MSG_TYPE_UNKNOWN
                                        - SIGNED_MSG_TYPE_PREVOTE
                                        - SIGNED_MSG_TYPE_PRECOMMIT
                                        - SIGNED_MSG_TYPE_PROPOSAL
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                    validator_index:
                                      format: int32
                                      type: integer
                                  type: object
                              type: object
                            light_client_attack_evidence:
                              description: >-
                                LightClientAttackEvidence contains evidence of a
                                set of validators attempting to mislead a light
                                client.
                              properties:
                                byzantine_validators:
                                  items:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: >-
                                          PublicKey defines the keys available for
                                          use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  type: array
                                common_height:
                                  format: int64
                                  type: string
                                conflicting_block:
                                  properties:
                                    signed_header:
                                      properties:
                                        commit:
                                          description: >-
                                            Commit contains the evidence that a
                                            block was committed by a set of
                                            validators.
                                          properties:
                                            block_id:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                part_set_header:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    total:
                                                      format: int64
                                                      type: integer
                                                  title: PartsetHeader
                                                  type: object
                                              title: BlockID
                                              type: object
                                            height:
                                              format: int64
                                              type: string
                                            round:
                                              format: int32
                                              type: integer
                                            signatures:
                                              items:
                                                description: >-
                                                  CommitSig is a part of the Vote included
                                                  in a Commit.
                                                properties:
                                                  block_id_flag:
                                                    default: BLOCK_ID_FLAG_UNKNOWN
                                                    enum:
                                                      - BLOCK_ID_FLAG_UNKNOWN
                                                      - BLOCK_ID_FLAG_ABSENT
                                                      - BLOCK_ID_FLAG_COMMIT
                                                      - BLOCK_ID_FLAG_NIL
                                                    title: >-
                                                      BlockIdFlag indicates which BlockID the
                                                      signature is for
                                                    type: string
                                                  signature:
                                                    format: byte
                                                    type: string
                                                  timestamp:
                                                    format: date-time
                                                    type: string
                                                  validator_address:
                                                    format: byte
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        header:
                                          description: >-
                                            Header defines the structure of a block
                                            header.
                                          properties:
                                            app_hash:
                                              format: byte
                                              type: string
                                            chain_id:
                                              type: string
                                            consensus_hash:
                                              format: byte
                                              type: string
                                            data_hash:
                                              format: byte
                                              type: string
                                            evidence_hash:
                                              format: byte
                                              title: consensus info
                                              type: string
                                            height:
                                              format: int64
                                              type: string
                                            last_block_id:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                part_set_header:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    total:
                                                      format: int64
                                                      type: integer
                                                  title: PartsetHeader
                                                  type: object
                                              title: BlockID
                                              type: object
                                            last_commit_hash:
                                              format: byte
                                              title: hashes of block data
                                              type: string
                                            last_results_hash:
                                              format: byte
                                              type: string
                                            next_validators_hash:
                                              format: byte
                                              type: string
                                            proposer_address:
                                              format: byte
                                              type: string
                                            time:
                                              format: date-time
                                              type: string
                                            validators_hash:
                                              format: byte
                                              title: >-
                                                hashes from the app output from the prev
                                                block
                                              type: string
                                            version:
                                              title: basic block info
                                              description: >-
                                                Consensus captures the consensus rules
                                                for processing a block in the
                                                blockchain,

                                                including all blockchain data structures
                                                and the rules of the application's

                                                state transition machine.
                                              properties:
                                                app:
                                                  format: uint64
                                                  type: string
                                                block:
                                                  format: uint64
                                                  type: string
                                              type: object
                                          type: object
                                      type: object
                                    validator_set:
                                      properties:
                                        proposer:
                                          properties:
                                            address:
                                              format: byte
                                              type: string
                                            proposer_priority:
                                              format: int64
                                              type: string
                                            pub_key:
                                              properties:
                                                ed25519:
                                                  format: byte
                                                  type: string
                                                secp256k1:
                                                  format: byte
                                                  type: string
                                              title: >-
                                                PublicKey defines the keys available for
                                                use with Validators
                                              type: object
                                            voting_power:
                                              format: int64
                                              type: string
                                          type: object
                                        total_voting_power:
                                          format: int64
                                          type: string
                                        validators:
                                          items:
                                            properties:
                                              address:
                                                format: byte
                                                type: string
                                              proposer_priority:
                                                format: int64
                                                type: string
                                              pub_key:
                                                properties:
                                                  ed25519:
                                                    format: byte
                                                    type: string
                                                  secp256k1:
                                                    format: byte
                                                    type: string
                                                title: >-
                                                  PublicKey defines the keys available for
                                                  use with Validators
                                                type: object
                                              voting_power:
                                                format: int64
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                timestamp:
                                  format: date-time
                                  type: string
                                total_voting_power:
                                  format: int64
                                  type: string
                              type: object
                          type: object
                        type: array
                    type: object
                  header:
                    description: Header defines the structure of a Tendermint block header.
                    properties:
                      app_hash:
                        format: byte
                        type: string
                      chain_id:
                        type: string
                      consensus_hash:
                        format: byte
                        type: string
                      data_hash:
                        format: byte
                        type: string
                      evidence_hash:
                        format: byte
                        title: consensus info
                        type: string
                      height:
                        format: int64
                        type: string
                      last_block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      last_commit_hash:
                        format: byte
                        title: hashes of block data
                        type: string
                      last_results_hash:
                        format: byte
                        type: string
                      next_validators_hash:
                        format: byte
                        type: string
                      proposer_address:
                        description: >-
                          proposer_address is the original block proposer
                          address, formatted as a Bech32 string.

                          In Tendermint, this type is `bytes`, but in the SDK,
                          we convert it to a Bech32 string

                          for better UX.
                        type: string
                      time:
                        format: date-time
                        type: string
                      validators_hash:
                        format: byte
                        title: hashes from the app output from the prev block
                        type: string
                      version:
                        title: basic block info
                        description: >-
                          Consensus captures the consensus rules for processing
                          a block in the blockchain,

                          including all blockchain data structures and the rules
                          of the application's

                          state transition machine.
                        properties:
                          app:
                            format: uint64
                            type: string
                          block:
                            format: uint64
                            type: string
                        type: object
                    type: object
                  last_commit:
                    description: >-
                      Commit contains the evidence that a block was committed by
                      a set of validators.
                    properties:
                      block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      height:
                        format: int64
                        type: string
                      round:
                        format: int32
                        type: integer
                      signatures:
                        items:
                          description: >-
                            CommitSig is a part of the Vote included in a
                            Commit.
                          properties:
                            block_id_flag:
                              default: BLOCK_ID_FLAG_UNKNOWN
                              enum:
                                - BLOCK_ID_FLAG_UNKNOWN
                                - BLOCK_ID_FLAG_ABSENT
                                - BLOCK_ID_FLAG_COMMIT
                                - BLOCK_ID_FLAG_NIL
                              title: >-
                                BlockIdFlag indicates which BlockID the
                                signature is for
                              type: string
                            signature:
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            validator_address:
                              format: byte
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetLatestBlock returns the latest block.
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/blocks/{height}:
    get:
      operationId: GetBlockByHeight
      parameters:
        - format: int64
          in: path
          name: height
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              GetBlockByHeightResponse is the response type for the
              Query/GetBlockByHeight RPC method.
            properties:
              block:
                title: 'Deprecated: please use `sdk_block` instead'
                properties:
                  data:
                    properties:
                      txs:
                        description: >-
                          Txs that will be applied by state @ block.Height+1.

                          NOTE: not all txs here are valid.  We're just agreeing
                          on the order first.

                          This means that block.AppHash does not include these
                          txs.
                        items:
                          format: byte
                          type: string
                        type: array
                    title: >-
                      Data contains the set of transactions included in the
                      block
                    type: object
                  evidence:
                    properties:
                      evidence:
                        items:
                          properties:
                            duplicate_vote_evidence:
                              description: >-
                                DuplicateVoteEvidence contains evidence of a
                                validator signed two conflicting votes.
                              properties:
                                timestamp:
                                  format: date-time
                                  type: string
                                total_voting_power:
                                  format: int64
                                  type: string
                                validator_power:
                                  format: int64
                                  type: string
                                vote_a:
                                  description: >-
                                    Vote represents a prevote or precommit vote
                                    from validators for

                                    consensus.
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    extension:
                                      description: >-
                                        Vote extension provided by the
                                        application. Only valid for precommit

                                        messages.
                                      format: byte
                                      type: string
                                    extension_signature:
                                      description: >-
                                        Vote extension signature by the
                                        validator if they participated in

                                        consensus for the associated block.

                                        Only valid for precommit messages.
                                      format: byte
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signature:
                                      description: >-
                                        Vote signature by the validator if they
                                        participated in consensus for the

                                        associated block.
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    type:
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: >-
                                        SignedMsgType is a type of signed
                                        message in the consensus.

                                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                      enum:
                                        - SIGNED_MSG_TYPE_UNKNOWN
                                        - SIGNED_MSG_TYPE_PREVOTE
                                        - SIGNED_MSG_TYPE_PRECOMMIT
                                        - SIGNED_MSG_TYPE_PROPOSAL
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                    validator_index:
                                      format: int32
                                      type: integer
                                  type: object
                                vote_b:
                                  description: >-
                                    Vote represents a prevote or precommit vote
                                    from validators for

                                    consensus.
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    extension:
                                      description: >-
                                        Vote extension provided by the
                                        application. Only valid for precommit

                                        messages.
                                      format: byte
                                      type: string
                                    extension_signature:
                                      description: >-
                                        Vote extension signature by the
                                        validator if they participated in

                                        consensus for the associated block.

                                        Only valid for precommit messages.
                                      format: byte
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signature:
                                      description: >-
                                        Vote signature by the validator if they
                                        participated in consensus for the

                                        associated block.
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    type:
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: >-
                                        SignedMsgType is a type of signed
                                        message in the consensus.

                                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                      enum:
                                        - SIGNED_MSG_TYPE_UNKNOWN
                                        - SIGNED_MSG_TYPE_PREVOTE
                                        - SIGNED_MSG_TYPE_PRECOMMIT
                                        - SIGNED_MSG_TYPE_PROPOSAL
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                    validator_index:
                                      format: int32
                                      type: integer
                                  type: object
                              type: object
                            light_client_attack_evidence:
                              description: >-
                                LightClientAttackEvidence contains evidence of a
                                set of validators attempting to mislead a light
                                client.
                              properties:
                                byzantine_validators:
                                  items:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: >-
                                          PublicKey defines the keys available for
                                          use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  type: array
                                common_height:
                                  format: int64
                                  type: string
                                conflicting_block:
                                  properties:
                                    signed_header:
                                      properties:
                                        commit:
                                          description: >-
                                            Commit contains the evidence that a
                                            block was committed by a set of
                                            validators.
                                          properties:
                                            block_id:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                part_set_header:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    total:
                                                      format: int64
                                                      type: integer
                                                  title: PartsetHeader
                                                  type: object
                                              title: BlockID
                                              type: object
                                            height:
                                              format: int64
                                              type: string
                                            round:
                                              format: int32
                                              type: integer
                                            signatures:
                                              items:
                                                description: >-
                                                  CommitSig is a part of the Vote included
                                                  in a Commit.
                                                properties:
                                                  block_id_flag:
                                                    default: BLOCK_ID_FLAG_UNKNOWN
                                                    enum:
                                                      - BLOCK_ID_FLAG_UNKNOWN
                                                      - BLOCK_ID_FLAG_ABSENT
                                                      - BLOCK_ID_FLAG_COMMIT
                                                      - BLOCK_ID_FLAG_NIL
                                                    title: >-
                                                      BlockIdFlag indicates which BlockID the
                                                      signature is for
                                                    type: string
                                                  signature:
                                                    format: byte
                                                    type: string
                                                  timestamp:
                                                    format: date-time
                                                    type: string
                                                  validator_address:
                                                    format: byte
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        header:
                                          description: >-
                                            Header defines the structure of a block
                                            header.
                                          properties:
                                            app_hash:
                                              format: byte
                                              type: string
                                            chain_id:
                                              type: string
                                            consensus_hash:
                                              format: byte
                                              type: string
                                            data_hash:
                                              format: byte
                                              type: string
                                            evidence_hash:
                                              format: byte
                                              title: consensus info
                                              type: string
                                            height:
                                              format: int64
                                              type: string
                                            last_block_id:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                part_set_header:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    total:
                                                      format: int64
                                                      type: integer
                                                  title: PartsetHeader
                                                  type: object
                                              title: BlockID
                                              type: object
                                            last_commit_hash:
                                              format: byte
                                              title: hashes of block data
                                              type: string
                                            last_results_hash:
                                              format: byte
                                              type: string
                                            next_validators_hash:
                                              format: byte
                                              type: string
                                            proposer_address:
                                              format: byte
                                              type: string
                                            time:
                                              format: date-time
                                              type: string
                                            validators_hash:
                                              format: byte
                                              title: >-
                                                hashes from the app output from the prev
                                                block
                                              type: string
                                            version:
                                              title: basic block info
                                              description: >-
                                                Consensus captures the consensus rules
                                                for processing a block in the
                                                blockchain,

                                                including all blockchain data structures
                                                and the rules of the application's

                                                state transition machine.
                                              properties:
                                                app:
                                                  format: uint64
                                                  type: string
                                                block:
                                                  format: uint64
                                                  type: string
                                              type: object
                                          type: object
                                      type: object
                                    validator_set:
                                      properties:
                                        proposer:
                                          properties:
                                            address:
                                              format: byte
                                              type: string
                                            proposer_priority:
                                              format: int64
                                              type: string
                                            pub_key:
                                              properties:
                                                ed25519:
                                                  format: byte
                                                  type: string
                                                secp256k1:
                                                  format: byte
                                                  type: string
                                              title: >-
                                                PublicKey defines the keys available for
                                                use with Validators
                                              type: object
                                            voting_power:
                                              format: int64
                                              type: string
                                          type: object
                                        total_voting_power:
                                          format: int64
                                          type: string
                                        validators:
                                          items:
                                            properties:
                                              address:
                                                format: byte
                                                type: string
                                              proposer_priority:
                                                format: int64
                                                type: string
                                              pub_key:
                                                properties:
                                                  ed25519:
                                                    format: byte
                                                    type: string
                                                  secp256k1:
                                                    format: byte
                                                    type: string
                                                title: >-
                                                  PublicKey defines the keys available for
                                                  use with Validators
                                                type: object
                                              voting_power:
                                                format: int64
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                timestamp:
                                  format: date-time
                                  type: string
                                total_voting_power:
                                  format: int64
                                  type: string
                              type: object
                          type: object
                        type: array
                    type: object
                  header:
                    description: Header defines the structure of a block header.
                    properties:
                      app_hash:
                        format: byte
                        type: string
                      chain_id:
                        type: string
                      consensus_hash:
                        format: byte
                        type: string
                      data_hash:
                        format: byte
                        type: string
                      evidence_hash:
                        format: byte
                        title: consensus info
                        type: string
                      height:
                        format: int64
                        type: string
                      last_block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      last_commit_hash:
                        format: byte
                        title: hashes of block data
                        type: string
                      last_results_hash:
                        format: byte
                        type: string
                      next_validators_hash:
                        format: byte
                        type: string
                      proposer_address:
                        format: byte
                        type: string
                      time:
                        format: date-time
                        type: string
                      validators_hash:
                        format: byte
                        title: hashes from the app output from the prev block
                        type: string
                      version:
                        title: basic block info
                        description: >-
                          Consensus captures the consensus rules for processing
                          a block in the blockchain,

                          including all blockchain data structures and the rules
                          of the application's

                          state transition machine.
                        properties:
                          app:
                            format: uint64
                            type: string
                          block:
                            format: uint64
                            type: string
                        type: object
                    type: object
                  last_commit:
                    description: >-
                      Commit contains the evidence that a block was committed by
                      a set of validators.
                    properties:
                      block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      height:
                        format: int64
                        type: string
                      round:
                        format: int32
                        type: integer
                      signatures:
                        items:
                          description: >-
                            CommitSig is a part of the Vote included in a
                            Commit.
                          properties:
                            block_id_flag:
                              default: BLOCK_ID_FLAG_UNKNOWN
                              enum:
                                - BLOCK_ID_FLAG_UNKNOWN
                                - BLOCK_ID_FLAG_ABSENT
                                - BLOCK_ID_FLAG_COMMIT
                                - BLOCK_ID_FLAG_NIL
                              title: >-
                                BlockIdFlag indicates which BlockID the
                                signature is for
                              type: string
                            signature:
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            validator_address:
                              format: byte
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              sdk_block:
                title: 'Since: cosmos-sdk 0.47'
                description: >-
                  Block is tendermint type Block, with the Header proposer
                  address

                  field converted to bech32 string.
                properties:
                  data:
                    properties:
                      txs:
                        description: >-
                          Txs that will be applied by state @ block.Height+1.

                          NOTE: not all txs here are valid.  We're just agreeing
                          on the order first.

                          This means that block.AppHash does not include these
                          txs.
                        items:
                          format: byte
                          type: string
                        type: array
                    title: >-
                      Data contains the set of transactions included in the
                      block
                    type: object
                  evidence:
                    properties:
                      evidence:
                        items:
                          properties:
                            duplicate_vote_evidence:
                              description: >-
                                DuplicateVoteEvidence contains evidence of a
                                validator signed two conflicting votes.
                              properties:
                                timestamp:
                                  format: date-time
                                  type: string
                                total_voting_power:
                                  format: int64
                                  type: string
                                validator_power:
                                  format: int64
                                  type: string
                                vote_a:
                                  description: >-
                                    Vote represents a prevote or precommit vote
                                    from validators for

                                    consensus.
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    extension:
                                      description: >-
                                        Vote extension provided by the
                                        application. Only valid for precommit

                                        messages.
                                      format: byte
                                      type: string
                                    extension_signature:
                                      description: >-
                                        Vote extension signature by the
                                        validator if they participated in

                                        consensus for the associated block.

                                        Only valid for precommit messages.
                                      format: byte
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signature:
                                      description: >-
                                        Vote signature by the validator if they
                                        participated in consensus for the

                                        associated block.
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    type:
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: >-
                                        SignedMsgType is a type of signed
                                        message in the consensus.

                                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                      enum:
                                        - SIGNED_MSG_TYPE_UNKNOWN
                                        - SIGNED_MSG_TYPE_PREVOTE
                                        - SIGNED_MSG_TYPE_PRECOMMIT
                                        - SIGNED_MSG_TYPE_PROPOSAL
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                    validator_index:
                                      format: int32
                                      type: integer
                                  type: object
                                vote_b:
                                  description: >-
                                    Vote represents a prevote or precommit vote
                                    from validators for

                                    consensus.
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    extension:
                                      description: >-
                                        Vote extension provided by the
                                        application. Only valid for precommit

                                        messages.
                                      format: byte
                                      type: string
                                    extension_signature:
                                      description: >-
                                        Vote extension signature by the
                                        validator if they participated in

                                        consensus for the associated block.

                                        Only valid for precommit messages.
                                      format: byte
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signature:
                                      description: >-
                                        Vote signature by the validator if they
                                        participated in consensus for the

                                        associated block.
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    type:
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: >-
                                        SignedMsgType is a type of signed
                                        message in the consensus.

                                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                      enum:
                                        - SIGNED_MSG_TYPE_UNKNOWN
                                        - SIGNED_MSG_TYPE_PREVOTE
                                        - SIGNED_MSG_TYPE_PRECOMMIT
                                        - SIGNED_MSG_TYPE_PROPOSAL
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                    validator_index:
                                      format: int32
                                      type: integer
                                  type: object
                              type: object
                            light_client_attack_evidence:
                              description: >-
                                LightClientAttackEvidence contains evidence of a
                                set of validators attempting to mislead a light
                                client.
                              properties:
                                byzantine_validators:
                                  items:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: >-
                                          PublicKey defines the keys available for
                                          use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  type: array
                                common_height:
                                  format: int64
                                  type: string
                                conflicting_block:
                                  properties:
                                    signed_header:
                                      properties:
                                        commit:
                                          description: >-
                                            Commit contains the evidence that a
                                            block was committed by a set of
                                            validators.
                                          properties:
                                            block_id:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                part_set_header:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    total:
                                                      format: int64
                                                      type: integer
                                                  title: PartsetHeader
                                                  type: object
                                              title: BlockID
                                              type: object
                                            height:
                                              format: int64
                                              type: string
                                            round:
                                              format: int32
                                              type: integer
                                            signatures:
                                              items:
                                                description: >-
                                                  CommitSig is a part of the Vote included
                                                  in a Commit.
                                                properties:
                                                  block_id_flag:
                                                    default: BLOCK_ID_FLAG_UNKNOWN
                                                    enum:
                                                      - BLOCK_ID_FLAG_UNKNOWN
                                                      - BLOCK_ID_FLAG_ABSENT
                                                      - BLOCK_ID_FLAG_COMMIT
                                                      - BLOCK_ID_FLAG_NIL
                                                    title: >-
                                                      BlockIdFlag indicates which BlockID the
                                                      signature is for
                                                    type: string
                                                  signature:
                                                    format: byte
                                                    type: string
                                                  timestamp:
                                                    format: date-time
                                                    type: string
                                                  validator_address:
                                                    format: byte
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        header:
                                          description: >-
                                            Header defines the structure of a block
                                            header.
                                          properties:
                                            app_hash:
                                              format: byte
                                              type: string
                                            chain_id:
                                              type: string
                                            consensus_hash:
                                              format: byte
                                              type: string
                                            data_hash:
                                              format: byte
                                              type: string
                                            evidence_hash:
                                              format: byte
                                              title: consensus info
                                              type: string
                                            height:
                                              format: int64
                                              type: string
                                            last_block_id:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                part_set_header:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    total:
                                                      format: int64
                                                      type: integer
                                                  title: PartsetHeader
                                                  type: object
                                              title: BlockID
                                              type: object
                                            last_commit_hash:
                                              format: byte
                                              title: hashes of block data
                                              type: string
                                            last_results_hash:
                                              format: byte
                                              type: string
                                            next_validators_hash:
                                              format: byte
                                              type: string
                                            proposer_address:
                                              format: byte
                                              type: string
                                            time:
                                              format: date-time
                                              type: string
                                            validators_hash:
                                              format: byte
                                              title: >-
                                                hashes from the app output from the prev
                                                block
                                              type: string
                                            version:
                                              title: basic block info
                                              description: >-
                                                Consensus captures the consensus rules
                                                for processing a block in the
                                                blockchain,

                                                including all blockchain data structures
                                                and the rules of the application's

                                                state transition machine.
                                              properties:
                                                app:
                                                  format: uint64
                                                  type: string
                                                block:
                                                  format: uint64
                                                  type: string
                                              type: object
                                          type: object
                                      type: object
                                    validator_set:
                                      properties:
                                        proposer:
                                          properties:
                                            address:
                                              format: byte
                                              type: string
                                            proposer_priority:
                                              format: int64
                                              type: string
                                            pub_key:
                                              properties:
                                                ed25519:
                                                  format: byte
                                                  type: string
                                                secp256k1:
                                                  format: byte
                                                  type: string
                                              title: >-
                                                PublicKey defines the keys available for
                                                use with Validators
                                              type: object
                                            voting_power:
                                              format: int64
                                              type: string
                                          type: object
                                        total_voting_power:
                                          format: int64
                                          type: string
                                        validators:
                                          items:
                                            properties:
                                              address:
                                                format: byte
                                                type: string
                                              proposer_priority:
                                                format: int64
                                                type: string
                                              pub_key:
                                                properties:
                                                  ed25519:
                                                    format: byte
                                                    type: string
                                                  secp256k1:
                                                    format: byte
                                                    type: string
                                                title: >-
                                                  PublicKey defines the keys available for
                                                  use with Validators
                                                type: object
                                              voting_power:
                                                format: int64
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                timestamp:
                                  format: date-time
                                  type: string
                                total_voting_power:
                                  format: int64
                                  type: string
                              type: object
                          type: object
                        type: array
                    type: object
                  header:
                    description: Header defines the structure of a Tendermint block header.
                    properties:
                      app_hash:
                        format: byte
                        type: string
                      chain_id:
                        type: string
                      consensus_hash:
                        format: byte
                        type: string
                      data_hash:
                        format: byte
                        type: string
                      evidence_hash:
                        format: byte
                        title: consensus info
                        type: string
                      height:
                        format: int64
                        type: string
                      last_block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      last_commit_hash:
                        format: byte
                        title: hashes of block data
                        type: string
                      last_results_hash:
                        format: byte
                        type: string
                      next_validators_hash:
                        format: byte
                        type: string
                      proposer_address:
                        description: >-
                          proposer_address is the original block proposer
                          address, formatted as a Bech32 string.

                          In Tendermint, this type is `bytes`, but in the SDK,
                          we convert it to a Bech32 string

                          for better UX.
                        type: string
                      time:
                        format: date-time
                        type: string
                      validators_hash:
                        format: byte
                        title: hashes from the app output from the prev block
                        type: string
                      version:
                        title: basic block info
                        description: >-
                          Consensus captures the consensus rules for processing
                          a block in the blockchain,

                          including all blockchain data structures and the rules
                          of the application's

                          state transition machine.
                        properties:
                          app:
                            format: uint64
                            type: string
                          block:
                            format: uint64
                            type: string
                        type: object
                    type: object
                  last_commit:
                    description: >-
                      Commit contains the evidence that a block was committed by
                      a set of validators.
                    properties:
                      block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      height:
                        format: int64
                        type: string
                      round:
                        format: int32
                        type: integer
                      signatures:
                        items:
                          description: >-
                            CommitSig is a part of the Vote included in a
                            Commit.
                          properties:
                            block_id_flag:
                              default: BLOCK_ID_FLAG_UNKNOWN
                              enum:
                                - BLOCK_ID_FLAG_UNKNOWN
                                - BLOCK_ID_FLAG_ABSENT
                                - BLOCK_ID_FLAG_COMMIT
                                - BLOCK_ID_FLAG_NIL
                              title: >-
                                BlockIdFlag indicates which BlockID the
                                signature is for
                              type: string
                            signature:
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            validator_address:
                              format: byte
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetBlockByHeight queries block for given height.
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/node_info:
    get:
      operationId: GetNodeInfo
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              GetNodeInfoResponse is the response type for the Query/GetNodeInfo
              RPC method.
            properties:
              application_version:
                description: VersionInfo is the type for the GetNodeInfoResponse message.
                properties:
                  app_name:
                    type: string
                  build_deps:
                    items:
                      properties:
                        path:
                          title: module path
                          type: string
                        sum:
                          title: checksum
                          type: string
                        version:
                          title: module version
                          type: string
                      title: Module is the type for VersionInfo
                      type: object
                    type: array
                  build_tags:
                    type: string
                  cosmos_sdk_version:
                    title: 'Since: cosmos-sdk 0.43'
                    type: string
                  git_commit:
                    type: string
                  go_version:
                    type: string
                  name:
                    type: string
                  version:
                    type: string
                type: object
              default_node_info:
                properties:
                  channels:
                    format: byte
                    type: string
                  default_node_id:
                    type: string
                  listen_addr:
                    type: string
                  moniker:
                    type: string
                  network:
                    type: string
                  other:
                    properties:
                      rpc_address:
                        type: string
                      tx_index:
                        type: string
                    type: object
                  protocol_version:
                    properties:
                      app:
                        format: uint64
                        type: string
                      block:
                        format: uint64
                        type: string
                      p2p:
                        format: uint64
                        type: string
                    type: object
                  version:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetNodeInfo queries the current node info.
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/syncing:
    get:
      operationId: GetSyncing
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              GetSyncingResponse is the response type for the Query/GetSyncing
              RPC method.
            properties:
              syncing:
                type: boolean
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetSyncing queries node syncing.
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/validatorsets/latest:
    get:
      operationId: GetLatestValidatorSet
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              GetLatestValidatorSetResponse is the response type for the
              Query/GetValidatorSetByHeight RPC method.
            properties:
              block_height:
                format: int64
                type: string
              pagination:
                description: pagination defines an pagination for the response.
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
              validators:
                items:
                  description: Validator is the type for the validator-set.
                  properties:
                    address:
                      type: string
                    proposer_priority:
                      format: int64
                      type: string
                    pub_key:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    voting_power:
                      format: int64
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetLatestValidatorSet queries latest validator-set.
      tags:
        - Service
  /cosmos/base/tendermint/v1beta1/validatorsets/{height}:
    get:
      operationId: GetValidatorSetByHeight
      parameters:
        - format: int64
          in: path
          name: height
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              GetValidatorSetByHeightResponse is the response type for the
              Query/GetValidatorSetByHeight RPC method.
            properties:
              block_height:
                format: int64
                type: string
              pagination:
                description: pagination defines an pagination for the response.
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
              validators:
                items:
                  description: Validator is the type for the validator-set.
                  properties:
                    address:
                      type: string
                    proposer_priority:
                      format: int64
                      type: string
                    pub_key:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    voting_power:
                      format: int64
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetValidatorSetByHeight queries validator-set at a given height.
      tags:
        - Service
  /cosmos/circuit/v1/accounts:
    get:
      operationId: Accounts
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              AccountsResponse is the response type for the Query/Accounts RPC
              method.
            properties:
              accounts:
                items:
                  properties:
                    address:
                      type: string
                    permissions:
                      description: >-
                        Permissions are the permissions that an account has to
                        trip

                        or reset the circuit breaker.
                      properties:
                        level:
                          description: >-
                            level is the level of permissions granted to this
                            account.
                          default: LEVEL_NONE_UNSPECIFIED
                          enum:
                            - LEVEL_NONE_UNSPECIFIED
                            - LEVEL_SOME_MSGS
                            - LEVEL_ALL_MSGS
                            - LEVEL_SUPER_ADMIN
                          type: string
                        limit_type_urls:
                          description: >-
                            limit_type_urls is used with LEVEL_SOME_MSGS to
                            limit the lists of Msg type

                            URLs that the account can trip. It is an error to
                            use limit_type_urls with

                            a level other than LEVEL_SOME_MSGS.
                          items:
                            type: string
                          type: array
                      type: object
                  title: >-
                    GenesisAccountPermissions is the account permissions for the
                    circuit breaker in genesis
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Account returns account permissions.
      tags:
        - Query
  /cosmos/circuit/v1/accounts/{address}:
    get:
      operationId: Account
      parameters:
        - in: path
          name: address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              AccountResponse is the response type for the Query/Account RPC
              method.
            properties:
              permission:
                description: |-
                  Permissions are the permissions that an account has to trip
                  or reset the circuit breaker.
                properties:
                  level:
                    description: level is the level of permissions granted to this account.
                    default: LEVEL_NONE_UNSPECIFIED
                    enum:
                      - LEVEL_NONE_UNSPECIFIED
                      - LEVEL_SOME_MSGS
                      - LEVEL_ALL_MSGS
                      - LEVEL_SUPER_ADMIN
                    type: string
                  limit_type_urls:
                    description: >-
                      limit_type_urls is used with LEVEL_SOME_MSGS to limit the
                      lists of Msg type

                      URLs that the account can trip. It is an error to use
                      limit_type_urls with

                      a level other than LEVEL_SOME_MSGS.
                    items:
                      type: string
                    type: array
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Account returns account permissions.
      tags:
        - Query
  /cosmos/circuit/v1/disable_list:
    get:
      operationId: DisabledList
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              DisabledListResponse is the response type for the
              Query/DisabledList RPC method.
            properties:
              disabled_list:
                items:
                  type: string
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: DisabledList returns a list of disabled message urls
      tags:
        - Query
  /cosmos/consensus/v1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryParamsResponse defines the response type for querying
              x/consensus parameters.
            properties:
              params:
                description: >-
                  params are the tendermint consensus params stored in the
                  consensus module.

                  Please note that `params.version` is not populated in this
                  response, it is

                  tracked separately in the x/upgrade module.
                properties:
                  abci:
                    description: >-
                      ABCIParams configure functionality specific to the
                      Application Blockchain Interface.
                    properties:
                      vote_extensions_enable_height:
                        description: >-
                          vote_extensions_enable_height configures the first
                          height during which

                          vote extensions will be enabled. During this specified
                          height, and for all

                          subsequent heights, precommit messages that do not
                          contain valid extension data

                          will be considered invalid. Prior to this height, vote
                          extensions will not

                          be used or accepted by validators on the network.


                          Once enabled, vote extensions will be created by the
                          application in ExtendVote,

                          passed to the application for validation in
                          VerifyVoteExtension and given

                          to the application to use when proposing a block
                          during PrepareProposal.
                        format: int64
                        type: string
                    type: object
                  block:
                    description: BlockParams contains limits on the block size.
                    properties:
                      max_bytes:
                        format: int64
                        title: |-
                          Max block size, in bytes.
                          Note: must be greater than 0
                        type: string
                      max_gas:
                        format: int64
                        title: |-
                          Max gas per block.
                          Note: must be greater or equal to -1
                        type: string
                    type: object
                  evidence:
                    description: >-
                      EvidenceParams determine how we handle evidence of
                      malfeasance.
                    properties:
                      max_age_duration:
                        description: >-
                          Max age of evidence, in time.


                          It should correspond with an app's "unbonding period"
                          or other similar

                          mechanism for handling [Nothing-At-Stake

                          attacks](https://github.com/ethereum/wiki/wiki/Proof-of-Stake-FAQ#what-is-the-nothing-at-stake-problem-and-how-can-it-be-fixed).
                        type: string
                      max_age_num_blocks:
                        description: >-
                          Max age of evidence, in blocks.


                          The basic formula for calculating this is:
                          MaxAgeDuration / {average block

                          time}.
                        format: int64
                        type: string
                      max_bytes:
                        format: int64
                        title: >-
                          This sets the maximum size of total evidence in bytes
                          that can be committed in a single block.

                          and should fall comfortably under the max block bytes.

                          Default is 1048576 or 1MB
                        type: string
                    type: object
                  validator:
                    description: >-
                      ValidatorParams restrict the public key types validators
                      can use.

                      NOTE: uses ABCI pubkey naming, not Amino names.
                    properties:
                      pub_key_types:
                        items:
                          type: string
                        type: array
                    type: object
                  version:
                    description: VersionParams contains the ABCI application version.
                    properties:
                      app:
                        format: uint64
                        type: string
                    type: object
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params queries the parameters of x/consensus module.
      tags:
        - Query
  /cosmos/evidence/v1beta1/evidence:
    get:
      operationId: AllEvidence
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryAllEvidenceResponse is the response type for the
              Query/AllEvidence RPC

              method.
            properties:
              evidence:
                description: evidence returns all evidences.
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: AllEvidence queries all evidence.
      tags:
        - Query
  /cosmos/evidence/v1beta1/evidence/{hash}:
    get:
      operationId: Evidence
      parameters:
        - description: |-
            hash defines the evidence hash of the requested evidence.

            Since: cosmos-sdk 0.47
          in: path
          name: hash
          required: true
          type: string
        - description: |-
            evidence_hash defines the hash of the requested evidence.
            Deprecated: Use hash, a HEX encoded string, instead.
          format: byte
          in: query
          name: evidence_hash
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryEvidenceResponse is the response type for the Query/Evidence
              RPC method.
            properties:
              evidence:
                properties:
                  type_url:
                    type: string
                  value:
                    format: byte
                    type: string
                type: object
                description: evidence returns the requested evidence.
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Evidence queries evidence based on evidence hash.
      tags:
        - Query
  /cosmos/feegrant/v1beta1/allowance/{granter}/{grantee}:
    get:
      operationId: Allowance
      parameters:
        - description: >-
            granter is the address of the user granting an allowance of their
            funds.
          in: path
          name: granter
          required: true
          type: string
        - description: >-
            grantee is the address of the user being granted an allowance of
            another user's funds.
          in: path
          name: grantee
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryAllowanceResponse is the response type for the
              Query/Allowance RPC method.
            properties:
              allowance:
                description: allowance is a allowance granted for grantee by granter.
                properties:
                  allowance:
                    properties:
                      type_url:
                        type: string
                      value:
                        format: byte
                        type: string
                    type: object
                    description: >-
                      allowance can be any of basic, periodic, allowed fee
                      allowance.
                  grantee:
                    description: >-
                      grantee is the address of the user being granted an
                      allowance of another user's funds.
                    type: string
                  granter:
                    description: >-
                      granter is the address of the user granting an allowance
                      of their funds.
                    type: string
                title: >-
                  Grant is stored in the KVStore to record a grant with full
                  context
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Allowance returns granted allwance to the grantee by the granter.
      tags:
        - Query
  /cosmos/feegrant/v1beta1/allowances/{grantee}:
    get:
      operationId: Allowances
      parameters:
        - in: path
          name: grantee
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryAllowancesResponse is the response type for the
              Query/Allowances RPC method.
            properties:
              allowances:
                description: allowances are allowance's granted for grantee by granter.
                items:
                  properties:
                    allowance:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                      description: >-
                        allowance can be any of basic, periodic, allowed fee
                        allowance.
                    grantee:
                      description: >-
                        grantee is the address of the user being granted an
                        allowance of another user's funds.
                      type: string
                    granter:
                      description: >-
                        granter is the address of the user granting an allowance
                        of their funds.
                      type: string
                  title: >-
                    Grant is stored in the KVStore to record a grant with full
                    context
                  type: object
                type: array
              pagination:
                description: pagination defines an pagination for the response.
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Allowances returns all the grants for the given grantee address.
      tags:
        - Query
  /cosmos/feegrant/v1beta1/issued/{granter}:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: AllowancesByGranter
      parameters:
        - in: path
          name: granter
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryAllowancesByGranterResponse is the response type for the
              Query/AllowancesByGranter RPC method.


              Since: cosmos-sdk 0.46
            properties:
              allowances:
                description: allowances that have been issued by the granter.
                items:
                  properties:
                    allowance:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                      description: >-
                        allowance can be any of basic, periodic, allowed fee
                        allowance.
                    grantee:
                      description: >-
                        grantee is the address of the user being granted an
                        allowance of another user's funds.
                      type: string
                    granter:
                      description: >-
                        granter is the address of the user granting an allowance
                        of their funds.
                      type: string
                  title: >-
                    Grant is stored in the KVStore to record a grant with full
                    context
                  type: object
                type: array
              pagination:
                description: pagination defines an pagination for the response.
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: AllowancesByGranter returns all the grants given by an address
      tags:
        - Query
  /cosmos/nft/v1beta1/balance/{owner}/{class_id}:
    get:
      operationId: Balance
      parameters:
        - description: owner is the owner address of the nft
          in: path
          name: owner
          required: true
          type: string
        - description: class_id associated with the nft
          in: path
          name: class_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              amount:
                format: uint64
                title: >-
                  amount is the number of all NFTs of a given class owned by the
                  owner
                type: string
            title: >-
              QueryBalanceResponse is the response type for the Query/Balance
              RPC method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        Balance queries the number of NFTs of a given class owned by the owner,
        same as balanceOf in ERC721
      tags:
        - Query
  /cosmos/nft/v1beta1/classes:
    get:
      operationId: Classes
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              classes:
                description: class defines the class of the nft type.
                items:
                  description: Class defines the class of the nft type.
                  properties:
                    data:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                      title: >-
                        data is the app specific metadata of the NFT class.
                        Optional
                    description:
                      title: >-
                        description is a brief description of nft
                        classification. Optional
                      type: string
                    id:
                      title: >-
                        id defines the unique identifier of the NFT
                        classification, similar to the contract address of
                        ERC721
                      type: string
                    name:
                      title: >-
                        name defines the human-readable name of the NFT
                        classification. Optional
                      type: string
                    symbol:
                      title: >-
                        symbol is an abbreviated name for nft classification.
                        Optional
                      type: string
                    uri:
                      title: >-
                        uri for the class metadata stored off chain. It can
                        define schema for Class and NFT `Data` attributes.
                        Optional
                      type: string
                    uri_hash:
                      title: >-
                        uri_hash is a hash of the document pointed by uri.
                        Optional
                      type: string
                  type: object
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            title: >-
              QueryClassesResponse is the response type for the Query/Classes
              RPC method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Classes queries all NFT classes
      tags:
        - Query
  /cosmos/nft/v1beta1/classes/{class_id}:
    get:
      operationId: Class
      parameters:
        - description: class_id associated with the nft
          in: path
          name: class_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              class:
                description: class defines the class of the nft type.
                properties:
                  data:
                    properties:
                      type_url:
                        type: string
                      value:
                        format: byte
                        type: string
                    type: object
                    title: >-
                      data is the app specific metadata of the NFT class.
                      Optional
                  description:
                    title: >-
                      description is a brief description of nft classification.
                      Optional
                    type: string
                  id:
                    title: >-
                      id defines the unique identifier of the NFT
                      classification, similar to the contract address of ERC721
                    type: string
                  name:
                    title: >-
                      name defines the human-readable name of the NFT
                      classification. Optional
                    type: string
                  symbol:
                    title: >-
                      symbol is an abbreviated name for nft classification.
                      Optional
                    type: string
                  uri:
                    title: >-
                      uri for the class metadata stored off chain. It can define
                      schema for Class and NFT `Data` attributes. Optional
                    type: string
                  uri_hash:
                    title: >-
                      uri_hash is a hash of the document pointed by uri.
                      Optional
                    type: string
                type: object
            title: >-
              QueryClassResponse is the response type for the Query/Class RPC
              method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Class queries an NFT class based on its id
      tags:
        - Query
  /cosmos/nft/v1beta1/nfts:
    get:
      operationId: NFTs
      parameters:
        - description: class_id associated with the nft.
          in: query
          name: class_id
          required: false
          type: string
        - description: owner is the owner address of the nft.
          in: query
          name: owner
          required: false
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              nfts:
                items:
                  description: NFT defines the NFT.
                  properties:
                    class_id:
                      title: >-
                        class_id associated with the NFT, similar to the
                        contract address of ERC721
                      type: string
                    data:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                      title: data is an app specific data of the NFT. Optional
                    id:
                      title: id is a unique identifier of the NFT
                      type: string
                    uri:
                      title: uri for the NFT metadata stored off chain
                      type: string
                    uri_hash:
                      title: uri_hash is a hash of the document pointed by uri
                      type: string
                  type: object
                title: NFT defines the NFT
                type: array
              pagination:
                description: pagination defines the pagination in the response.
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            title: >-
              QueryNFTsResponse is the response type for the Query/NFTs RPC
              methods
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        NFTs queries all NFTs of a given class or owner,choose at least one of
        the two, similar to tokenByIndex in

        ERC721Enumerable
      tags:
        - Query
  /cosmos/nft/v1beta1/nfts/{class_id}/{id}:
    get:
      operationId: NFT
      parameters:
        - description: class_id associated with the nft
          in: path
          name: class_id
          required: true
          type: string
        - description: id is a unique identifier of the NFT
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              nft:
                title: owner is the owner address of the nft
                description: NFT defines the NFT.
                properties:
                  class_id:
                    title: >-
                      class_id associated with the NFT, similar to the contract
                      address of ERC721
                    type: string
                  data:
                    properties:
                      type_url:
                        type: string
                      value:
                        format: byte
                        type: string
                    type: object
                    title: data is an app specific data of the NFT. Optional
                  id:
                    title: id is a unique identifier of the NFT
                    type: string
                  uri:
                    title: uri for the NFT metadata stored off chain
                    type: string
                  uri_hash:
                    title: uri_hash is a hash of the document pointed by uri
                    type: string
                type: object
            title: QueryNFTResponse is the response type for the Query/NFT RPC method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: NFT queries an NFT based on its class and id.
      tags:
        - Query
  /cosmos/nft/v1beta1/owner/{class_id}/{id}:
    get:
      operationId: Owner
      parameters:
        - description: class_id associated with the nft
          in: path
          name: class_id
          required: true
          type: string
        - description: id is a unique identifier of the NFT
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              owner:
                title: owner is the owner address of the nft
                type: string
            title: >-
              QueryOwnerResponse is the response type for the Query/Owner RPC
              method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        Owner queries the owner of the NFT based on its class and id, same as
        ownerOf in ERC721
      tags:
        - Query
  /cosmos/nft/v1beta1/supply/{class_id}:
    get:
      operationId: Supply
      parameters:
        - description: class_id associated with the nft
          in: path
          name: class_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              amount:
                format: uint64
                title: amount is the number of all NFTs from the given class
                type: string
            title: >-
              QuerySupplyResponse is the response type for the Query/Supply RPC
              method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        Supply queries the number of NFTs from the given class, same as
        totalSupply of ERC721.
      tags:
        - Query
  /cosmos/params/v1beta1/params:
    get:
      operationId: Params
      parameters:
        - description: subspace defines the module to query the parameter for.
          in: query
          name: subspace
          required: false
          type: string
        - description: key defines the key of the parameter in the subspace.
          in: query
          name: key
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
            properties:
              param:
                description: param defines the queried parameter.
                properties:
                  key:
                    type: string
                  subspace:
                    type: string
                  value:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: |-
        Params queries a specific parameter of a module, given its subspace and
        key.
      tags:
        - Query
  /cosmos/params/v1beta1/subspaces:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: Subspaces
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QuerySubspacesResponse defines the response types for querying for
              all

              registered subspaces and all keys for a subspace.


              Since: cosmos-sdk 0.46
            properties:
              subspaces:
                items:
                  description: >-
                    Subspace defines a parameter subspace name and all the keys
                    that exist for

                    the subspace.


                    Since: cosmos-sdk 0.46
                  properties:
                    keys:
                      items:
                        type: string
                      type: array
                    subspace:
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        Subspaces queries for all registered subspaces and all keys for a
        subspace.
      tags:
        - Query
  /cosmos/slashing/v1beta1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              params:
                description: >-
                  Params represents the parameters used for by the slashing
                  module.
                properties:
                  downtime_jail_duration:
                    type: string
                  min_signed_per_window:
                    format: byte
                    type: string
                  signed_blocks_window:
                    format: int64
                    type: string
                  slash_fraction_double_sign:
                    format: byte
                    type: string
                  slash_fraction_downtime:
                    format: byte
                    type: string
                type: object
            title: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params queries the parameters of slashing module
      tags:
        - Query
  /cosmos/slashing/v1beta1/signing_infos:
    get:
      operationId: SigningInfos
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              info:
                items:
                  description: >-
                    ValidatorSigningInfo defines a validator's signing info for
                    monitoring their

                    liveness activity.
                  properties:
                    address:
                      type: string
                    index_offset:
                      description: >-
                        Index which is incremented every time a validator is
                        bonded in a block and

                        _may_ have signed a pre-commit or not. This in
                        conjunction with the

                        signed_blocks_window param determines the index in the
                        missed block bitmap.
                      format: int64
                      type: string
                    jailed_until:
                      description: >-
                        Timestamp until which the validator is jailed due to
                        liveness downtime.
                      format: date-time
                      type: string
                    missed_blocks_counter:
                      description: >-
                        A counter of missed (unsigned) blocks. It is used to
                        avoid unnecessary

                        reads in the missed block bitmap.
                      format: int64
                      type: string
                    start_height:
                      format: int64
                      title: >-
                        Height at which validator was first a candidate OR was
                        un-jailed
                      type: string
                    tombstoned:
                      description: >-
                        Whether or not a validator has been tombstoned (killed
                        out of validator

                        set). It is set once the validator commits an
                        equivocation or for any other

                        configured misbehavior.
                      type: boolean
                  type: object
                title: info is the signing info of all validators
                type: array
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            title: >-
              QuerySigningInfosResponse is the response type for the
              Query/SigningInfos RPC

              method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: SigningInfos queries signing info of all validators
      tags:
        - Query
  /cosmos/slashing/v1beta1/signing_infos/{cons_address}:
    get:
      operationId: SigningInfo
      parameters:
        - description: cons_address is the address to query signing info of
          in: path
          name: cons_address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              val_signing_info:
                title: >-
                  val_signing_info is the signing info of requested val cons
                  address
                description: >-
                  ValidatorSigningInfo defines a validator's signing info for
                  monitoring their

                  liveness activity.
                properties:
                  address:
                    type: string
                  index_offset:
                    description: >-
                      Index which is incremented every time a validator is
                      bonded in a block and

                      _may_ have signed a pre-commit or not. This in conjunction
                      with the

                      signed_blocks_window param determines the index in the
                      missed block bitmap.
                    format: int64
                    type: string
                  jailed_until:
                    description: >-
                      Timestamp until which the validator is jailed due to
                      liveness downtime.
                    format: date-time
                    type: string
                  missed_blocks_counter:
                    description: >-
                      A counter of missed (unsigned) blocks. It is used to avoid
                      unnecessary

                      reads in the missed block bitmap.
                    format: int64
                    type: string
                  start_height:
                    format: int64
                    title: >-
                      Height at which validator was first a candidate OR was
                      un-jailed
                    type: string
                  tombstoned:
                    description: >-
                      Whether or not a validator has been tombstoned (killed out
                      of validator

                      set). It is set once the validator commits an equivocation
                      or for any other

                      configured misbehavior.
                    type: boolean
                type: object
            title: >-
              QuerySigningInfoResponse is the response type for the
              Query/SigningInfo RPC

              method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: SigningInfo queries the signing info of given cons address
      tags:
        - Query
  /cosmos/tx/v1beta1/decode:
    post:
      description: 'Since: cosmos-sdk 0.47'
      operationId: TxDecode
      parameters:
        - in: body
          name: body
          required: true
          schema:
            description: |-
              TxDecodeRequest is the request type for the Service.TxDecode
              RPC method.

              Since: cosmos-sdk 0.47
            properties:
              tx_bytes:
                description: tx_bytes is the raw transaction.
                format: byte
                type: string
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: |-
              TxDecodeResponse is the response type for the
              Service.TxDecode method.

              Since: cosmos-sdk 0.47
            properties:
              tx:
                description: Tx is the standard type used for broadcasting transactions.
                properties:
                  auth_info:
                    title: >-
                      auth_info is the authorization related content of the
                      transaction,

                      specifically signers, signer modes and fee
                    description: >-
                      AuthInfo describes the fee and signer modes that are used
                      to sign a

                      transaction.
                    properties:
                      fee:
                        description: >-
                          Fee is the fee and gas limit for the transaction. The
                          first signer is the

                          primary signer and the one which pays the fee. The fee
                          can be calculated

                          based on the cost of evaluating the body and doing
                          signature verification

                          of the signers. This can be estimated via simulation.
                        properties:
                          amount:
                            items:
                              description: >-
                                Coin defines a token with a denomination and an
                                amount.


                                NOTE: The amount field is an Int which
                                implements the custom method

                                signatures required by gogoproto.
                              properties:
                                amount:
                                  type: string
                                denom:
                                  type: string
                              type: object
                            title: amount is the amount of coins to be paid as a fee
                            type: array
                          gas_limit:
                            format: uint64
                            title: >-
                              gas_limit is the maximum gas that can be used in
                              transaction processing

                              before an out of gas error occurs
                            type: string
                          granter:
                            title: >-
                              if set, the fee payer (either the first signer or
                              the value of the payer field) requests that a fee
                              grant be used

                              to pay fees instead of the fee payer's own
                              balance. If an appropriate fee grant does not
                              exist or the chain does

                              not support fee grants, this will fail
                            type: string
                          payer:
                            description: >-
                              if unset, the first signer is responsible for
                              paying the fees. If set, the specified account
                              must pay the fees.

                              the payer must be a tx signer (and thus have
                              signed this field in AuthInfo).

                              setting this field does *not* change the ordering
                              of required signers for the transaction.
                            type: string
                        type: object
                      signer_infos:
                        description: >-
                          signer_infos defines the signing modes for the
                          required signers. The number

                          and order of elements must match the required signers
                          from TxBody's

                          messages. The first element is the primary signer and
                          the one which pays

                          the fee.
                        items:
                          description: >-
                            SignerInfo describes the public key and signing mode
                            of a single top-level

                            signer.
                          properties:
                            mode_info:
                              title: >-
                                mode_info describes the signing mode of the
                                signer and is a nested

                                structure to support nested multisig pubkey's
                              description: >-
                                ModeInfo describes the signing mode of a single
                                or nested multisig signer.
                              properties:
                                multi:
                                  title: multi represents a nested multisig signer
                                  properties:
                                    bitarray:
                                      title: >-
                                        bitarray specifies which keys within the
                                        multisig are signing
                                      description: >-
                                        CompactBitArray is an implementation of
                                        a space efficient bit array.

                                        This is used to ensure that the encoded
                                        data takes up a minimal amount of

                                        space after proto encoding.

                                        This is not thread safe, and is not
                                        intended for concurrent usage.
                                      properties:
                                        elems:
                                          format: byte
                                          type: string
                                        extra_bits_stored:
                                          format: int64
                                          type: integer
                                      type: object
                                    mode_infos:
                                      items: {}
                                      title: >-
                                        mode_infos is the corresponding modes of
                                        the signers of the multisig

                                        which could include nested multisig
                                        public keys
                                      type: array
                                  type: object
                                single:
                                  title: single represents a single signer
                                  properties:
                                    mode:
                                      title: >-
                                        mode is the signing mode of the single
                                        signer
                                      default: SIGN_MODE_UNSPECIFIED
                                      description: >-
                                        SignMode represents a signing mode with
                                        its own security guarantees.


                                        This enum should be considered a
                                        registry of all known sign modes

                                        in the Cosmos ecosystem. Apps are not
                                        expected to support all known

                                        sign modes. Apps that would like to
                                        support custom  sign modes are

                                        encouraged to open a small PR against
                                        this file to add a new case

                                        to this SignMode enum describing their
                                        sign mode so that different

                                        apps have a consistent version of this
                                        enum.

                                         - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                        rejected.
                                         - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                        verified with raw bytes from Tx.
                                         - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                        human-readable textual representation on
                                        top of the binary representation

                                        from SIGN_MODE_DIRECT.


                                        Since: cosmos-sdk 0.50
                                         - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                                        SignDocDirectAux. As opposed to
                                        SIGN_MODE_DIRECT, this sign mode does
                                        not

                                        require signers signing over other
                                        signers' `signer_info`.


                                        Since: cosmos-sdk 0.46
                                         - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                        Amino JSON and will be removed in the
                                        future.
                                         - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                        SDK. Ref:
                                        https://eips.ethereum.org/EIPS/eip-191


                                        Currently, SIGN_MODE_EIP_191 is
                                        registered as a SignMode enum variant,

                                        but is not implemented on the SDK by
                                        default. To enable EIP-191, you need

                                        to pass a custom `TxConfig` that has an
                                        implementation of

                                        `SignModeHandler` for EIP-191. The SDK
                                        may decide to fully support

                                        EIP-191 in the future.


                                        Since: cosmos-sdk 0.45.2
                                      enum:
                                        - SIGN_MODE_UNSPECIFIED
                                        - SIGN_MODE_DIRECT
                                        - SIGN_MODE_TEXTUAL
                                        - SIGN_MODE_DIRECT_AUX
                                        - SIGN_MODE_LEGACY_AMINO_JSON
                                        - SIGN_MODE_EIP_191
                                      type: string
                                  type: object
                              type: object
                            public_key:
                              properties:
                                type_url:
                                  type: string
                                value:
                                  format: byte
                                  type: string
                              type: object
                              description: >-
                                public_key is the public key of the signer. It
                                is optional for accounts

                                that already exist in state. If unset, the
                                verifier can use the required \

                                signer address for this position and lookup the
                                public key.
                            sequence:
                              description: >-
                                sequence is the sequence of the account, which
                                describes the

                                number of committed transactions signed by a
                                given address. It is used to

                                prevent replay attacks.
                              format: uint64
                              type: string
                          type: object
                        type: array
                      tip:
                        description: >-
                          Tip is the optional tip used for transactions fees
                          paid in another denom.


                          This field is ignored if the chain didn't enable tips,
                          i.e. didn't add the

                          `TipDecorator` in its posthandler.


                          Since: cosmos-sdk 0.46
                        properties:
                          amount:
                            items:
                              description: >-
                                Coin defines a token with a denomination and an
                                amount.


                                NOTE: The amount field is an Int which
                                implements the custom method

                                signatures required by gogoproto.
                              properties:
                                amount:
                                  type: string
                                denom:
                                  type: string
                              type: object
                            title: amount is the amount of the tip
                            type: array
                          tipper:
                            title: >-
                              tipper is the address of the account paying for
                              the tip
                            type: string
                        type: object
                    type: object
                  body:
                    title: body is the processable content of the transaction
                    description: >-
                      TxBody is the body of a transaction that all signers sign
                      over.
                    properties:
                      extension_options:
                        items:
                          properties:
                            type_url:
                              type: string
                            value:
                              format: byte
                              type: string
                          type: object
                        title: >-
                          extension_options are arbitrary options that can be
                          added by chains

                          when the default options are not sufficient. If any of
                          these are present

                          and can't be handled, the transaction will be rejected
                        type: array
                      memo:
                        description: >-
                          memo is any arbitrary note/comment to be added to the
                          transaction.

                          WARNING: in clients, any publicly exposed text should
                          not be called memo,

                          but should be called `note` instead (see
                          https://github.com/cosmos/cosmos-sdk/issues/9122).
                        type: string
                      messages:
                        description: >-
                          messages is a list of messages to be executed. The
                          required signers of

                          those messages define the number and order of elements
                          in AuthInfo's

                          signer_infos and Tx's signatures. Each required signer
                          address is added to

                          the list only the first time it occurs.

                          By convention, the first required signer (usually from
                          the first message)

                          is referred to as the primary signer and pays the fee
                          for the whole

                          transaction.
                        items:
                          properties:
                            type_url:
                              type: string
                            value:
                              format: byte
                              type: string
                          type: object
                        type: array
                      non_critical_extension_options:
                        items:
                          properties:
                            type_url:
                              type: string
                            value:
                              format: byte
                              type: string
                          type: object
                        title: >-
                          extension_options are arbitrary options that can be
                          added by chains

                          when the default options are not sufficient. If any of
                          these are present

                          and can't be handled, they will be ignored
                        type: array
                      timeout_height:
                        format: uint64
                        title: >-
                          timeout is the block height after which this
                          transaction will not

                          be processed by the chain
                        type: string
                    type: object
                  signatures:
                    description: >-
                      signatures is a list of signatures that matches the length
                      and order of

                      AuthInfo's signer_infos to allow connecting signature meta
                      information like

                      public key and signing mode by position.
                    items:
                      format: byte
                      type: string
                    type: array
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: TxDecode decodes the transaction.
      tags:
        - Service
  /cosmos/tx/v1beta1/decode/amino:
    post:
      description: 'Since: cosmos-sdk 0.47'
      operationId: TxDecodeAmino
      parameters:
        - in: body
          name: body
          required: true
          schema:
            description: >-
              TxDecodeAminoRequest is the request type for the
              Service.TxDecodeAmino

              RPC method.


              Since: cosmos-sdk 0.47
            properties:
              amino_binary:
                format: byte
                type: string
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              TxDecodeAminoResponse is the response type for the
              Service.TxDecodeAmino

              RPC method.


              Since: cosmos-sdk 0.47
            properties:
              amino_json:
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: TxDecodeAmino decodes an Amino transaction from encoded bytes to JSON.
      tags:
        - Service
  /cosmos/tx/v1beta1/encode:
    post:
      description: 'Since: cosmos-sdk 0.47'
      operationId: TxEncode
      parameters:
        - in: body
          name: body
          required: true
          schema:
            description: |-
              TxEncodeRequest is the request type for the Service.TxEncode
              RPC method.

              Since: cosmos-sdk 0.47
            properties:
              tx:
                description: Tx is the standard type used for broadcasting transactions.
                properties:
                  auth_info:
                    title: >-
                      auth_info is the authorization related content of the
                      transaction,

                      specifically signers, signer modes and fee
                    description: >-
                      AuthInfo describes the fee and signer modes that are used
                      to sign a

                      transaction.
                    properties:
                      fee:
                        description: >-
                          Fee is the fee and gas limit for the transaction. The
                          first signer is the

                          primary signer and the one which pays the fee. The fee
                          can be calculated

                          based on the cost of evaluating the body and doing
                          signature verification

                          of the signers. This can be estimated via simulation.
                        properties:
                          amount:
                            items:
                              description: >-
                                Coin defines a token with a denomination and an
                                amount.


                                NOTE: The amount field is an Int which
                                implements the custom method

                                signatures required by gogoproto.
                              properties:
                                amount:
                                  type: string
                                denom:
                                  type: string
                              type: object
                            title: amount is the amount of coins to be paid as a fee
                            type: array
                          gas_limit:
                            format: uint64
                            title: >-
                              gas_limit is the maximum gas that can be used in
                              transaction processing

                              before an out of gas error occurs
                            type: string
                          granter:
                            title: >-
                              if set, the fee payer (either the first signer or
                              the value of the payer field) requests that a fee
                              grant be used

                              to pay fees instead of the fee payer's own
                              balance. If an appropriate fee grant does not
                              exist or the chain does

                              not support fee grants, this will fail
                            type: string
                          payer:
                            description: >-
                              if unset, the first signer is responsible for
                              paying the fees. If set, the specified account
                              must pay the fees.

                              the payer must be a tx signer (and thus have
                              signed this field in AuthInfo).

                              setting this field does *not* change the ordering
                              of required signers for the transaction.
                            type: string
                        type: object
                      signer_infos:
                        description: >-
                          signer_infos defines the signing modes for the
                          required signers. The number

                          and order of elements must match the required signers
                          from TxBody's

                          messages. The first element is the primary signer and
                          the one which pays

                          the fee.
                        items:
                          description: >-
                            SignerInfo describes the public key and signing mode
                            of a single top-level

                            signer.
                          properties:
                            mode_info:
                              title: >-
                                mode_info describes the signing mode of the
                                signer and is a nested

                                structure to support nested multisig pubkey's
                              description: >-
                                ModeInfo describes the signing mode of a single
                                or nested multisig signer.
                              properties:
                                multi:
                                  title: multi represents a nested multisig signer
                                  properties:
                                    bitarray:
                                      title: >-
                                        bitarray specifies which keys within the
                                        multisig are signing
                                      description: >-
                                        CompactBitArray is an implementation of
                                        a space efficient bit array.

                                        This is used to ensure that the encoded
                                        data takes up a minimal amount of

                                        space after proto encoding.

                                        This is not thread safe, and is not
                                        intended for concurrent usage.
                                      properties:
                                        elems:
                                          format: byte
                                          type: string
                                        extra_bits_stored:
                                          format: int64
                                          type: integer
                                      type: object
                                    mode_infos:
                                      items: {}
                                      title: >-
                                        mode_infos is the corresponding modes of
                                        the signers of the multisig

                                        which could include nested multisig
                                        public keys
                                      type: array
                                  type: object
                                single:
                                  title: single represents a single signer
                                  properties:
                                    mode:
                                      title: >-
                                        mode is the signing mode of the single
                                        signer
                                      default: SIGN_MODE_UNSPECIFIED
                                      description: >-
                                        SignMode represents a signing mode with
                                        its own security guarantees.


                                        This enum should be considered a
                                        registry of all known sign modes

                                        in the Cosmos ecosystem. Apps are not
                                        expected to support all known

                                        sign modes. Apps that would like to
                                        support custom  sign modes are

                                        encouraged to open a small PR against
                                        this file to add a new case

                                        to this SignMode enum describing their
                                        sign mode so that different

                                        apps have a consistent version of this
                                        enum.

                                         - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                        rejected.
                                         - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                        verified with raw bytes from Tx.
                                         - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                        human-readable textual representation on
                                        top of the binary representation

                                        from SIGN_MODE_DIRECT.


                                        Since: cosmos-sdk 0.50
                                         - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                                        SignDocDirectAux. As opposed to
                                        SIGN_MODE_DIRECT, this sign mode does
                                        not

                                        require signers signing over other
                                        signers' `signer_info`.


                                        Since: cosmos-sdk 0.46
                                         - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                        Amino JSON and will be removed in the
                                        future.
                                         - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                        SDK. Ref:
                                        https://eips.ethereum.org/EIPS/eip-191


                                        Currently, SIGN_MODE_EIP_191 is
                                        registered as a SignMode enum variant,

                                        but is not implemented on the SDK by
                                        default. To enable EIP-191, you need

                                        to pass a custom `TxConfig` that has an
                                        implementation of

                                        `SignModeHandler` for EIP-191. The SDK
                                        may decide to fully support

                                        EIP-191 in the future.


                                        Since: cosmos-sdk 0.45.2
                                      enum:
                                        - SIGN_MODE_UNSPECIFIED
                                        - SIGN_MODE_DIRECT
                                        - SIGN_MODE_TEXTUAL
                                        - SIGN_MODE_DIRECT_AUX
                                        - SIGN_MODE_LEGACY_AMINO_JSON
                                        - SIGN_MODE_EIP_191
                                      type: string
                                  type: object
                              type: object
                            public_key:
                              properties:
                                type_url:
                                  type: string
                                value:
                                  format: byte
                                  type: string
                              type: object
                              description: >-
                                public_key is the public key of the signer. It
                                is optional for accounts

                                that already exist in state. If unset, the
                                verifier can use the required \

                                signer address for this position and lookup the
                                public key.
                            sequence:
                              description: >-
                                sequence is the sequence of the account, which
                                describes the

                                number of committed transactions signed by a
                                given address. It is used to

                                prevent replay attacks.
                              format: uint64
                              type: string
                          type: object
                        type: array
                      tip:
                        description: >-
                          Tip is the optional tip used for transactions fees
                          paid in another denom.


                          This field is ignored if the chain didn't enable tips,
                          i.e. didn't add the

                          `TipDecorator` in its posthandler.


                          Since: cosmos-sdk 0.46
                        properties:
                          amount:
                            items:
                              description: >-
                                Coin defines a token with a denomination and an
                                amount.


                                NOTE: The amount field is an Int which
                                implements the custom method

                                signatures required by gogoproto.
                              properties:
                                amount:
                                  type: string
                                denom:
                                  type: string
                              type: object
                            title: amount is the amount of the tip
                            type: array
                          tipper:
                            title: >-
                              tipper is the address of the account paying for
                              the tip
                            type: string
                        type: object
                    type: object
                  body:
                    title: body is the processable content of the transaction
                    description: >-
                      TxBody is the body of a transaction that all signers sign
                      over.
                    properties:
                      extension_options:
                        items:
                          properties:
                            type_url:
                              type: string
                            value:
                              format: byte
                              type: string
                          type: object
                        title: >-
                          extension_options are arbitrary options that can be
                          added by chains

                          when the default options are not sufficient. If any of
                          these are present

                          and can't be handled, the transaction will be rejected
                        type: array
                      memo:
                        description: >-
                          memo is any arbitrary note/comment to be added to the
                          transaction.

                          WARNING: in clients, any publicly exposed text should
                          not be called memo,

                          but should be called `note` instead (see
                          https://github.com/cosmos/cosmos-sdk/issues/9122).
                        type: string
                      messages:
                        description: >-
                          messages is a list of messages to be executed. The
                          required signers of

                          those messages define the number and order of elements
                          in AuthInfo's

                          signer_infos and Tx's signatures. Each required signer
                          address is added to

                          the list only the first time it occurs.

                          By convention, the first required signer (usually from
                          the first message)

                          is referred to as the primary signer and pays the fee
                          for the whole

                          transaction.
                        items:
                          properties:
                            type_url:
                              type: string
                            value:
                              format: byte
                              type: string
                          type: object
                        type: array
                      non_critical_extension_options:
                        items:
                          properties:
                            type_url:
                              type: string
                            value:
                              format: byte
                              type: string
                          type: object
                        title: >-
                          extension_options are arbitrary options that can be
                          added by chains

                          when the default options are not sufficient. If any of
                          these are present

                          and can't be handled, they will be ignored
                        type: array
                      timeout_height:
                        format: uint64
                        title: >-
                          timeout is the block height after which this
                          transaction will not

                          be processed by the chain
                        type: string
                    type: object
                  signatures:
                    description: >-
                      signatures is a list of signatures that matches the length
                      and order of

                      AuthInfo's signer_infos to allow connecting signature meta
                      information like

                      public key and signing mode by position.
                    items:
                      format: byte
                      type: string
                    type: array
                type: object
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: |-
              TxEncodeResponse is the response type for the
              Service.TxEncode method.

              Since: cosmos-sdk 0.47
            properties:
              tx_bytes:
                description: tx_bytes is the encoded transaction bytes.
                format: byte
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: TxEncode encodes the transaction.
      tags:
        - Service
  /cosmos/tx/v1beta1/encode/amino:
    post:
      description: 'Since: cosmos-sdk 0.47'
      operationId: TxEncodeAmino
      parameters:
        - in: body
          name: body
          required: true
          schema:
            description: >-
              TxEncodeAminoRequest is the request type for the
              Service.TxEncodeAmino

              RPC method.


              Since: cosmos-sdk 0.47
            properties:
              amino_json:
                type: string
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              TxEncodeAminoResponse is the response type for the
              Service.TxEncodeAmino

              RPC method.


              Since: cosmos-sdk 0.47
            properties:
              amino_binary:
                format: byte
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: TxEncodeAmino encodes an Amino transaction from JSON to encoded bytes.
      tags:
        - Service
  /cosmos/tx/v1beta1/simulate:
    post:
      operationId: Simulate
      parameters:
        - in: body
          name: body
          required: true
          schema:
            description: |-
              SimulateRequest is the request type for the Service.Simulate
              RPC method.
            properties:
              tx:
                description: Tx is the standard type used for broadcasting transactions.
                properties:
                  auth_info:
                    title: >-
                      auth_info is the authorization related content of the
                      transaction,

                      specifically signers, signer modes and fee
                    description: >-
                      AuthInfo describes the fee and signer modes that are used
                      to sign a

                      transaction.
                    properties:
                      fee:
                        description: >-
                          Fee is the fee and gas limit for the transaction. The
                          first signer is the

                          primary signer and the one which pays the fee. The fee
                          can be calculated

                          based on the cost of evaluating the body and doing
                          signature verification

                          of the signers. This can be estimated via simulation.
                        properties:
                          amount:
                            items:
                              description: >-
                                Coin defines a token with a denomination and an
                                amount.


                                NOTE: The amount field is an Int which
                                implements the custom method

                                signatures required by gogoproto.
                              properties:
                                amount:
                                  type: string
                                denom:
                                  type: string
                              type: object
                            title: amount is the amount of coins to be paid as a fee
                            type: array
                          gas_limit:
                            format: uint64
                            title: >-
                              gas_limit is the maximum gas that can be used in
                              transaction processing

                              before an out of gas error occurs
                            type: string
                          granter:
                            title: >-
                              if set, the fee payer (either the first signer or
                              the value of the payer field) requests that a fee
                              grant be used

                              to pay fees instead of the fee payer's own
                              balance. If an appropriate fee grant does not
                              exist or the chain does

                              not support fee grants, this will fail
                            type: string
                          payer:
                            description: >-
                              if unset, the first signer is responsible for
                              paying the fees. If set, the specified account
                              must pay the fees.

                              the payer must be a tx signer (and thus have
                              signed this field in AuthInfo).

                              setting this field does *not* change the ordering
                              of required signers for the transaction.
                            type: string
                        type: object
                      signer_infos:
                        description: >-
                          signer_infos defines the signing modes for the
                          required signers. The number

                          and order of elements must match the required signers
                          from TxBody's

                          messages. The first element is the primary signer and
                          the one which pays

                          the fee.
                        items:
                          description: >-
                            SignerInfo describes the public key and signing mode
                            of a single top-level

                            signer.
                          properties:
                            mode_info:
                              title: >-
                                mode_info describes the signing mode of the
                                signer and is a nested

                                structure to support nested multisig pubkey's
                              description: >-
                                ModeInfo describes the signing mode of a single
                                or nested multisig signer.
                              properties:
                                multi:
                                  title: multi represents a nested multisig signer
                                  properties:
                                    bitarray:
                                      title: >-
                                        bitarray specifies which keys within the
                                        multisig are signing
                                      description: >-
                                        CompactBitArray is an implementation of
                                        a space efficient bit array.

                                        This is used to ensure that the encoded
                                        data takes up a minimal amount of

                                        space after proto encoding.

                                        This is not thread safe, and is not
                                        intended for concurrent usage.
                                      properties:
                                        elems:
                                          format: byte
                                          type: string
                                        extra_bits_stored:
                                          format: int64
                                          type: integer
                                      type: object
                                    mode_infos:
                                      items: {}
                                      title: >-
                                        mode_infos is the corresponding modes of
                                        the signers of the multisig

                                        which could include nested multisig
                                        public keys
                                      type: array
                                  type: object
                                single:
                                  title: single represents a single signer
                                  properties:
                                    mode:
                                      title: >-
                                        mode is the signing mode of the single
                                        signer
                                      default: SIGN_MODE_UNSPECIFIED
                                      description: >-
                                        SignMode represents a signing mode with
                                        its own security guarantees.


                                        This enum should be considered a
                                        registry of all known sign modes

                                        in the Cosmos ecosystem. Apps are not
                                        expected to support all known

                                        sign modes. Apps that would like to
                                        support custom  sign modes are

                                        encouraged to open a small PR against
                                        this file to add a new case

                                        to this SignMode enum describing their
                                        sign mode so that different

                                        apps have a consistent version of this
                                        enum.

                                         - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                        rejected.
                                         - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                        verified with raw bytes from Tx.
                                         - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                        human-readable textual representation on
                                        top of the binary representation

                                        from SIGN_MODE_DIRECT.


                                        Since: cosmos-sdk 0.50
                                         - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                                        SignDocDirectAux. As opposed to
                                        SIGN_MODE_DIRECT, this sign mode does
                                        not

                                        require signers signing over other
                                        signers' `signer_info`.


                                        Since: cosmos-sdk 0.46
                                         - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                        Amino JSON and will be removed in the
                                        future.
                                         - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                        SDK. Ref:
                                        https://eips.ethereum.org/EIPS/eip-191


                                        Currently, SIGN_MODE_EIP_191 is
                                        registered as a SignMode enum variant,

                                        but is not implemented on the SDK by
                                        default. To enable EIP-191, you need

                                        to pass a custom `TxConfig` that has an
                                        implementation of

                                        `SignModeHandler` for EIP-191. The SDK
                                        may decide to fully support

                                        EIP-191 in the future.


                                        Since: cosmos-sdk 0.45.2
                                      enum:
                                        - SIGN_MODE_UNSPECIFIED
                                        - SIGN_MODE_DIRECT
                                        - SIGN_MODE_TEXTUAL
                                        - SIGN_MODE_DIRECT_AUX
                                        - SIGN_MODE_LEGACY_AMINO_JSON
                                        - SIGN_MODE_EIP_191
                                      type: string
                                  type: object
                              type: object
                            public_key:
                              properties:
                                type_url:
                                  type: string
                                value:
                                  format: byte
                                  type: string
                              type: object
                              description: >-
                                public_key is the public key of the signer. It
                                is optional for accounts

                                that already exist in state. If unset, the
                                verifier can use the required \

                                signer address for this position and lookup the
                                public key.
                            sequence:
                              description: >-
                                sequence is the sequence of the account, which
                                describes the

                                number of committed transactions signed by a
                                given address. It is used to

                                prevent replay attacks.
                              format: uint64
                              type: string
                          type: object
                        type: array
                      tip:
                        description: >-
                          Tip is the optional tip used for transactions fees
                          paid in another denom.


                          This field is ignored if the chain didn't enable tips,
                          i.e. didn't add the

                          `TipDecorator` in its posthandler.


                          Since: cosmos-sdk 0.46
                        properties:
                          amount:
                            items:
                              description: >-
                                Coin defines a token with a denomination and an
                                amount.


                                NOTE: The amount field is an Int which
                                implements the custom method

                                signatures required by gogoproto.
                              properties:
                                amount:
                                  type: string
                                denom:
                                  type: string
                              type: object
                            title: amount is the amount of the tip
                            type: array
                          tipper:
                            title: >-
                              tipper is the address of the account paying for
                              the tip
                            type: string
                        type: object
                    type: object
                  body:
                    title: body is the processable content of the transaction
                    description: >-
                      TxBody is the body of a transaction that all signers sign
                      over.
                    properties:
                      extension_options:
                        items:
                          properties:
                            type_url:
                              type: string
                            value:
                              format: byte
                              type: string
                          type: object
                        title: >-
                          extension_options are arbitrary options that can be
                          added by chains

                          when the default options are not sufficient. If any of
                          these are present

                          and can't be handled, the transaction will be rejected
                        type: array
                      memo:
                        description: >-
                          memo is any arbitrary note/comment to be added to the
                          transaction.

                          WARNING: in clients, any publicly exposed text should
                          not be called memo,

                          but should be called `note` instead (see
                          https://github.com/cosmos/cosmos-sdk/issues/9122).
                        type: string
                      messages:
                        description: >-
                          messages is a list of messages to be executed. The
                          required signers of

                          those messages define the number and order of elements
                          in AuthInfo's

                          signer_infos and Tx's signatures. Each required signer
                          address is added to

                          the list only the first time it occurs.

                          By convention, the first required signer (usually from
                          the first message)

                          is referred to as the primary signer and pays the fee
                          for the whole

                          transaction.
                        items:
                          properties:
                            type_url:
                              type: string
                            value:
                              format: byte
                              type: string
                          type: object
                        type: array
                      non_critical_extension_options:
                        items:
                          properties:
                            type_url:
                              type: string
                            value:
                              format: byte
                              type: string
                          type: object
                        title: >-
                          extension_options are arbitrary options that can be
                          added by chains

                          when the default options are not sufficient. If any of
                          these are present

                          and can't be handled, they will be ignored
                        type: array
                      timeout_height:
                        format: uint64
                        title: >-
                          timeout is the block height after which this
                          transaction will not

                          be processed by the chain
                        type: string
                    type: object
                  signatures:
                    description: >-
                      signatures is a list of signatures that matches the length
                      and order of

                      AuthInfo's signer_infos to allow connecting signature meta
                      information like

                      public key and signing mode by position.
                    items:
                      format: byte
                      type: string
                    type: array
                type: object
              tx_bytes:
                description: |-
                  tx_bytes is the raw transaction.

                  Since: cosmos-sdk 0.43
                format: byte
                type: string
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: |-
              SimulateResponse is the response type for the
              Service.SimulateRPC method.
            properties:
              gas_info:
                description: gas_info is the information about gas used in the simulation.
                properties:
                  gas_used:
                    description: GasUsed is the amount of gas actually consumed.
                    format: uint64
                    type: string
                  gas_wanted:
                    description: >-
                      GasWanted is the maximum units of work we allow this tx to
                      perform.
                    format: uint64
                    type: string
                type: object
              result:
                description: result is the result of the simulation.
                properties:
                  data:
                    description: >-
                      Data is any data returned from message or handler
                      execution. It MUST be

                      length prefixed in order to separate data from multiple
                      message executions.

                      Deprecated. This field is still populated, but prefer
                      msg_response instead

                      because it also contains the Msg response typeURL.
                    format: byte
                    type: string
                  events:
                    description: >-
                      Events contains a slice of Event objects that were emitted
                      during message

                      or handler execution.
                    items:
                      description: >-
                        Event allows application developers to attach additional
                        information to

                        ResponseFinalizeBlock and ResponseCheckTx.

                        Later, transactions may be queried using these events.
                      properties:
                        attributes:
                          items:
                            description: >-
                              EventAttribute is a single key-value pair,
                              associated with an event.
                            properties:
                              index:
                                type: boolean
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        type:
                          type: string
                      type: object
                    type: array
                  log:
                    description: >-
                      Log contains the log information from message or handler
                      execution.
                    type: string
                  msg_responses:
                    description: >-
                      msg_responses contains the Msg handler responses type
                      packed in Anys.


                      Since: cosmos-sdk 0.46
                    items:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                    type: array
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Simulate simulates executing a transaction for estimating gas usage.
      tags:
        - Service
  /cosmos/tx/v1beta1/txs:
    get:
      operationId: GetTxsEvent
      parameters:
        - collectionFormat: multi
          description: >-
            events is the list of transaction event type.

            Deprecated post v0.47.x: use query instead, which should contain a
            valid

            events query.
          in: query
          items:
            type: string
          name: events
          required: false
          type: array
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
        - default: ORDER_BY_UNSPECIFIED
          description: |2-
             - ORDER_BY_UNSPECIFIED: ORDER_BY_UNSPECIFIED specifies an unknown sorting order. OrderBy defaults
            to ASC in this case.
             - ORDER_BY_ASC: ORDER_BY_ASC defines ascending order
             - ORDER_BY_DESC: ORDER_BY_DESC defines descending order
          enum:
            - ORDER_BY_UNSPECIFIED
            - ORDER_BY_ASC
            - ORDER_BY_DESC
          in: query
          name: order_by
          required: false
          type: string
        - description: |-
            page is the page number to query, starts at 1. If not provided, will
            default to first page.
          format: uint64
          in: query
          name: page
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: limit
          required: false
          type: string
        - description: >-
            query defines the transaction event query that is proxied to
            Tendermint's

            TxSearch RPC method. The query must be valid.


            Since cosmos-sdk 0.50
          in: query
          name: query
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              GetTxsEventResponse is the response type for the
              Service.TxsByEvents

              RPC method.
            properties:
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
              total:
                format: uint64
                title: total is total number of results available
                type: string
              tx_responses:
                description: tx_responses is the list of queried TxResponses.
                items:
                  description: >-
                    TxResponse defines a structure containing relevant tx data
                    and metadata. The

                    tags are stringified and the log is JSON decoded.
                  properties:
                    code:
                      description: Response code.
                      format: int64
                      type: integer
                    codespace:
                      title: Namespace for the Code
                      type: string
                    data:
                      description: Result bytes, if any.
                      type: string
                    events:
                      description: >-
                        Events defines all the events emitted by processing a
                        transaction. Note,

                        these events include those emitted by processing all the
                        messages and those

                        emitted from the ante. Whereas Logs contains the events,
                        with

                        additional metadata, emitted only by processing the
                        messages.


                        Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
                      items:
                        description: >-
                          Event allows application developers to attach
                          additional information to

                          ResponseFinalizeBlock and ResponseCheckTx.

                          Later, transactions may be queried using these events.
                        properties:
                          attributes:
                            items:
                              description: >-
                                EventAttribute is a single key-value pair,
                                associated with an event.
                              properties:
                                index:
                                  type: boolean
                                key:
                                  type: string
                                value:
                                  type: string
                              type: object
                            type: array
                          type:
                            type: string
                        type: object
                      type: array
                    gas_used:
                      description: Amount of gas consumed by transaction.
                      format: int64
                      type: string
                    gas_wanted:
                      description: Amount of gas requested for transaction.
                      format: int64
                      type: string
                    height:
                      format: int64
                      title: The block height
                      type: string
                    info:
                      description: Additional information. May be non-deterministic.
                      type: string
                    logs:
                      description: >-
                        The output of the application's logger (typed). May be
                        non-deterministic.
                      items:
                        description: >-
                          ABCIMessageLog defines a structure containing an
                          indexed tx ABCI message log.
                        properties:
                          events:
                            description: >-
                              Events contains a slice of Event objects that were
                              emitted during some

                              execution.
                            items:
                              description: >-
                                StringEvent defines en Event object wrapper
                                where all the attributes

                                contain key/value pairs that are strings instead
                                of raw bytes.
                              properties:
                                attributes:
                                  items:
                                    description: >-
                                      Attribute defines an attribute wrapper
                                      where the key and value are

                                      strings instead of raw bytes.
                                    properties:
                                      key:
                                        type: string
                                      value:
                                        type: string
                                    type: object
                                  type: array
                                type:
                                  type: string
                              type: object
                            type: array
                          log:
                            type: string
                          msg_index:
                            format: int64
                            type: integer
                        type: object
                      type: array
                    raw_log:
                      description: >-
                        The output of the application's logger (raw string). May
                        be

                        non-deterministic.
                      type: string
                    timestamp:
                      description: >-
                        Time of the previous block. For heights > 1, it's the
                        weighted median of

                        the timestamps of the valid votes in the
                        block.LastCommit. For height == 1,

                        it's genesis time.
                      type: string
                    tx:
                      properties:
                        type_url:
                          type: string
                        value:
                          format: byte
                          type: string
                      type: object
                      description: The request transaction bytes.
                    txhash:
                      description: The transaction hash.
                      type: string
                  type: object
                type: array
              txs:
                description: txs is the list of queried transactions.
                items:
                  description: Tx is the standard type used for broadcasting transactions.
                  properties:
                    auth_info:
                      title: >-
                        auth_info is the authorization related content of the
                        transaction,

                        specifically signers, signer modes and fee
                      description: >-
                        AuthInfo describes the fee and signer modes that are
                        used to sign a

                        transaction.
                      properties:
                        fee:
                          description: >-
                            Fee is the fee and gas limit for the transaction.
                            The first signer is the

                            primary signer and the one which pays the fee. The
                            fee can be calculated

                            based on the cost of evaluating the body and doing
                            signature verification

                            of the signers. This can be estimated via
                            simulation.
                          properties:
                            amount:
                              items:
                                description: >-
                                  Coin defines a token with a denomination and
                                  an amount.


                                  NOTE: The amount field is an Int which
                                  implements the custom method

                                  signatures required by gogoproto.
                                properties:
                                  amount:
                                    type: string
                                  denom:
                                    type: string
                                type: object
                              title: >-
                                amount is the amount of coins to be paid as a
                                fee
                              type: array
                            gas_limit:
                              format: uint64
                              title: >-
                                gas_limit is the maximum gas that can be used in
                                transaction processing

                                before an out of gas error occurs
                              type: string
                            granter:
                              title: >-
                                if set, the fee payer (either the first signer
                                or the value of the payer field) requests that a
                                fee grant be used

                                to pay fees instead of the fee payer's own
                                balance. If an appropriate fee grant does not
                                exist or the chain does

                                not support fee grants, this will fail
                              type: string
                            payer:
                              description: >-
                                if unset, the first signer is responsible for
                                paying the fees. If set, the specified account
                                must pay the fees.

                                the payer must be a tx signer (and thus have
                                signed this field in AuthInfo).

                                setting this field does *not* change the
                                ordering of required signers for the
                                transaction.
                              type: string
                          type: object
                        signer_infos:
                          description: >-
                            signer_infos defines the signing modes for the
                            required signers. The number

                            and order of elements must match the required
                            signers from TxBody's

                            messages. The first element is the primary signer
                            and the one which pays

                            the fee.
                          items:
                            description: >-
                              SignerInfo describes the public key and signing
                              mode of a single top-level

                              signer.
                            properties:
                              mode_info:
                                title: >-
                                  mode_info describes the signing mode of the
                                  signer and is a nested

                                  structure to support nested multisig pubkey's
                                description: >-
                                  ModeInfo describes the signing mode of a
                                  single or nested multisig signer.
                                properties:
                                  multi:
                                    title: multi represents a nested multisig signer
                                    properties:
                                      bitarray:
                                        title: >-
                                          bitarray specifies which keys within the
                                          multisig are signing
                                        description: >-
                                          CompactBitArray is an implementation of
                                          a space efficient bit array.

                                          This is used to ensure that the encoded
                                          data takes up a minimal amount of

                                          space after proto encoding.

                                          This is not thread safe, and is not
                                          intended for concurrent usage.
                                        properties:
                                          elems:
                                            format: byte
                                            type: string
                                          extra_bits_stored:
                                            format: int64
                                            type: integer
                                        type: object
                                      mode_infos:
                                        items: {}
                                        title: >-
                                          mode_infos is the corresponding modes of
                                          the signers of the multisig

                                          which could include nested multisig
                                          public keys
                                        type: array
                                    type: object
                                  single:
                                    title: single represents a single signer
                                    properties:
                                      mode:
                                        title: >-
                                          mode is the signing mode of the single
                                          signer
                                        default: SIGN_MODE_UNSPECIFIED
                                        description: >-
                                          SignMode represents a signing mode with
                                          its own security guarantees.


                                          This enum should be considered a
                                          registry of all known sign modes

                                          in the Cosmos ecosystem. Apps are not
                                          expected to support all known

                                          sign modes. Apps that would like to
                                          support custom  sign modes are

                                          encouraged to open a small PR against
                                          this file to add a new case

                                          to this SignMode enum describing their
                                          sign mode so that different

                                          apps have a consistent version of this
                                          enum.

                                           - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                          rejected.
                                           - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                          verified with raw bytes from Tx.
                                           - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                          human-readable textual representation on
                                          top of the binary representation

                                          from SIGN_MODE_DIRECT.


                                          Since: cosmos-sdk 0.50
                                           - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                                          SignDocDirectAux. As opposed to
                                          SIGN_MODE_DIRECT, this sign mode does
                                          not

                                          require signers signing over other
                                          signers' `signer_info`.


                                          Since: cosmos-sdk 0.46
                                           - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                          Amino JSON and will be removed in the
                                          future.
                                           - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                          SDK. Ref:
                                          https://eips.ethereum.org/EIPS/eip-191


                                          Currently, SIGN_MODE_EIP_191 is
                                          registered as a SignMode enum variant,

                                          but is not implemented on the SDK by
                                          default. To enable EIP-191, you need

                                          to pass a custom `TxConfig` that has an
                                          implementation of

                                          `SignModeHandler` for EIP-191. The SDK
                                          may decide to fully support

                                          EIP-191 in the future.


                                          Since: cosmos-sdk 0.45.2
                                        enum:
                                          - SIGN_MODE_UNSPECIFIED
                                          - SIGN_MODE_DIRECT
                                          - SIGN_MODE_TEXTUAL
                                          - SIGN_MODE_DIRECT_AUX
                                          - SIGN_MODE_LEGACY_AMINO_JSON
                                          - SIGN_MODE_EIP_191
                                        type: string
                                    type: object
                                type: object
                              public_key:
                                properties:
                                  type_url:
                                    type: string
                                  value:
                                    format: byte
                                    type: string
                                type: object
                                description: >-
                                  public_key is the public key of the signer. It
                                  is optional for accounts

                                  that already exist in state. If unset, the
                                  verifier can use the required \

                                  signer address for this position and lookup
                                  the public key.
                              sequence:
                                description: >-
                                  sequence is the sequence of the account, which
                                  describes the

                                  number of committed transactions signed by a
                                  given address. It is used to

                                  prevent replay attacks.
                                format: uint64
                                type: string
                            type: object
                          type: array
                        tip:
                          description: >-
                            Tip is the optional tip used for transactions fees
                            paid in another denom.


                            This field is ignored if the chain didn't enable
                            tips, i.e. didn't add the

                            `TipDecorator` in its posthandler.


                            Since: cosmos-sdk 0.46
                          properties:
                            amount:
                              items:
                                description: >-
                                  Coin defines a token with a denomination and
                                  an amount.


                                  NOTE: The amount field is an Int which
                                  implements the custom method

                                  signatures required by gogoproto.
                                properties:
                                  amount:
                                    type: string
                                  denom:
                                    type: string
                                type: object
                              title: amount is the amount of the tip
                              type: array
                            tipper:
                              title: >-
                                tipper is the address of the account paying for
                                the tip
                              type: string
                          type: object
                      type: object
                    body:
                      title: body is the processable content of the transaction
                      description: >-
                        TxBody is the body of a transaction that all signers
                        sign over.
                      properties:
                        extension_options:
                          items:
                            properties:
                              type_url:
                                type: string
                              value:
                                format: byte
                                type: string
                            type: object
                          title: >-
                            extension_options are arbitrary options that can be
                            added by chains

                            when the default options are not sufficient. If any
                            of these are present

                            and can't be handled, the transaction will be
                            rejected
                          type: array
                        memo:
                          description: >-
                            memo is any arbitrary note/comment to be added to
                            the transaction.

                            WARNING: in clients, any publicly exposed text
                            should not be called memo,

                            but should be called `note` instead (see
                            https://github.com/cosmos/cosmos-sdk/issues/9122).
                          type: string
                        messages:
                          description: >-
                            messages is a list of messages to be executed. The
                            required signers of

                            those messages define the number and order of
                            elements in AuthInfo's

                            signer_infos and Tx's signatures. Each required
                            signer address is added to

                            the list only the first time it occurs.

                            By convention, the first required signer (usually
                            from the first message)

                            is referred to as the primary signer and pays the
                            fee for the whole

                            transaction.
                          items:
                            properties:
                              type_url:
                                type: string
                              value:
                                format: byte
                                type: string
                            type: object
                          type: array
                        non_critical_extension_options:
                          items:
                            properties:
                              type_url:
                                type: string
                              value:
                                format: byte
                                type: string
                            type: object
                          title: >-
                            extension_options are arbitrary options that can be
                            added by chains

                            when the default options are not sufficient. If any
                            of these are present

                            and can't be handled, they will be ignored
                          type: array
                        timeout_height:
                          format: uint64
                          title: >-
                            timeout is the block height after which this
                            transaction will not

                            be processed by the chain
                          type: string
                      type: object
                    signatures:
                      description: >-
                        signatures is a list of signatures that matches the
                        length and order of

                        AuthInfo's signer_infos to allow connecting signature
                        meta information like

                        public key and signing mode by position.
                      items:
                        format: byte
                        type: string
                      type: array
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetTxsEvent fetches txs by event.
      tags:
        - Service
    post:
      operationId: BroadcastTx
      parameters:
        - in: body
          name: body
          required: true
          schema:
            description: >-
              BroadcastTxRequest is the request type for the
              Service.BroadcastTxRequest

              RPC method.
            properties:
              mode:
                default: BROADCAST_MODE_UNSPECIFIED
                description: >-
                  BroadcastMode specifies the broadcast mode for the
                  TxService.Broadcast RPC

                  method.

                   - BROADCAST_MODE_UNSPECIFIED: zero-value for mode ordering
                   - BROADCAST_MODE_BLOCK: DEPRECATED: use BROADCAST_MODE_SYNC instead,
                  BROADCAST_MODE_BLOCK is not supported by the SDK from v0.47.x
                  onwards.
                   - BROADCAST_MODE_SYNC: BROADCAST_MODE_SYNC defines a tx broadcasting mode where the client waits
                  for a CheckTx execution response only.
                   - BROADCAST_MODE_ASYNC: BROADCAST_MODE_ASYNC defines a tx broadcasting mode where the client
                  returns immediately.
                enum:
                  - BROADCAST_MODE_UNSPECIFIED
                  - BROADCAST_MODE_BLOCK
                  - BROADCAST_MODE_SYNC
                  - BROADCAST_MODE_ASYNC
                type: string
              tx_bytes:
                description: tx_bytes is the raw transaction.
                format: byte
                type: string
            type: object
      responses:
        '200':
          description: A successful response.
          schema:
            description: |-
              BroadcastTxResponse is the response type for the
              Service.BroadcastTx method.
            properties:
              tx_response:
                description: tx_response is the queried TxResponses.
                properties:
                  code:
                    description: Response code.
                    format: int64
                    type: integer
                  codespace:
                    title: Namespace for the Code
                    type: string
                  data:
                    description: Result bytes, if any.
                    type: string
                  events:
                    description: >-
                      Events defines all the events emitted by processing a
                      transaction. Note,

                      these events include those emitted by processing all the
                      messages and those

                      emitted from the ante. Whereas Logs contains the events,
                      with

                      additional metadata, emitted only by processing the
                      messages.


                      Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
                    items:
                      description: >-
                        Event allows application developers to attach additional
                        information to

                        ResponseFinalizeBlock and ResponseCheckTx.

                        Later, transactions may be queried using these events.
                      properties:
                        attributes:
                          items:
                            description: >-
                              EventAttribute is a single key-value pair,
                              associated with an event.
                            properties:
                              index:
                                type: boolean
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        type:
                          type: string
                      type: object
                    type: array
                  gas_used:
                    description: Amount of gas consumed by transaction.
                    format: int64
                    type: string
                  gas_wanted:
                    description: Amount of gas requested for transaction.
                    format: int64
                    type: string
                  height:
                    format: int64
                    title: The block height
                    type: string
                  info:
                    description: Additional information. May be non-deterministic.
                    type: string
                  logs:
                    description: >-
                      The output of the application's logger (typed). May be
                      non-deterministic.
                    items:
                      description: >-
                        ABCIMessageLog defines a structure containing an indexed
                        tx ABCI message log.
                      properties:
                        events:
                          description: >-
                            Events contains a slice of Event objects that were
                            emitted during some

                            execution.
                          items:
                            description: >-
                              StringEvent defines en Event object wrapper where
                              all the attributes

                              contain key/value pairs that are strings instead
                              of raw bytes.
                            properties:
                              attributes:
                                items:
                                  description: >-
                                    Attribute defines an attribute wrapper where
                                    the key and value are

                                    strings instead of raw bytes.
                                  properties:
                                    key:
                                      type: string
                                    value:
                                      type: string
                                  type: object
                                type: array
                              type:
                                type: string
                            type: object
                          type: array
                        log:
                          type: string
                        msg_index:
                          format: int64
                          type: integer
                      type: object
                    type: array
                  raw_log:
                    description: >-
                      The output of the application's logger (raw string). May
                      be

                      non-deterministic.
                    type: string
                  timestamp:
                    description: >-
                      Time of the previous block. For heights > 1, it's the
                      weighted median of

                      the timestamps of the valid votes in the block.LastCommit.
                      For height == 1,

                      it's genesis time.
                    type: string
                  tx:
                    properties:
                      type_url:
                        type: string
                      value:
                        format: byte
                        type: string
                    type: object
                    description: The request transaction bytes.
                  txhash:
                    description: The transaction hash.
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: BroadcastTx broadcast transaction.
      tags:
        - Service
  /cosmos/tx/v1beta1/txs/block/{height}:
    get:
      description: 'Since: cosmos-sdk 0.45.2'
      operationId: GetBlockWithTxs
      parameters:
        - description: height is the height of the block to query.
          format: int64
          in: path
          name: height
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              GetBlockWithTxsResponse is the response type for the
              Service.GetBlockWithTxs

              method.


              Since: cosmos-sdk 0.45.2
            properties:
              block:
                properties:
                  data:
                    properties:
                      txs:
                        description: >-
                          Txs that will be applied by state @ block.Height+1.

                          NOTE: not all txs here are valid.  We're just agreeing
                          on the order first.

                          This means that block.AppHash does not include these
                          txs.
                        items:
                          format: byte
                          type: string
                        type: array
                    title: >-
                      Data contains the set of transactions included in the
                      block
                    type: object
                  evidence:
                    properties:
                      evidence:
                        items:
                          properties:
                            duplicate_vote_evidence:
                              description: >-
                                DuplicateVoteEvidence contains evidence of a
                                validator signed two conflicting votes.
                              properties:
                                timestamp:
                                  format: date-time
                                  type: string
                                total_voting_power:
                                  format: int64
                                  type: string
                                validator_power:
                                  format: int64
                                  type: string
                                vote_a:
                                  description: >-
                                    Vote represents a prevote or precommit vote
                                    from validators for

                                    consensus.
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    extension:
                                      description: >-
                                        Vote extension provided by the
                                        application. Only valid for precommit

                                        messages.
                                      format: byte
                                      type: string
                                    extension_signature:
                                      description: >-
                                        Vote extension signature by the
                                        validator if they participated in

                                        consensus for the associated block.

                                        Only valid for precommit messages.
                                      format: byte
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signature:
                                      description: >-
                                        Vote signature by the validator if they
                                        participated in consensus for the

                                        associated block.
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    type:
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: >-
                                        SignedMsgType is a type of signed
                                        message in the consensus.

                                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                      enum:
                                        - SIGNED_MSG_TYPE_UNKNOWN
                                        - SIGNED_MSG_TYPE_PREVOTE
                                        - SIGNED_MSG_TYPE_PRECOMMIT
                                        - SIGNED_MSG_TYPE_PROPOSAL
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                    validator_index:
                                      format: int32
                                      type: integer
                                  type: object
                                vote_b:
                                  description: >-
                                    Vote represents a prevote or precommit vote
                                    from validators for

                                    consensus.
                                  properties:
                                    block_id:
                                      properties:
                                        hash:
                                          format: byte
                                          type: string
                                        part_set_header:
                                          properties:
                                            hash:
                                              format: byte
                                              type: string
                                            total:
                                              format: int64
                                              type: integer
                                          title: PartsetHeader
                                          type: object
                                      title: BlockID
                                      type: object
                                    extension:
                                      description: >-
                                        Vote extension provided by the
                                        application. Only valid for precommit

                                        messages.
                                      format: byte
                                      type: string
                                    extension_signature:
                                      description: >-
                                        Vote extension signature by the
                                        validator if they participated in

                                        consensus for the associated block.

                                        Only valid for precommit messages.
                                      format: byte
                                      type: string
                                    height:
                                      format: int64
                                      type: string
                                    round:
                                      format: int32
                                      type: integer
                                    signature:
                                      description: >-
                                        Vote signature by the validator if they
                                        participated in consensus for the

                                        associated block.
                                      format: byte
                                      type: string
                                    timestamp:
                                      format: date-time
                                      type: string
                                    type:
                                      default: SIGNED_MSG_TYPE_UNKNOWN
                                      description: >-
                                        SignedMsgType is a type of signed
                                        message in the consensus.

                                         - SIGNED_MSG_TYPE_PREVOTE: Votes
                                         - SIGNED_MSG_TYPE_PROPOSAL: Proposals
                                      enum:
                                        - SIGNED_MSG_TYPE_UNKNOWN
                                        - SIGNED_MSG_TYPE_PREVOTE
                                        - SIGNED_MSG_TYPE_PRECOMMIT
                                        - SIGNED_MSG_TYPE_PROPOSAL
                                      type: string
                                    validator_address:
                                      format: byte
                                      type: string
                                    validator_index:
                                      format: int32
                                      type: integer
                                  type: object
                              type: object
                            light_client_attack_evidence:
                              description: >-
                                LightClientAttackEvidence contains evidence of a
                                set of validators attempting to mislead a light
                                client.
                              properties:
                                byzantine_validators:
                                  items:
                                    properties:
                                      address:
                                        format: byte
                                        type: string
                                      proposer_priority:
                                        format: int64
                                        type: string
                                      pub_key:
                                        properties:
                                          ed25519:
                                            format: byte
                                            type: string
                                          secp256k1:
                                            format: byte
                                            type: string
                                        title: >-
                                          PublicKey defines the keys available for
                                          use with Validators
                                        type: object
                                      voting_power:
                                        format: int64
                                        type: string
                                    type: object
                                  type: array
                                common_height:
                                  format: int64
                                  type: string
                                conflicting_block:
                                  properties:
                                    signed_header:
                                      properties:
                                        commit:
                                          description: >-
                                            Commit contains the evidence that a
                                            block was committed by a set of
                                            validators.
                                          properties:
                                            block_id:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                part_set_header:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    total:
                                                      format: int64
                                                      type: integer
                                                  title: PartsetHeader
                                                  type: object
                                              title: BlockID
                                              type: object
                                            height:
                                              format: int64
                                              type: string
                                            round:
                                              format: int32
                                              type: integer
                                            signatures:
                                              items:
                                                description: >-
                                                  CommitSig is a part of the Vote included
                                                  in a Commit.
                                                properties:
                                                  block_id_flag:
                                                    default: BLOCK_ID_FLAG_UNKNOWN
                                                    enum:
                                                      - BLOCK_ID_FLAG_UNKNOWN
                                                      - BLOCK_ID_FLAG_ABSENT
                                                      - BLOCK_ID_FLAG_COMMIT
                                                      - BLOCK_ID_FLAG_NIL
                                                    title: >-
                                                      BlockIdFlag indicates which BlockID the
                                                      signature is for
                                                    type: string
                                                  signature:
                                                    format: byte
                                                    type: string
                                                  timestamp:
                                                    format: date-time
                                                    type: string
                                                  validator_address:
                                                    format: byte
                                                    type: string
                                                type: object
                                              type: array
                                          type: object
                                        header:
                                          description: >-
                                            Header defines the structure of a block
                                            header.
                                          properties:
                                            app_hash:
                                              format: byte
                                              type: string
                                            chain_id:
                                              type: string
                                            consensus_hash:
                                              format: byte
                                              type: string
                                            data_hash:
                                              format: byte
                                              type: string
                                            evidence_hash:
                                              format: byte
                                              title: consensus info
                                              type: string
                                            height:
                                              format: int64
                                              type: string
                                            last_block_id:
                                              properties:
                                                hash:
                                                  format: byte
                                                  type: string
                                                part_set_header:
                                                  properties:
                                                    hash:
                                                      format: byte
                                                      type: string
                                                    total:
                                                      format: int64
                                                      type: integer
                                                  title: PartsetHeader
                                                  type: object
                                              title: BlockID
                                              type: object
                                            last_commit_hash:
                                              format: byte
                                              title: hashes of block data
                                              type: string
                                            last_results_hash:
                                              format: byte
                                              type: string
                                            next_validators_hash:
                                              format: byte
                                              type: string
                                            proposer_address:
                                              format: byte
                                              type: string
                                            time:
                                              format: date-time
                                              type: string
                                            validators_hash:
                                              format: byte
                                              title: >-
                                                hashes from the app output from the prev
                                                block
                                              type: string
                                            version:
                                              title: basic block info
                                              description: >-
                                                Consensus captures the consensus rules
                                                for processing a block in the
                                                blockchain,

                                                including all blockchain data structures
                                                and the rules of the application's

                                                state transition machine.
                                              properties:
                                                app:
                                                  format: uint64
                                                  type: string
                                                block:
                                                  format: uint64
                                                  type: string
                                              type: object
                                          type: object
                                      type: object
                                    validator_set:
                                      properties:
                                        proposer:
                                          properties:
                                            address:
                                              format: byte
                                              type: string
                                            proposer_priority:
                                              format: int64
                                              type: string
                                            pub_key:
                                              properties:
                                                ed25519:
                                                  format: byte
                                                  type: string
                                                secp256k1:
                                                  format: byte
                                                  type: string
                                              title: >-
                                                PublicKey defines the keys available for
                                                use with Validators
                                              type: object
                                            voting_power:
                                              format: int64
                                              type: string
                                          type: object
                                        total_voting_power:
                                          format: int64
                                          type: string
                                        validators:
                                          items:
                                            properties:
                                              address:
                                                format: byte
                                                type: string
                                              proposer_priority:
                                                format: int64
                                                type: string
                                              pub_key:
                                                properties:
                                                  ed25519:
                                                    format: byte
                                                    type: string
                                                  secp256k1:
                                                    format: byte
                                                    type: string
                                                title: >-
                                                  PublicKey defines the keys available for
                                                  use with Validators
                                                type: object
                                              voting_power:
                                                format: int64
                                                type: string
                                            type: object
                                          type: array
                                      type: object
                                  type: object
                                timestamp:
                                  format: date-time
                                  type: string
                                total_voting_power:
                                  format: int64
                                  type: string
                              type: object
                          type: object
                        type: array
                    type: object
                  header:
                    description: Header defines the structure of a block header.
                    properties:
                      app_hash:
                        format: byte
                        type: string
                      chain_id:
                        type: string
                      consensus_hash:
                        format: byte
                        type: string
                      data_hash:
                        format: byte
                        type: string
                      evidence_hash:
                        format: byte
                        title: consensus info
                        type: string
                      height:
                        format: int64
                        type: string
                      last_block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      last_commit_hash:
                        format: byte
                        title: hashes of block data
                        type: string
                      last_results_hash:
                        format: byte
                        type: string
                      next_validators_hash:
                        format: byte
                        type: string
                      proposer_address:
                        format: byte
                        type: string
                      time:
                        format: date-time
                        type: string
                      validators_hash:
                        format: byte
                        title: hashes from the app output from the prev block
                        type: string
                      version:
                        title: basic block info
                        description: >-
                          Consensus captures the consensus rules for processing
                          a block in the blockchain,

                          including all blockchain data structures and the rules
                          of the application's

                          state transition machine.
                        properties:
                          app:
                            format: uint64
                            type: string
                          block:
                            format: uint64
                            type: string
                        type: object
                    type: object
                  last_commit:
                    description: >-
                      Commit contains the evidence that a block was committed by
                      a set of validators.
                    properties:
                      block_id:
                        properties:
                          hash:
                            format: byte
                            type: string
                          part_set_header:
                            properties:
                              hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: integer
                            title: PartsetHeader
                            type: object
                        title: BlockID
                        type: object
                      height:
                        format: int64
                        type: string
                      round:
                        format: int32
                        type: integer
                      signatures:
                        items:
                          description: >-
                            CommitSig is a part of the Vote included in a
                            Commit.
                          properties:
                            block_id_flag:
                              default: BLOCK_ID_FLAG_UNKNOWN
                              enum:
                                - BLOCK_ID_FLAG_UNKNOWN
                                - BLOCK_ID_FLAG_ABSENT
                                - BLOCK_ID_FLAG_COMMIT
                                - BLOCK_ID_FLAG_NIL
                              title: >-
                                BlockIdFlag indicates which BlockID the
                                signature is for
                              type: string
                            signature:
                              format: byte
                              type: string
                            timestamp:
                              format: date-time
                              type: string
                            validator_address:
                              format: byte
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              block_id:
                properties:
                  hash:
                    format: byte
                    type: string
                  part_set_header:
                    properties:
                      hash:
                        format: byte
                        type: string
                      total:
                        format: int64
                        type: integer
                    title: PartsetHeader
                    type: object
                title: BlockID
                type: object
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
              txs:
                description: txs are the transactions in the block.
                items:
                  description: Tx is the standard type used for broadcasting transactions.
                  properties:
                    auth_info:
                      title: >-
                        auth_info is the authorization related content of the
                        transaction,

                        specifically signers, signer modes and fee
                      description: >-
                        AuthInfo describes the fee and signer modes that are
                        used to sign a

                        transaction.
                      properties:
                        fee:
                          description: >-
                            Fee is the fee and gas limit for the transaction.
                            The first signer is the

                            primary signer and the one which pays the fee. The
                            fee can be calculated

                            based on the cost of evaluating the body and doing
                            signature verification

                            of the signers. This can be estimated via
                            simulation.
                          properties:
                            amount:
                              items:
                                description: >-
                                  Coin defines a token with a denomination and
                                  an amount.


                                  NOTE: The amount field is an Int which
                                  implements the custom method

                                  signatures required by gogoproto.
                                properties:
                                  amount:
                                    type: string
                                  denom:
                                    type: string
                                type: object
                              title: >-
                                amount is the amount of coins to be paid as a
                                fee
                              type: array
                            gas_limit:
                              format: uint64
                              title: >-
                                gas_limit is the maximum gas that can be used in
                                transaction processing

                                before an out of gas error occurs
                              type: string
                            granter:
                              title: >-
                                if set, the fee payer (either the first signer
                                or the value of the payer field) requests that a
                                fee grant be used

                                to pay fees instead of the fee payer's own
                                balance. If an appropriate fee grant does not
                                exist or the chain does

                                not support fee grants, this will fail
                              type: string
                            payer:
                              description: >-
                                if unset, the first signer is responsible for
                                paying the fees. If set, the specified account
                                must pay the fees.

                                the payer must be a tx signer (and thus have
                                signed this field in AuthInfo).

                                setting this field does *not* change the
                                ordering of required signers for the
                                transaction.
                              type: string
                          type: object
                        signer_infos:
                          description: >-
                            signer_infos defines the signing modes for the
                            required signers. The number

                            and order of elements must match the required
                            signers from TxBody's

                            messages. The first element is the primary signer
                            and the one which pays

                            the fee.
                          items:
                            description: >-
                              SignerInfo describes the public key and signing
                              mode of a single top-level

                              signer.
                            properties:
                              mode_info:
                                title: >-
                                  mode_info describes the signing mode of the
                                  signer and is a nested

                                  structure to support nested multisig pubkey's
                                description: >-
                                  ModeInfo describes the signing mode of a
                                  single or nested multisig signer.
                                properties:
                                  multi:
                                    title: multi represents a nested multisig signer
                                    properties:
                                      bitarray:
                                        title: >-
                                          bitarray specifies which keys within the
                                          multisig are signing
                                        description: >-
                                          CompactBitArray is an implementation of
                                          a space efficient bit array.

                                          This is used to ensure that the encoded
                                          data takes up a minimal amount of

                                          space after proto encoding.

                                          This is not thread safe, and is not
                                          intended for concurrent usage.
                                        properties:
                                          elems:
                                            format: byte
                                            type: string
                                          extra_bits_stored:
                                            format: int64
                                            type: integer
                                        type: object
                                      mode_infos:
                                        items: {}
                                        title: >-
                                          mode_infos is the corresponding modes of
                                          the signers of the multisig

                                          which could include nested multisig
                                          public keys
                                        type: array
                                    type: object
                                  single:
                                    title: single represents a single signer
                                    properties:
                                      mode:
                                        title: >-
                                          mode is the signing mode of the single
                                          signer
                                        default: SIGN_MODE_UNSPECIFIED
                                        description: >-
                                          SignMode represents a signing mode with
                                          its own security guarantees.


                                          This enum should be considered a
                                          registry of all known sign modes

                                          in the Cosmos ecosystem. Apps are not
                                          expected to support all known

                                          sign modes. Apps that would like to
                                          support custom  sign modes are

                                          encouraged to open a small PR against
                                          this file to add a new case

                                          to this SignMode enum describing their
                                          sign mode so that different

                                          apps have a consistent version of this
                                          enum.

                                           - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                          rejected.
                                           - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                          verified with raw bytes from Tx.
                                           - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                          human-readable textual representation on
                                          top of the binary representation

                                          from SIGN_MODE_DIRECT.


                                          Since: cosmos-sdk 0.50
                                           - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                                          SignDocDirectAux. As opposed to
                                          SIGN_MODE_DIRECT, this sign mode does
                                          not

                                          require signers signing over other
                                          signers' `signer_info`.


                                          Since: cosmos-sdk 0.46
                                           - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                          Amino JSON and will be removed in the
                                          future.
                                           - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                          SDK. Ref:
                                          https://eips.ethereum.org/EIPS/eip-191


                                          Currently, SIGN_MODE_EIP_191 is
                                          registered as a SignMode enum variant,

                                          but is not implemented on the SDK by
                                          default. To enable EIP-191, you need

                                          to pass a custom `TxConfig` that has an
                                          implementation of

                                          `SignModeHandler` for EIP-191. The SDK
                                          may decide to fully support

                                          EIP-191 in the future.


                                          Since: cosmos-sdk 0.45.2
                                        enum:
                                          - SIGN_MODE_UNSPECIFIED
                                          - SIGN_MODE_DIRECT
                                          - SIGN_MODE_TEXTUAL
                                          - SIGN_MODE_DIRECT_AUX
                                          - SIGN_MODE_LEGACY_AMINO_JSON
                                          - SIGN_MODE_EIP_191
                                        type: string
                                    type: object
                                type: object
                              public_key:
                                properties:
                                  type_url:
                                    type: string
                                  value:
                                    format: byte
                                    type: string
                                type: object
                                description: >-
                                  public_key is the public key of the signer. It
                                  is optional for accounts

                                  that already exist in state. If unset, the
                                  verifier can use the required \

                                  signer address for this position and lookup
                                  the public key.
                              sequence:
                                description: >-
                                  sequence is the sequence of the account, which
                                  describes the

                                  number of committed transactions signed by a
                                  given address. It is used to

                                  prevent replay attacks.
                                format: uint64
                                type: string
                            type: object
                          type: array
                        tip:
                          description: >-
                            Tip is the optional tip used for transactions fees
                            paid in another denom.


                            This field is ignored if the chain didn't enable
                            tips, i.e. didn't add the

                            `TipDecorator` in its posthandler.


                            Since: cosmos-sdk 0.46
                          properties:
                            amount:
                              items:
                                description: >-
                                  Coin defines a token with a denomination and
                                  an amount.


                                  NOTE: The amount field is an Int which
                                  implements the custom method

                                  signatures required by gogoproto.
                                properties:
                                  amount:
                                    type: string
                                  denom:
                                    type: string
                                type: object
                              title: amount is the amount of the tip
                              type: array
                            tipper:
                              title: >-
                                tipper is the address of the account paying for
                                the tip
                              type: string
                          type: object
                      type: object
                    body:
                      title: body is the processable content of the transaction
                      description: >-
                        TxBody is the body of a transaction that all signers
                        sign over.
                      properties:
                        extension_options:
                          items:
                            properties:
                              type_url:
                                type: string
                              value:
                                format: byte
                                type: string
                            type: object
                          title: >-
                            extension_options are arbitrary options that can be
                            added by chains

                            when the default options are not sufficient. If any
                            of these are present

                            and can't be handled, the transaction will be
                            rejected
                          type: array
                        memo:
                          description: >-
                            memo is any arbitrary note/comment to be added to
                            the transaction.

                            WARNING: in clients, any publicly exposed text
                            should not be called memo,

                            but should be called `note` instead (see
                            https://github.com/cosmos/cosmos-sdk/issues/9122).
                          type: string
                        messages:
                          description: >-
                            messages is a list of messages to be executed. The
                            required signers of

                            those messages define the number and order of
                            elements in AuthInfo's

                            signer_infos and Tx's signatures. Each required
                            signer address is added to

                            the list only the first time it occurs.

                            By convention, the first required signer (usually
                            from the first message)

                            is referred to as the primary signer and pays the
                            fee for the whole

                            transaction.
                          items:
                            properties:
                              type_url:
                                type: string
                              value:
                                format: byte
                                type: string
                            type: object
                          type: array
                        non_critical_extension_options:
                          items:
                            properties:
                              type_url:
                                type: string
                              value:
                                format: byte
                                type: string
                            type: object
                          title: >-
                            extension_options are arbitrary options that can be
                            added by chains

                            when the default options are not sufficient. If any
                            of these are present

                            and can't be handled, they will be ignored
                          type: array
                        timeout_height:
                          format: uint64
                          title: >-
                            timeout is the block height after which this
                            transaction will not

                            be processed by the chain
                          type: string
                      type: object
                    signatures:
                      description: >-
                        signatures is a list of signatures that matches the
                        length and order of

                        AuthInfo's signer_infos to allow connecting signature
                        meta information like

                        public key and signing mode by position.
                      items:
                        format: byte
                        type: string
                      type: array
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetBlockWithTxs fetches a block with decoded txs.
      tags:
        - Service
  /cosmos/tx/v1beta1/txs/{hash}:
    get:
      operationId: GetTx
      parameters:
        - description: hash is the tx hash to query, encoded as a hex string.
          in: path
          name: hash
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: GetTxResponse is the response type for the Service.GetTx method.
            properties:
              tx:
                description: Tx is the standard type used for broadcasting transactions.
                properties:
                  auth_info:
                    title: >-
                      auth_info is the authorization related content of the
                      transaction,

                      specifically signers, signer modes and fee
                    description: >-
                      AuthInfo describes the fee and signer modes that are used
                      to sign a

                      transaction.
                    properties:
                      fee:
                        description: >-
                          Fee is the fee and gas limit for the transaction. The
                          first signer is the

                          primary signer and the one which pays the fee. The fee
                          can be calculated

                          based on the cost of evaluating the body and doing
                          signature verification

                          of the signers. This can be estimated via simulation.
                        properties:
                          amount:
                            items:
                              description: >-
                                Coin defines a token with a denomination and an
                                amount.


                                NOTE: The amount field is an Int which
                                implements the custom method

                                signatures required by gogoproto.
                              properties:
                                amount:
                                  type: string
                                denom:
                                  type: string
                              type: object
                            title: amount is the amount of coins to be paid as a fee
                            type: array
                          gas_limit:
                            format: uint64
                            title: >-
                              gas_limit is the maximum gas that can be used in
                              transaction processing

                              before an out of gas error occurs
                            type: string
                          granter:
                            title: >-
                              if set, the fee payer (either the first signer or
                              the value of the payer field) requests that a fee
                              grant be used

                              to pay fees instead of the fee payer's own
                              balance. If an appropriate fee grant does not
                              exist or the chain does

                              not support fee grants, this will fail
                            type: string
                          payer:
                            description: >-
                              if unset, the first signer is responsible for
                              paying the fees. If set, the specified account
                              must pay the fees.

                              the payer must be a tx signer (and thus have
                              signed this field in AuthInfo).

                              setting this field does *not* change the ordering
                              of required signers for the transaction.
                            type: string
                        type: object
                      signer_infos:
                        description: >-
                          signer_infos defines the signing modes for the
                          required signers. The number

                          and order of elements must match the required signers
                          from TxBody's

                          messages. The first element is the primary signer and
                          the one which pays

                          the fee.
                        items:
                          description: >-
                            SignerInfo describes the public key and signing mode
                            of a single top-level

                            signer.
                          properties:
                            mode_info:
                              title: >-
                                mode_info describes the signing mode of the
                                signer and is a nested

                                structure to support nested multisig pubkey's
                              description: >-
                                ModeInfo describes the signing mode of a single
                                or nested multisig signer.
                              properties:
                                multi:
                                  title: multi represents a nested multisig signer
                                  properties:
                                    bitarray:
                                      title: >-
                                        bitarray specifies which keys within the
                                        multisig are signing
                                      description: >-
                                        CompactBitArray is an implementation of
                                        a space efficient bit array.

                                        This is used to ensure that the encoded
                                        data takes up a minimal amount of

                                        space after proto encoding.

                                        This is not thread safe, and is not
                                        intended for concurrent usage.
                                      properties:
                                        elems:
                                          format: byte
                                          type: string
                                        extra_bits_stored:
                                          format: int64
                                          type: integer
                                      type: object
                                    mode_infos:
                                      items: {}
                                      title: >-
                                        mode_infos is the corresponding modes of
                                        the signers of the multisig

                                        which could include nested multisig
                                        public keys
                                      type: array
                                  type: object
                                single:
                                  title: single represents a single signer
                                  properties:
                                    mode:
                                      title: >-
                                        mode is the signing mode of the single
                                        signer
                                      default: SIGN_MODE_UNSPECIFIED
                                      description: >-
                                        SignMode represents a signing mode with
                                        its own security guarantees.


                                        This enum should be considered a
                                        registry of all known sign modes

                                        in the Cosmos ecosystem. Apps are not
                                        expected to support all known

                                        sign modes. Apps that would like to
                                        support custom  sign modes are

                                        encouraged to open a small PR against
                                        this file to add a new case

                                        to this SignMode enum describing their
                                        sign mode so that different

                                        apps have a consistent version of this
                                        enum.

                                         - SIGN_MODE_UNSPECIFIED: SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
                                        rejected.
                                         - SIGN_MODE_DIRECT: SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
                                        verified with raw bytes from Tx.
                                         - SIGN_MODE_TEXTUAL: SIGN_MODE_TEXTUAL is a future signing mode that will verify some
                                        human-readable textual representation on
                                        top of the binary representation

                                        from SIGN_MODE_DIRECT.


                                        Since: cosmos-sdk 0.50
                                         - SIGN_MODE_DIRECT_AUX: SIGN_MODE_DIRECT_AUX specifies a signing mode which uses
                                        SignDocDirectAux. As opposed to
                                        SIGN_MODE_DIRECT, this sign mode does
                                        not

                                        require signers signing over other
                                        signers' `signer_info`.


                                        Since: cosmos-sdk 0.46
                                         - SIGN_MODE_LEGACY_AMINO_JSON: SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
                                        Amino JSON and will be removed in the
                                        future.
                                         - SIGN_MODE_EIP_191: SIGN_MODE_EIP_191 specifies the sign mode for EIP 191 signing on the Cosmos
                                        SDK. Ref:
                                        https://eips.ethereum.org/EIPS/eip-191


                                        Currently, SIGN_MODE_EIP_191 is
                                        registered as a SignMode enum variant,

                                        but is not implemented on the SDK by
                                        default. To enable EIP-191, you need

                                        to pass a custom `TxConfig` that has an
                                        implementation of

                                        `SignModeHandler` for EIP-191. The SDK
                                        may decide to fully support

                                        EIP-191 in the future.


                                        Since: cosmos-sdk 0.45.2
                                      enum:
                                        - SIGN_MODE_UNSPECIFIED
                                        - SIGN_MODE_DIRECT
                                        - SIGN_MODE_TEXTUAL
                                        - SIGN_MODE_DIRECT_AUX
                                        - SIGN_MODE_LEGACY_AMINO_JSON
                                        - SIGN_MODE_EIP_191
                                      type: string
                                  type: object
                              type: object
                            public_key:
                              properties:
                                type_url:
                                  type: string
                                value:
                                  format: byte
                                  type: string
                              type: object
                              description: >-
                                public_key is the public key of the signer. It
                                is optional for accounts

                                that already exist in state. If unset, the
                                verifier can use the required \

                                signer address for this position and lookup the
                                public key.
                            sequence:
                              description: >-
                                sequence is the sequence of the account, which
                                describes the

                                number of committed transactions signed by a
                                given address. It is used to

                                prevent replay attacks.
                              format: uint64
                              type: string
                          type: object
                        type: array
                      tip:
                        description: >-
                          Tip is the optional tip used for transactions fees
                          paid in another denom.


                          This field is ignored if the chain didn't enable tips,
                          i.e. didn't add the

                          `TipDecorator` in its posthandler.


                          Since: cosmos-sdk 0.46
                        properties:
                          amount:
                            items:
                              description: >-
                                Coin defines a token with a denomination and an
                                amount.


                                NOTE: The amount field is an Int which
                                implements the custom method

                                signatures required by gogoproto.
                              properties:
                                amount:
                                  type: string
                                denom:
                                  type: string
                              type: object
                            title: amount is the amount of the tip
                            type: array
                          tipper:
                            title: >-
                              tipper is the address of the account paying for
                              the tip
                            type: string
                        type: object
                    type: object
                  body:
                    title: body is the processable content of the transaction
                    description: >-
                      TxBody is the body of a transaction that all signers sign
                      over.
                    properties:
                      extension_options:
                        items:
                          properties:
                            type_url:
                              type: string
                            value:
                              format: byte
                              type: string
                          type: object
                        title: >-
                          extension_options are arbitrary options that can be
                          added by chains

                          when the default options are not sufficient. If any of
                          these are present

                          and can't be handled, the transaction will be rejected
                        type: array
                      memo:
                        description: >-
                          memo is any arbitrary note/comment to be added to the
                          transaction.

                          WARNING: in clients, any publicly exposed text should
                          not be called memo,

                          but should be called `note` instead (see
                          https://github.com/cosmos/cosmos-sdk/issues/9122).
                        type: string
                      messages:
                        description: >-
                          messages is a list of messages to be executed. The
                          required signers of

                          those messages define the number and order of elements
                          in AuthInfo's

                          signer_infos and Tx's signatures. Each required signer
                          address is added to

                          the list only the first time it occurs.

                          By convention, the first required signer (usually from
                          the first message)

                          is referred to as the primary signer and pays the fee
                          for the whole

                          transaction.
                        items:
                          properties:
                            type_url:
                              type: string
                            value:
                              format: byte
                              type: string
                          type: object
                        type: array
                      non_critical_extension_options:
                        items:
                          properties:
                            type_url:
                              type: string
                            value:
                              format: byte
                              type: string
                          type: object
                        title: >-
                          extension_options are arbitrary options that can be
                          added by chains

                          when the default options are not sufficient. If any of
                          these are present

                          and can't be handled, they will be ignored
                        type: array
                      timeout_height:
                        format: uint64
                        title: >-
                          timeout is the block height after which this
                          transaction will not

                          be processed by the chain
                        type: string
                    type: object
                  signatures:
                    description: >-
                      signatures is a list of signatures that matches the length
                      and order of

                      AuthInfo's signer_infos to allow connecting signature meta
                      information like

                      public key and signing mode by position.
                    items:
                      format: byte
                      type: string
                    type: array
                type: object
              tx_response:
                description: tx_response is the queried TxResponses.
                properties:
                  code:
                    description: Response code.
                    format: int64
                    type: integer
                  codespace:
                    title: Namespace for the Code
                    type: string
                  data:
                    description: Result bytes, if any.
                    type: string
                  events:
                    description: >-
                      Events defines all the events emitted by processing a
                      transaction. Note,

                      these events include those emitted by processing all the
                      messages and those

                      emitted from the ante. Whereas Logs contains the events,
                      with

                      additional metadata, emitted only by processing the
                      messages.


                      Since: cosmos-sdk 0.42.11, 0.44.5, 0.45
                    items:
                      description: >-
                        Event allows application developers to attach additional
                        information to

                        ResponseFinalizeBlock and ResponseCheckTx.

                        Later, transactions may be queried using these events.
                      properties:
                        attributes:
                          items:
                            description: >-
                              EventAttribute is a single key-value pair,
                              associated with an event.
                            properties:
                              index:
                                type: boolean
                              key:
                                type: string
                              value:
                                type: string
                            type: object
                          type: array
                        type:
                          type: string
                      type: object
                    type: array
                  gas_used:
                    description: Amount of gas consumed by transaction.
                    format: int64
                    type: string
                  gas_wanted:
                    description: Amount of gas requested for transaction.
                    format: int64
                    type: string
                  height:
                    format: int64
                    title: The block height
                    type: string
                  info:
                    description: Additional information. May be non-deterministic.
                    type: string
                  logs:
                    description: >-
                      The output of the application's logger (typed). May be
                      non-deterministic.
                    items:
                      description: >-
                        ABCIMessageLog defines a structure containing an indexed
                        tx ABCI message log.
                      properties:
                        events:
                          description: >-
                            Events contains a slice of Event objects that were
                            emitted during some

                            execution.
                          items:
                            description: >-
                              StringEvent defines en Event object wrapper where
                              all the attributes

                              contain key/value pairs that are strings instead
                              of raw bytes.
                            properties:
                              attributes:
                                items:
                                  description: >-
                                    Attribute defines an attribute wrapper where
                                    the key and value are

                                    strings instead of raw bytes.
                                  properties:
                                    key:
                                      type: string
                                    value:
                                      type: string
                                  type: object
                                type: array
                              type:
                                type: string
                            type: object
                          type: array
                        log:
                          type: string
                        msg_index:
                          format: int64
                          type: integer
                      type: object
                    type: array
                  raw_log:
                    description: >-
                      The output of the application's logger (raw string). May
                      be

                      non-deterministic.
                    type: string
                  timestamp:
                    description: >-
                      Time of the previous block. For heights > 1, it's the
                      weighted median of

                      the timestamps of the valid votes in the block.LastCommit.
                      For height == 1,

                      it's genesis time.
                    type: string
                  tx:
                    properties:
                      type_url:
                        type: string
                      value:
                        format: byte
                        type: string
                    type: object
                    description: The request transaction bytes.
                  txhash:
                    description: The transaction hash.
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetTx fetches a tx by hash.
      tags:
        - Service
  /cosmos/upgrade/v1beta1/applied_plan/{name}:
    get:
      operationId: AppliedPlan
      parameters:
        - description: name is the name of the applied plan to query for.
          in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryAppliedPlanResponse is the response type for the
              Query/AppliedPlan RPC

              method.
            properties:
              height:
                description: height is the block height at which the plan was applied.
                format: int64
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: AppliedPlan queries a previously applied upgrade plan by its name.
      tags:
        - Query
  /cosmos/upgrade/v1beta1/authority:
    get:
      description: 'Since: cosmos-sdk 0.46'
      operationId: Authority
      responses:
        '200':
          description: A successful response.
          schema:
            description: 'Since: cosmos-sdk 0.46'
            properties:
              address:
                type: string
            title: QueryAuthorityResponse is the response type for Query/Authority
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Returns the account with authority to conduct upgrades
      tags:
        - Query
  /cosmos/upgrade/v1beta1/current_plan:
    get:
      operationId: CurrentPlan
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryCurrentPlanResponse is the response type for the
              Query/CurrentPlan RPC

              method.
            properties:
              plan:
                description: plan is the current upgrade plan.
                properties:
                  height:
                    description: The height at which the upgrade must be performed.
                    format: int64
                    type: string
                  info:
                    title: >-
                      Any application specific upgrade info to be included
                      on-chain

                      such as a git commit that validators could automatically
                      upgrade to
                    type: string
                  name:
                    description: >-
                      Sets the name for the upgrade. This name will be used by
                      the upgraded

                      version of the software to apply any special "on-upgrade"
                      commands during

                      the first BeginBlock method after the upgrade is applied.
                      It is also used

                      to detect whether a software version can handle a given
                      upgrade. If no

                      upgrade handler with this name has been set in the
                      software, it will be

                      assumed that the software is out-of-date when the upgrade
                      Time or Height is

                      reached and the software will exit.
                    type: string
                  time:
                    description: >-
                      Deprecated: Time based upgrades have been deprecated. Time
                      based upgrade logic

                      has been removed from the SDK.

                      If this field is not empty, an error will be thrown.
                    format: date-time
                    type: string
                  upgraded_client_state:
                    properties:
                      type_url:
                        type: string
                      value:
                        format: byte
                        type: string
                    type: object
                    description: >-
                      Deprecated: UpgradedClientState field has been deprecated.
                      IBC upgrade logic has been

                      moved to the IBC module in the sub module 02-client.

                      If this field is not empty, an error will be thrown.
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: CurrentPlan queries the current upgrade plan.
      tags:
        - Query
  /cosmos/upgrade/v1beta1/module_versions:
    get:
      description: 'Since: cosmos-sdk 0.43'
      operationId: ModuleVersions
      parameters:
        - description: |-
            module_name is a field to query a specific module
            consensus version from state. Leaving this empty will
            fetch the full list of module versions from state.
          in: query
          name: module_name
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryModuleVersionsResponse is the response type for the
              Query/ModuleVersions

              RPC method.


              Since: cosmos-sdk 0.43
            properties:
              module_versions:
                description: >-
                  module_versions is a list of module names with their consensus
                  versions.
                items:
                  description: |-
                    ModuleVersion specifies a module and its consensus version.

                    Since: cosmos-sdk 0.43
                  properties:
                    name:
                      title: name of the app module
                      type: string
                    version:
                      format: uint64
                      title: consensus version of the app module
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ModuleVersions queries the list of module versions from state.
      tags:
        - Query
  /cosmos/upgrade/v1beta1/upgraded_consensus_state/{last_height}:
    get:
      operationId: UpgradedConsensusState
      parameters:
        - description: |-
            last height of the current chain must be sent in request
            as this is the height under which next consensus state is stored
          format: int64
          in: path
          name: last_height
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryUpgradedConsensusStateResponse is the response type for the
              Query/UpgradedConsensusState

              RPC method.
            properties:
              upgraded_consensus_state:
                format: byte
                title: 'Since: cosmos-sdk 0.43'
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        UpgradedConsensusState queries the consensus state that will serve

        as a trusted kernel for the next version of this chain. It will only be

        stored at the last height of this chain.

        UpgradedConsensusState RPC not supported with legacy querier

        This rpc is deprecated now that IBC has its own replacement

        (https://github.com/cosmos/ibc-go/blob/2c880a22e9f9cc75f62b527ca94aa75ce1106001/proto/ibc/core/client/v1/query.proto#L54)
      tags:
        - Query
  /cosmwasm/wasm/v1/code:
    get:
      operationId: Codes
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              code_infos:
                items:
                  properties:
                    code_id:
                      format: uint64
                      type: string
                    creator:
                      type: string
                    data_hash:
                      format: byte
                      type: string
                    instantiate_permission:
                      description: AccessConfig access control type.
                      properties:
                        addresses:
                          items:
                            type: string
                          type: array
                        permission:
                          default: ACCESS_TYPE_UNSPECIFIED
                          description: >-
                            - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified
                            placeholder for empty value
                             - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                             - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                             - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                          enum:
                            - ACCESS_TYPE_UNSPECIFIED
                            - ACCESS_TYPE_NOBODY
                            - ACCESS_TYPE_EVERYBODY
                            - ACCESS_TYPE_ANY_OF_ADDRESSES
                          title: AccessType permission types
                          type: string
                      type: object
                  title: CodeInfoResponse contains code meta data from CodeInfo
                  type: object
                type: array
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            title: >-
              QueryCodesResponse is the response type for the Query/Codes RPC
              method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Codes gets the metadata for all stored wasm codes
      tags:
        - Query
  /cosmwasm/wasm/v1/code/{code_id}:
    get:
      operationId: Code
      parameters:
        - format: uint64
          in: path
          name: code_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              code_info:
                properties:
                  code_id:
                    format: uint64
                    type: string
                  creator:
                    type: string
                  data_hash:
                    format: byte
                    type: string
                  instantiate_permission:
                    description: AccessConfig access control type.
                    properties:
                      addresses:
                        items:
                          type: string
                        type: array
                      permission:
                        default: ACCESS_TYPE_UNSPECIFIED
                        description: >-
                          - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified
                          placeholder for empty value
                           - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                           - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                           - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                        enum:
                          - ACCESS_TYPE_UNSPECIFIED
                          - ACCESS_TYPE_NOBODY
                          - ACCESS_TYPE_EVERYBODY
                          - ACCESS_TYPE_ANY_OF_ADDRESSES
                        title: AccessType permission types
                        type: string
                    type: object
                title: CodeInfoResponse contains code meta data from CodeInfo
                type: object
              data:
                format: byte
                type: string
            title: >-
              QueryCodeResponse is the response type for the Query/Code RPC
              method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Code gets the binary code and metadata for a singe wasm code
      tags:
        - Query
  /cosmwasm/wasm/v1/code/{code_id}/contracts:
    get:
      operationId: ContractsByCode
      parameters:
        - format: uint64
          in: path
          name: code_id
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              contracts:
                items:
                  type: string
                title: contracts are a set of contract addresses
                type: array
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            title: |-
              QueryContractsByCodeResponse is the response type for the
              Query/ContractsByCode RPC method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ContractsByCode lists all smart contracts for a code id
      tags:
        - Query
  /cosmwasm/wasm/v1/codes/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
            properties:
              params:
                description: params defines the parameters of the module.
                properties:
                  code_upload_access:
                    description: AccessConfig access control type.
                    properties:
                      addresses:
                        items:
                          type: string
                        type: array
                      permission:
                        default: ACCESS_TYPE_UNSPECIFIED
                        description: >-
                          - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified
                          placeholder for empty value
                           - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                           - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                           - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                        enum:
                          - ACCESS_TYPE_UNSPECIFIED
                          - ACCESS_TYPE_NOBODY
                          - ACCESS_TYPE_EVERYBODY
                          - ACCESS_TYPE_ANY_OF_ADDRESSES
                        title: AccessType permission types
                        type: string
                    type: object
                  instantiate_default_permission:
                    default: ACCESS_TYPE_UNSPECIFIED
                    description: >-
                      - ACCESS_TYPE_UNSPECIFIED: AccessTypeUnspecified
                      placeholder for empty value
                       - ACCESS_TYPE_NOBODY: AccessTypeNobody forbidden
                       - ACCESS_TYPE_EVERYBODY: AccessTypeEverybody unrestricted
                       - ACCESS_TYPE_ANY_OF_ADDRESSES: AccessTypeAnyOfAddresses allow any of the addresses
                    enum:
                      - ACCESS_TYPE_UNSPECIFIED
                      - ACCESS_TYPE_NOBODY
                      - ACCESS_TYPE_EVERYBODY
                      - ACCESS_TYPE_ANY_OF_ADDRESSES
                    title: AccessType permission types
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params gets the module params
      tags:
        - Query
  /cosmwasm/wasm/v1/codes/pinned:
    get:
      operationId: PinnedCodes
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              code_ids:
                items:
                  format: uint64
                  type: string
                type: array
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            title: |-
              QueryPinnedCodesResponse is the response type for the
              Query/PinnedCodes RPC method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: PinnedCodes gets the pinned code ids
      tags:
        - Query
  /cosmwasm/wasm/v1/contract/build_address:
    get:
      operationId: BuildAddress
      parameters:
        - description: CodeHash is the hash of the code.
          in: query
          name: code_hash
          required: false
          type: string
        - description: CreatorAddress is the address of the contract instantiator.
          in: query
          name: creator_address
          required: false
          type: string
        - description: Salt is a hex encoded salt.
          in: query
          name: salt
          required: false
          type: string
        - description: >-
            InitArgs are optional json encoded init args to be used in contract
            address

            building if provided.
          format: byte
          in: query
          name: init_args
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryBuildAddressResponse is the response type for the
              Query/BuildAddress RPC

              method.
            properties:
              address:
                title: Address is the contract address
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: BuildAddress builds a contract address
      tags:
        - Query
  /cosmwasm/wasm/v1/contract/{address}:
    get:
      operationId: ContractInfo
      parameters:
        - description: address is the address of the contract to query
          in: path
          name: address
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              address:
                title: address is the address of the contract
                type: string
              contract_info:
                properties:
                  admin:
                    title: Admin is an optional address that can execute migrations
                    type: string
                  code_id:
                    format: uint64
                    title: CodeID is the reference to the stored Wasm code
                    type: string
                  created:
                    description: Created Tx position when the contract was instantiated.
                    properties:
                      block_height:
                        format: uint64
                        title: BlockHeight is the block the contract was created at
                        type: string
                      tx_index:
                        format: uint64
                        title: >-
                          TxIndex is a monotonic counter within the block
                          (actual transaction index,

                          or gas consumed)
                        type: string
                    type: object
                  creator:
                    title: Creator address who initially instantiated the contract
                    type: string
                  extension:
                    properties:
                      type_url:
                        type: string
                      value:
                        format: byte
                        type: string
                    type: object
                    description: >-
                      Extension is an extension point to store custom metadata
                      within the

                      persistence model.
                  ibc_port_id:
                    type: string
                  label:
                    description: >-
                      Label is optional metadata to be stored with a contract
                      instance.
                    type: string
                title: ContractInfo stores a WASM contract instance
                type: object
            title: >-
              QueryContractInfoResponse is the response type for the
              Query/ContractInfo RPC

              method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ContractInfo gets the contract meta data
      tags:
        - Query
  /cosmwasm/wasm/v1/contract/{address}/history:
    get:
      operationId: ContractHistory
      parameters:
        - description: address is the address of the contract to query
          in: path
          name: address
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              entries:
                items:
                  description: ContractCodeHistoryEntry metadata to a contract.
                  properties:
                    code_id:
                      format: uint64
                      title: CodeID is the reference to the stored WASM code
                      type: string
                    msg:
                      format: byte
                      type: string
                    operation:
                      default: CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                      description: >-
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED:
                        ContractCodeHistoryOperationTypeUnspecified placeholder
                        for empty value
                         - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT: ContractCodeHistoryOperationTypeInit on chain contract instantiation
                         - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE: ContractCodeHistoryOperationTypeMigrate code migration
                         - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS: ContractCodeHistoryOperationTypeGenesis based on genesis data
                      enum:
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_UNSPECIFIED
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_INIT
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_MIGRATE
                        - CONTRACT_CODE_HISTORY_OPERATION_TYPE_GENESIS
                      title: >-
                        ContractCodeHistoryOperationType actions that caused a
                        code change
                      type: string
                    updated:
                      description: Updated Tx position when the operation was executed.
                      properties:
                        block_height:
                          format: uint64
                          title: BlockHeight is the block the contract was created at
                          type: string
                        tx_index:
                          format: uint64
                          title: >-
                            TxIndex is a monotonic counter within the block
                            (actual transaction index,

                            or gas consumed)
                          type: string
                      type: object
                  type: object
                type: array
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            title: |-
              QueryContractHistoryResponse is the response type for the
              Query/ContractHistory RPC method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ContractHistory gets the contract code history
      tags:
        - Query
  /cosmwasm/wasm/v1/contract/{address}/raw/{query_data}:
    get:
      operationId: RawContractState
      parameters:
        - description: address is the address of the contract
          in: path
          name: address
          required: true
          type: string
        - format: byte
          in: path
          name: query_data
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              data:
                format: byte
                title: Data contains the raw store data
                type: string
            title: |-
              QueryRawContractStateResponse is the response type for the
              Query/RawContractState RPC method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: RawContractState gets single key from the raw store data of a contract
      tags:
        - Query
  /cosmwasm/wasm/v1/contract/{address}/smart/{query_data}:
    get:
      operationId: SmartContractState
      parameters:
        - description: address is the address of the contract
          in: path
          name: address
          required: true
          type: string
        - description: QueryData contains the query data passed to the contract
          format: byte
          in: path
          name: query_data
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              data:
                format: byte
                title: Data contains the json data returned from the smart contract
                type: string
            title: |-
              QuerySmartContractStateResponse is the response type for the
              Query/SmartContractState RPC method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: SmartContractState get smart query result from the contract
      tags:
        - Query
  /cosmwasm/wasm/v1/contract/{address}/state:
    get:
      operationId: AllContractState
      parameters:
        - description: address is the address of the contract
          in: path
          name: address
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              models:
                items:
                  properties:
                    key:
                      format: byte
                      title: hex-encode key to read it better (this is often ascii)
                      type: string
                    value:
                      format: byte
                      title: base64-encode raw value
                      type: string
                  title: Model is a struct that holds a KV pair
                  type: object
                type: array
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            title: |-
              QueryAllContractStateResponse is the response type for the
              Query/AllContractState RPC method
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: AllContractState gets all raw store data for a single contract
      tags:
        - Query
  /cosmwasm/wasm/v1/contracts/creator/{creator_address}:
    get:
      operationId: ContractsByCreator
      parameters:
        - description: CreatorAddress is the address of contract creator
          in: path
          name: creator_address
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: |-
              QueryContractsByCreatorResponse is the response type for the
              Query/ContractsByCreator RPC method.
            properties:
              contract_addresses:
                items:
                  type: string
                title: ContractAddresses result set
                type: array
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: ContractsByCreator gets the contracts by creator
      tags:
        - Query
  /feemarket/v1/gas_price/{denom}:
    get:
      operationId: GasPrice
      parameters:
        - description: denom we are querying gas price in
          in: path
          name: denom
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              GasPriceResponse is the response type for the Query/GasPrice RPC
              method.

              Returns a gas price in specified denom.
            properties:
              price:
                description: >-
                  DecCoin defines a token with a denomination and a decimal
                  amount.


                  NOTE: The amount field is an Dec which implements the custom
                  method

                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: |-
        GasPrice returns the current feemarket module gas price
        for specified denom.
      tags:
        - Query
  /feemarket/v1/gas_prices:
    get:
      operationId: GasPrices
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              GasPricesResponse is the response type for the Query/GasPrices RPC
              method.

              Returns a gas price in all available denoms.
            properties:
              prices:
                items:
                  description: >-
                    DecCoin defines a token with a denomination and a decimal
                    amount.


                    NOTE: The amount field is an Dec which implements the custom
                    method

                    signatures required by gogoproto.
                  properties:
                    amount:
                      type: string
                    denom:
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: |-
        GasPrices returns the current feemarket module list of gas prices
        in all available denoms.
      tags:
        - Query
  /feemarket/v1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              ParamsResponse is the response type for the Query/Params RPC
              method.
            properties:
              params:
                description: >-
                  Params contains the required set of parameters for the EIP1559
                  fee market

                  plugin implementation.
                properties:
                  alpha:
                    description: >-
                      Alpha is the amount we additively increase the learning
                      rate

                      when it is above or below the target +/- threshold.


                      Must be > 0.
                    type: string
                  beta:
                    description: >-
                      Beta is the amount we multiplicatively decrease the
                      learning rate

                      when it is within the target +/- threshold.


                      Must be [0, 1].
                    type: string
                  delta:
                    description: >-
                      Delta is the amount we additively increase/decrease the
                      gas price when the

                      net block utilization difference in the window is
                      above/below the target

                      utilization.
                    type: string
                  distribute_fees:
                    description: >-
                      DistributeFees is a boolean that determines whether the
                      fees are burned or

                      distributed to all stakers.
                    type: boolean
                  enabled:
                    description: >-
                      Enabled is a boolean that determines whether the EIP1559
                      fee market is

                      enabled.
                    type: boolean
                  fee_denom:
                    description: >-
                      FeeDenom is the denom that will be used for all fee
                      payments.
                    type: string
                  gamma:
                    description: >-
                      Gamma is the threshold for the learning rate. If the
                      learning rate is

                      above or below the target +/- threshold, we additively
                      increase the

                      learning rate by Alpha. Otherwise, we multiplicatively
                      decrease the

                      learning rate by Beta.


                      Must be [0, 0.5].
                    type: string
                  max_block_utilization:
                    description: MaxBlockUtilization is the maximum block utilization.
                    format: uint64
                    type: string
                  max_learning_rate:
                    description: MaxLearningRate is the upper bound for the learning rate.
                    type: string
                  min_base_gas_price:
                    description: >-
                      MinBaseGasPrice determines the initial gas price of the
                      module and the

                      global minimum for the network.
                    type: string
                  min_learning_rate:
                    description: MinLearningRate is the lower bound for the learning rate.
                    type: string
                  window:
                    description: >-
                      Window defines the window size for calculating an adaptive
                      learning rate

                      over a moving window of blocks.
                    format: uint64
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params returns the current feemarket module parameters.
      tags:
        - Query
  /feemarket/v1/state:
    get:
      operationId: State
      responses:
        '200':
          description: A successful response.
          schema:
            description: StateResponse is the response type for the Query/State RPC method.
            properties:
              state:
                description: >-
                  State is utilized to track the current state of the fee
                  market. This includes

                  the current base fee, learning rate, and block utilization
                  within the

                  specified AIMD window.
                properties:
                  base_gas_price:
                    description: >-
                      BaseGasPrice is the current base fee. This is denominated
                      in the fee per

                      gas unit.
                    type: string
                  index:
                    description: >-
                      Index is the index of the current block in the block
                      utilization window.
                    format: uint64
                    type: string
                  learning_rate:
                    description: LearningRate is the current learning rate.
                    type: string
                  window:
                    description: >-
                      Window contains a list of the last blocks' utilization
                      values. This is used

                      to calculate the next base fee. This stores the number of
                      units of gas

                      consumed per block.
                    items:
                      format: uint64
                      type: string
                    type: array
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: State returns the current feemarket module state.
      tags:
        - Query
  /gaia/globalfee/v1beta1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: |-
              QueryMinimumGasPricesResponse is the response type for the
              Query/MinimumGasPrices RPC method.
            properties:
              params:
                description: Params defines the set of module parameters.
                properties:
                  bypass_min_fee_msg_types:
                    description: >-
                      bypass_min_fee_msg_types defines a list of message type
                      urls

                      that are free of fee charge.
                    items:
                      type: string
                    type: array
                  max_total_bypass_min_fee_msg_gas_usage:
                    description: >-
                      max_total_bypass_min_fee_msg_gas_usage defines the total
                      maximum gas usage

                      allowed for a transaction containing only messages of
                      types in bypass_min_fee_msg_types

                      to bypass fee charge.
                    format: uint64
                    type: string
                  minimum_gas_prices:
                    items:
                      description: >-
                        DecCoin defines a token with a denomination and a
                        decimal amount.


                        NOTE: The amount field is an Dec which implements the
                        custom method

                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: >-
                      minimum_gas_prices stores the minimum gas price(s) for all
                      TX on the chain.

                      When multiple coins are defined then they are accepted
                      alternatively.

                      The list must be sorted by denoms asc. No duplicate denoms
                      or zero amount

                      values allowed. For more information see

                      https://docs.cosmos.network/main/modules/auth#concepts
                    type: array
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
        - Query
  /ibc/apps/packetforward/v1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
            properties:
              params:
                description: params defines the parameters of the module.
                properties:
                  fee_percentage:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params queries all parameters of the packetforward module.
      tags:
        - Query
  /ibc/apps/transfer/v1/denom_hashes/{trace}:
    get:
      operationId: DenomHash
      parameters:
        - description: The denomination trace ([port_id]/[channel_id])+/[denom]
          in: path
          name: trace
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryDenomHashResponse is the response type for the
              Query/DenomHash RPC

              method.
            properties:
              hash:
                description: hash (in hex format) of the denomination trace information.
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: DenomHash queries a denomination hash information.
      tags:
        - Query
  /ibc/apps/transfer/v1/denom_traces:
    get:
      operationId: DenomTraces
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryConnectionsResponse is the response type for the
              Query/DenomTraces RPC

              method.
            properties:
              denom_traces:
                description: denom_traces returns all denominations trace information.
                items:
                  description: >-
                    DenomTrace contains the base denomination for ICS20 fungible
                    tokens and the

                    source tracing information path.
                  properties:
                    base_denom:
                      description: base denomination of the relayed fungible token.
                      type: string
                    path:
                      description: >-
                        path defines the chain of port/channel identifiers used
                        for tracing the

                        source of the fungible token.
                      type: string
                  type: object
                type: array
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: DenomTraces queries all denomination traces.
      tags:
        - Query
  /ibc/apps/transfer/v1/denom_traces/{hash}:
    get:
      operationId: DenomTrace
      parameters:
        - description: >-
            hash (in hex format) or denom (full denom with ibc prefix) of the
            denomination trace information.
          in: path
          name: hash
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryDenomTraceResponse is the response type for the
              Query/DenomTrace RPC

              method.
            properties:
              denom_trace:
                description: >-
                  denom_trace returns the requested denomination trace
                  information.
                properties:
                  base_denom:
                    description: base denomination of the relayed fungible token.
                    type: string
                  path:
                    description: >-
                      path defines the chain of port/channel identifiers used
                      for tracing the

                      source of the fungible token.
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: DenomTrace queries a denomination trace information.
      tags:
        - Query
  /ibc/apps/transfer/v1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
            properties:
              params:
                description: params defines the parameters of the module.
                properties:
                  receive_enabled:
                    description: >-
                      receive_enabled enables or disables all cross-chain token
                      transfers to this

                      chain.
                    type: boolean
                  send_enabled:
                    description: >-
                      send_enabled enables or disables all cross-chain token
                      transfers from this

                      chain.
                    type: boolean
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params queries all parameters of the ibc-transfer module.
      tags:
        - Query
  /interchain_security/ccv/consumer/next-fee-distribution:
    get:
      operationId: QueryNextFeeDistribution
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              data:
                properties:
                  currentHeight:
                    format: int64
                    title: current block height at the time of querying
                    type: string
                  distribution_fraction:
                    title: ratio between consumer and provider fee distribution
                    type: string
                  lastHeight:
                    format: int64
                    title: block height at which last distribution took place
                    type: string
                  nextHeight:
                    format: int64
                    title: block height at which next distribution will take place
                    type: string
                  toConsumer:
                    title: amount distributed (kept) by consumer chain
                    type: string
                  toProvider:
                    title: amount distributed to provider chain
                    type: string
                  total:
                    title: total accruead fees at the time of querying
                    type: string
                title: >-
                  NextFeeDistributionEstimate holds information about next fee
                  distribution
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        ConsumerGenesis queries the genesis state needed to start a consumer
        chain

        whose proposal has been accepted
      tags:
        - Query
  /interchain_security/ccv/consumer/params:
    get:
      operationId: QueryParams
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
            properties:
              params:
                description: params holds all the parameters of this module.
                properties:
                  blocks_per_distribution_transmission:
                    description: >-
                      /////////////////////

                      Distribution Params

                      Number of blocks between ibc-token-transfers from the
                      consumer chain to

                      the provider chain. Note that at this transmission event a
                      fraction of

                      the accumulated tokens are divided and sent consumer
                      redistribution

                      address.
                    format: int64
                    type: string
                  ccv_timeout_period:
                    title: >-
                      Sent CCV related IBC packets will timeout after this
                      duration
                    type: string
                  consumer_redistribution_fraction:
                    description: >-
                      The fraction of tokens allocated to the consumer
                      redistribution address

                      during distribution events. The fraction is a string
                      representing a

                      decimal number. For example "0.75" would represent 75%.
                    type: string
                  distribution_transmission_channel:
                    description: >-
                      Channel, and provider-chain receiving address to send
                      distribution token

                      transfers over. These parameters is auto-set during the
                      consumer <->

                      provider handshake procedure.
                    type: string
                  enabled:
                    title: >-
                      TODO: Remove enabled flag and find a better way to setup
                      integration tests

                      See:
                      https://github.com/cosmos/interchain-security/issues/339
                    type: boolean
                  historical_entries:
                    description: >-
                      The number of historical info entries to persist in store.

                      This param is a part of the cosmos sdk staking module. In
                      the case of

                      a ccv enabled consumer chain, the ccv module acts as the
                      staking module.
                    format: int64
                    type: string
                  provider_fee_pool_addr_str:
                    type: string
                  provider_reward_denoms:
                    items:
                      type: string
                    title: >-
                      Provider-originated reward denoms. These are denoms coming
                      from the

                      provider which are allowed to be used as rewards. e.g.
                      "uatom"
                    type: array
                  retry_delay_period:
                    description: >-
                      The period after which a consumer can retry sending a
                      throttled packet.
                    type: string
                  reward_denoms:
                    description: >-
                      Reward denoms. These are the denominations which are
                      allowed to be sent to

                      the provider as rewards.
                    items:
                      type: string
                    type: array
                  soft_opt_out_threshold:
                    title: >-
                      !!! DEPRECATED !!! soft_opt_out_threshold is deprecated.
                      see docs/docs/adrs/adr-015-partial-set-security.md
                    type: string
                  transfer_timeout_period:
                    title: >-
                      Sent transfer related IBC packets will timeout after this
                      duration
                    type: string
                  unbonding_period:
                    description: >-
                      Unbonding period for the consumer,

                      which should be smaller than that of the provider in
                      general.
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: QueryParams queries the ccv/consumer module parameters.
      tags:
        - Query
  /interchain_security/ccv/consumer/provider-info:
    get:
      operationId: QueryProviderInfo
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              consumer:
                properties:
                  chainID:
                    type: string
                  channelID:
                    type: string
                  clientID:
                    type: string
                  connectionID:
                    type: string
                type: object
              provider:
                properties:
                  chainID:
                    type: string
                  channelID:
                    type: string
                  clientID:
                    type: string
                  connectionID:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
        - Query
  /interchain_security/ccv/consumer/throttle_state:
    get:
      operationId: QueryThrottleState
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              packet_data_queue:
                items:
                  properties:
                    slashPacketData:
                      description: >-
                        This packet is sent from the consumer chain to the
                        provider chain

                        to request the slashing of a validator as a result of an
                        infraction

                        committed on the consumer chain.
                      properties:
                        infraction:
                          title: >-
                            tell if the slashing is for a downtime or a
                            double-signing infraction
                          default: INFRACTION_UNSPECIFIED
                          description: >-
                            Infraction indicates the infraction a validator
                            commited.

                             - INFRACTION_UNSPECIFIED: UNSPECIFIED defines an empty infraction.
                             - INFRACTION_DOUBLE_SIGN: DOUBLE_SIGN defines a validator that double-signs a block.
                             - INFRACTION_DOWNTIME: DOWNTIME defines a validator that missed signing too many blocks.
                          enum:
                            - INFRACTION_UNSPECIFIED
                            - INFRACTION_DOUBLE_SIGN
                            - INFRACTION_DOWNTIME
                          type: string
                        validator:
                          properties:
                            address:
                              format: byte
                              type: string
                            power:
                              format: int64
                              title: PubKey pub_key = 2 [(gogoproto.nullable)=false];
                              type: string
                          type: object
                        valset_update_id:
                          format: uint64
                          title: map to the infraction block height on the provider
                          type: string
                      type: object
                    type:
                      default: CONSUMER_PACKET_TYPE_UNSPECIFIED
                      description: >-
                        ConsumerPacketType indicates interchain security
                        specific packet types.

                         - CONSUMER_PACKET_TYPE_UNSPECIFIED: UNSPECIFIED packet type
                         - CONSUMER_PACKET_TYPE_SLASH: Slash packet
                         - CONSUMER_PACKET_TYPE_VSCM: VSCMatured packet
                      enum:
                        - CONSUMER_PACKET_TYPE_UNSPECIFIED
                        - CONSUMER_PACKET_TYPE_SLASH
                        - CONSUMER_PACKET_TYPE_VSCM
                      type: string
                    vscMaturedPacketData:
                      description: >-
                        This packet is sent from the consumer chain to the
                        provider chain

                        to notify that a VSC packet reached maturity on the
                        consumer chain.
                      properties:
                        valset_update_id:
                          format: uint64
                          title: the id of the VSC packet that reached maturity
                          type: string
                      type: object
                  title: >-
                    ConsumerPacketData contains a consumer packet data and a
                    type tag
                  type: object
                type: array
              slash_record:
                description: >-
                  A record storing the state of a slash packet sent to the
                  provider chain

                  which may bounce back and forth until handled by the provider.


                  Note this type is only used internally to the consumer CCV
                  module.
                properties:
                  send_time:
                    format: date-time
                    type: string
                  waiting_on_reply:
                    type: boolean
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        QueryThrottleState returns on-chain state relevant to throttled consumer
        packets
      tags:
        - Query
  /neutron-org/neutron/feerefunder/info:
    get:
      operationId: FeeInfo
      parameters:
        - in: query
          name: channel_id
          required: false
          type: string
        - in: query
          name: port_id
          required: false
          type: string
        - format: uint64
          in: query
          name: sequence
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              fee_info:
                properties:
                  fee:
                    properties:
                      ack_fee:
                        items:
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        title: the packet acknowledgement fee
                        type: array
                      recv_fee:
                        items:
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        title: the packet receive fee
                        type: array
                      timeout_fee:
                        items:
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        title: the packet timeout fee
                        type: array
                    title: >-
                      Fee defines the ICS29 receive, acknowledgement and timeout
                      fees
                    type: object
                  packet_id:
                    properties:
                      channel_id:
                        type: string
                      port_id:
                        type: string
                      sequence:
                        format: uint64
                        type: string
                    type: object
                  payer:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
        - Query
  /neutron-org/neutron/feerefunder/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
            properties:
              params:
                description: params holds all the parameters of this module.
                properties:
                  min_fee:
                    properties:
                      ack_fee:
                        items:
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        title: the packet acknowledgement fee
                        type: array
                      recv_fee:
                        items:
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        title: the packet receive fee
                        type: array
                      timeout_fee:
                        items:
                          description: >-
                            Coin defines a token with a denomination and an
                            amount.


                            NOTE: The amount field is an Int which implements
                            the custom method

                            signatures required by gogoproto.
                          properties:
                            amount:
                              type: string
                            denom:
                              type: string
                          type: object
                        title: the packet timeout fee
                        type: array
                    title: >-
                      Fee defines the ICS29 receive, acknowledgement and timeout
                      fees
                    type: object
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Parameters queries the parameters of the module.
      tags:
        - Query
  /neutron/contractmanager/failures:
    get:
      operationId: Failures
      parameters:
        - description: address of the contract which Sudo call failed.
          in: query
          name: address
          required: false
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryFailuresResponse is response type for the Query/Failures RPC
              method.
            properties:
              failures:
                items:
                  properties:
                    address:
                      title: Address of the failed contract
                      type: string
                    error:
                      title: >-
                        Redacted error response of the sudo call. Full error is
                        emitted as an event
                      type: string
                    id:
                      format: uint64
                      title: Id of the failure under specific address
                      type: string
                    sudo_payload:
                      format: byte
                      title: >-
                        Serialized MessageSudoCallback with Packet and Ack(if
                        exists)
                      type: string
                  title: >-
                    Failure message contains information about ACK failures and
                    can be used to

                    replay ACK in case of requirement.

                    Note that Failure means that sudo handler to cosmwasm
                    contract failed for

                    some reason
                  type: object
                type: array
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a list of Failures occurred on the network.
      tags:
        - Query
  /neutron/contractmanager/failures/{address}:
    get:
      operationId: AddressFailures
      parameters:
        - description: address of the contract which Sudo call failed.
          in: path
          name: address
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryFailuresResponse is response type for the Query/Failures RPC
              method.
            properties:
              failures:
                items:
                  properties:
                    address:
                      title: Address of the failed contract
                      type: string
                    error:
                      title: >-
                        Redacted error response of the sudo call. Full error is
                        emitted as an event
                      type: string
                    id:
                      format: uint64
                      title: Id of the failure under specific address
                      type: string
                    sudo_payload:
                      format: byte
                      title: >-
                        Serialized MessageSudoCallback with Packet and Ack(if
                        exists)
                      type: string
                  title: >-
                    Failure message contains information about ACK failures and
                    can be used to

                    replay ACK in case of requirement.

                    Note that Failure means that sudo handler to cosmwasm
                    contract failed for

                    some reason
                  type: object
                type: array
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries Failures by contract address.
      tags:
        - Query
  /neutron/contractmanager/failures/{address}/{failure_id}:
    get:
      operationId: AddressFailure
      parameters:
        - description: address of the contract which Sudo call failed.
          in: path
          name: address
          required: true
          type: string
        - description: ID of the failure for the given contract.
          format: uint64
          in: path
          name: failure_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryFailureResponse is response type for the Query/Failure RPC
              method.
            properties:
              failure:
                properties:
                  address:
                    title: Address of the failed contract
                    type: string
                  error:
                    title: >-
                      Redacted error response of the sudo call. Full error is
                      emitted as an event
                    type: string
                  id:
                    format: uint64
                    title: Id of the failure under specific address
                    type: string
                  sudo_payload:
                    format: byte
                    title: >-
                      Serialized MessageSudoCallback with Packet and Ack(if
                      exists)
                    type: string
                title: >-
                  Failure message contains information about ACK failures and
                  can be used to

                  replay ACK in case of requirement.

                  Note that Failure means that sudo handler to cosmwasm contract
                  failed for

                  some reason
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a Failure by contract address and failure ID.
      tags:
        - Query
  /neutron/contractmanager/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
            properties:
              params:
                description: params holds all the parameters of this module.
                properties:
                  sudo_call_gas_limit:
                    format: uint64
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Parameters queries the parameters of the module.
      tags:
        - Query
  /neutron/cron/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: The response type for the Query/Params RPC method.
            properties:
              params:
                description: params holds all the parameters of this module.
                properties:
                  limit:
                    format: uint64
                    title: Limit of schedules executed in one block
                    type: string
                  security_address:
                    title: Security address that can remove schedules
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries the parameters of the module.
      tags:
        - Query
  /neutron/cron/schedule:
    get:
      operationId: Schedules
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: The response type for the Query/Params RPC method.
            properties:
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
              schedules:
                items:
                  properties:
                    execution_stage:
                      title: Stage when messages will be executed
                      default: EXECUTION_STAGE_END_BLOCKER
                      description: >-
                        - EXECUTION_STAGE_END_BLOCKER: Execution at the end of
                        the block
                         - EXECUTION_STAGE_BEGIN_BLOCKER: Execution at the beginning of the block
                      enum:
                        - EXECUTION_STAGE_END_BLOCKER
                        - EXECUTION_STAGE_BEGIN_BLOCKER
                      type: string
                    last_execute_height:
                      format: uint64
                      title: Last execution's block height
                      type: string
                    msgs:
                      items:
                        properties:
                          contract:
                            title: The address of the smart contract
                            type: string
                          msg:
                            title: JSON encoded message to be passed to the contract
                            type: string
                        title: Defines the contract and the message to pass
                        type: object
                      title: >-
                        Msgs that will be executed every certain number of
                        blocks, specified in the `period` field
                      type: array
                    name:
                      title: Name of schedule
                      type: string
                    period:
                      format: uint64
                      title: Period in blocks
                      type: string
                  title: Defines the schedule for execution
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a list of Schedule items.
      tags:
        - Query
  /neutron/cron/schedule/{name}:
    get:
      operationId: Schedule
      parameters:
        - in: path
          name: name
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: The response type for the Query/Params RPC method.
            properties:
              schedule:
                properties:
                  execution_stage:
                    title: Stage when messages will be executed
                    default: EXECUTION_STAGE_END_BLOCKER
                    description: >-
                      - EXECUTION_STAGE_END_BLOCKER: Execution at the end of the
                      block
                       - EXECUTION_STAGE_BEGIN_BLOCKER: Execution at the beginning of the block
                    enum:
                      - EXECUTION_STAGE_END_BLOCKER
                      - EXECUTION_STAGE_BEGIN_BLOCKER
                    type: string
                  last_execute_height:
                    format: uint64
                    title: Last execution's block height
                    type: string
                  msgs:
                    items:
                      properties:
                        contract:
                          title: The address of the smart contract
                          type: string
                        msg:
                          title: JSON encoded message to be passed to the contract
                          type: string
                      title: Defines the contract and the message to pass
                      type: object
                    title: >-
                      Msgs that will be executed every certain number of blocks,
                      specified in the `period` field
                    type: array
                  name:
                    title: Name of schedule
                    type: string
                  period:
                    format: uint64
                    title: Period in blocks
                    type: string
                title: Defines the schedule for execution
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a Schedule by name.
      tags:
        - Query
  /neutron/dex/estimate_multi_hop_swap:
    get:
      operationId: EstimateMultiHopSwap
      parameters:
        - description: 'DEPRECATED: Use QuerySimulateMultiHopSwap.'
          in: query
          name: creator
          required: false
          type: string
        - in: query
          name: receiver
          required: false
          type: string
        - in: query
          name: amount_in
          required: false
          type: string
        - in: query
          name: exit_limit_price
          required: false
          type: string
        - description: >-
            If pickBestRoute == true then all routes are run and the route with
            the

            best price is chosen otherwise, the first succesful route is used.
          in: query
          name: pick_best_route
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              coin_out:
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: DEPRECATED Queries the simulated result of a multihop swap
      tags:
        - Query
  /neutron/dex/estimate_place_limit_order:
    get:
      operationId: EstimatePlaceLimitOrder
      parameters:
        - description: 'DEPRECATED: Use QuerySimulatePlaceLimitOrder.'
          in: query
          name: creator
          required: false
          type: string
        - in: query
          name: receiver
          required: false
          type: string
        - in: query
          name: token_in
          required: false
          type: string
        - in: query
          name: token_out
          required: false
          type: string
        - format: int64
          in: query
          name: tick_index_in_to_out
          required: false
          type: string
        - in: query
          name: amount_in
          required: false
          type: string
        - default: GOOD_TIL_CANCELLED
          enum:
            - GOOD_TIL_CANCELLED
            - FILL_OR_KILL
            - IMMEDIATE_OR_CANCEL
            - JUST_IN_TIME
            - GOOD_TIL_TIME
          in: query
          name: order_type
          required: false
          type: string
        - description: expirationTime is only valid iff orderType == GOOD_TIL_TIME.
          format: date-time
          in: query
          name: expiration_time
          required: false
          type: string
        - in: query
          name: maxAmount_out
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              swap_in_coin:
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
                title: >-
                  Total amount of the token in that was immediately swapped for
                  swapOutCoin
              swap_out_coin:
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
                title: >-
                  Total amount of coin received from the taker portion of the
                  limit order

                  This is the amount of coin immediately available in the users
                  account after

                  executing the limit order. It does not include any future
                  proceeds from the

                  maker portion which will have withdrawn in the future
              total_in_coin:
                description: >-
                  Coin defines a token with a denomination and an amount.


                  NOTE: The amount field is an Int which implements the custom
                  method

                  signatures required by gogoproto.
                properties:
                  amount:
                    type: string
                  denom:
                    type: string
                type: object
                title: >-
                  Total amount of coin used for the limit order

                  You can derive makerLimitInCoin using the equation:
                  totalInCoin =

                  swapInCoin + makerLimitInCoin
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: DEPRECATED Queries the simulated result of a PlaceLimit order
      tags:
        - Query
  /neutron/dex/filled_limit_order_tranche:
    get:
      operationId: InactiveLimitOrderTrancheAll2
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              inactive_limit_order_tranche:
                items:
                  properties:
                    expiration_time:
                      format: date-time
                      title: >-
                        JIT orders also use expiration_time to handle deletion
                        but represent a special case

                        All JIT orders have a expiration_time of 0 and an
                        exception is made to still treat these orders as live

                        Order deletion still functions the same and the orders
                        will be deleted at the end of the block
                      type: string
                    key:
                      properties:
                        tick_index_taker_to_maker:
                          format: int64
                          type: string
                        trade_pair_id:
                          properties:
                            maker_denom:
                              type: string
                            taker_denom:
                              type: string
                          type: object
                        tranche_key:
                          type: string
                      type: object
                    maker_price:
                      title: >-
                        This is the price of the LimitOrder denominated in the
                        opposite token. (ie. 1 TokenA with a maker_price of 10
                        is worth 10 TokenB )
                      type: string
                    price_taker_to_maker:
                      description: >-
                        DEPRECATED: price_taker_to_maker will be removed in
                        future release, `maker_price` should always be used.
                      type: string
                    reserves_maker_denom:
                      type: string
                    reserves_taker_denom:
                      type: string
                    total_maker_denom:
                      type: string
                    total_taker_denom:
                      type: string
                  type: object
                type: array
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a list of InactiveLimitOrderTranche items.
      tags:
        - Query
  /neutron/dex/filled_limit_order_tranche/{pair_id}/{token_in}/{tick_index}/{tranche_key}:
    get:
      operationId: InactiveLimitOrderTranche2
      parameters:
        - in: path
          name: pair_id
          required: true
          type: string
        - in: path
          name: token_in
          required: true
          type: string
        - format: int64
          in: path
          name: tick_index
          required: true
          type: string
        - in: path
          name: tranche_key
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              inactive_limit_order_tranche:
                properties:
                  expiration_time:
                    format: date-time
                    title: >-
                      JIT orders also use expiration_time to handle deletion but
                      represent a special case

                      All JIT orders have a expiration_time of 0 and an
                      exception is made to still treat these orders as live

                      Order deletion still functions the same and the orders
                      will be deleted at the end of the block
                    type: string
                  key:
                    properties:
                      tick_index_taker_to_maker:
                        format: int64
                        type: string
                      trade_pair_id:
                        properties:
                          maker_denom:
                            type: string
                          taker_denom:
                            type: string
                        type: object
                      tranche_key:
                        type: string
                    type: object
                  maker_price:
                    title: >-
                      This is the price of the LimitOrder denominated in the
                      opposite token. (ie. 1 TokenA with a maker_price of 10 is
                      worth 10 TokenB )
                    type: string
                  price_taker_to_maker:
                    description: >-
                      DEPRECATED: price_taker_to_maker will be removed in future
                      release, `maker_price` should always be used.
                    type: string
                  reserves_maker_denom:
                    type: string
                  reserves_taker_denom:
                    type: string
                  total_maker_denom:
                    type: string
                  total_taker_denom:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a InactiveLimitOrderTranche by index.
      tags:
        - Query
  /neutron/dex/inactive_limit_order_tranche:
    get:
      operationId: InactiveLimitOrderTrancheAll
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              inactive_limit_order_tranche:
                items:
                  properties:
                    expiration_time:
                      format: date-time
                      title: >-
                        JIT orders also use expiration_time to handle deletion
                        but represent a special case

                        All JIT orders have a expiration_time of 0 and an
                        exception is made to still treat these orders as live

                        Order deletion still functions the same and the orders
                        will be deleted at the end of the block
                      type: string
                    key:
                      properties:
                        tick_index_taker_to_maker:
                          format: int64
                          type: string
                        trade_pair_id:
                          properties:
                            maker_denom:
                              type: string
                            taker_denom:
                              type: string
                          type: object
                        tranche_key:
                          type: string
                      type: object
                    maker_price:
                      title: >-
                        This is the price of the LimitOrder denominated in the
                        opposite token. (ie. 1 TokenA with a maker_price of 10
                        is worth 10 TokenB )
                      type: string
                    price_taker_to_maker:
                      description: >-
                        DEPRECATED: price_taker_to_maker will be removed in
                        future release, `maker_price` should always be used.
                      type: string
                    reserves_maker_denom:
                      type: string
                    reserves_taker_denom:
                      type: string
                    total_maker_denom:
                      type: string
                    total_taker_denom:
                      type: string
                  type: object
                type: array
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a list of InactiveLimitOrderTranche items.
      tags:
        - Query
  /neutron/dex/inactive_limit_order_tranche/{pair_id}/{token_in}/{tick_index}/{tranche_key}:
    get:
      operationId: InactiveLimitOrderTranche
      parameters:
        - in: path
          name: pair_id
          required: true
          type: string
        - in: path
          name: token_in
          required: true
          type: string
        - format: int64
          in: path
          name: tick_index
          required: true
          type: string
        - in: path
          name: tranche_key
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              inactive_limit_order_tranche:
                properties:
                  expiration_time:
                    format: date-time
                    title: >-
                      JIT orders also use expiration_time to handle deletion but
                      represent a special case

                      All JIT orders have a expiration_time of 0 and an
                      exception is made to still treat these orders as live

                      Order deletion still functions the same and the orders
                      will be deleted at the end of the block
                    type: string
                  key:
                    properties:
                      tick_index_taker_to_maker:
                        format: int64
                        type: string
                      trade_pair_id:
                        properties:
                          maker_denom:
                            type: string
                          taker_denom:
                            type: string
                        type: object
                      tranche_key:
                        type: string
                    type: object
                  maker_price:
                    title: >-
                      This is the price of the LimitOrder denominated in the
                      opposite token. (ie. 1 TokenA with a maker_price of 10 is
                      worth 10 TokenB )
                    type: string
                  price_taker_to_maker:
                    description: >-
                      DEPRECATED: price_taker_to_maker will be removed in future
                      release, `maker_price` should always be used.
                    type: string
                  reserves_maker_denom:
                    type: string
                  reserves_taker_denom:
                    type: string
                  total_maker_denom:
                    type: string
                  total_taker_denom:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a InactiveLimitOrderTranche by index.
      tags:
        - Query
  /neutron/dex/limit_order_tranche/{pair_id}/{token_in}:
    get:
      operationId: LimitOrderTrancheAll
      parameters:
        - in: path
          name: pair_id
          required: true
          type: string
        - in: path
          name: token_in
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              limit_order_tranche:
                items:
                  properties:
                    expiration_time:
                      format: date-time
                      title: >-
                        JIT orders also use expiration_time to handle deletion
                        but represent a special case

                        All JIT orders have a expiration_time of 0 and an
                        exception is made to still treat these orders as live

                        Order deletion still functions the same and the orders
                        will be deleted at the end of the block
                      type: string
                    key:
                      properties:
                        tick_index_taker_to_maker:
                          format: int64
                          type: string
                        trade_pair_id:
                          properties:
                            maker_denom:
                              type: string
                            taker_denom:
                              type: string
                          type: object
                        tranche_key:
                          type: string
                      type: object
                    maker_price:
                      title: >-
                        This is the price of the LimitOrder denominated in the
                        opposite token. (ie. 1 TokenA with a maker_price of 10
                        is worth 10 TokenB )
                      type: string
                    price_taker_to_maker:
                      description: >-
                        DEPRECATED: price_taker_to_maker will be removed in
                        future release, `maker_price` should always be used.
                      type: string
                    reserves_maker_denom:
                      type: string
                    reserves_taker_denom:
                      type: string
                    total_maker_denom:
                      type: string
                    total_taker_denom:
                      type: string
                  type: object
                type: array
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: |-
        Queries a list of LimitOrderTranche items for a given pairID / TokenIn
        combination.
      tags:
        - Query
  /neutron/dex/limit_order_tranche/{pair_id}/{token_in}/{tick_index}/{tranche_key}:
    get:
      operationId: LimitOrderTranche
      parameters:
        - in: path
          name: pair_id
          required: true
          type: string
        - in: path
          name: token_in
          required: true
          type: string
        - format: int64
          in: path
          name: tick_index
          required: true
          type: string
        - in: path
          name: tranche_key
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              limit_order_tranche:
                properties:
                  expiration_time:
                    format: date-time
                    title: >-
                      JIT orders also use expiration_time to handle deletion but
                      represent a special case

                      All JIT orders have a expiration_time of 0 and an
                      exception is made to still treat these orders as live

                      Order deletion still functions the same and the orders
                      will be deleted at the end of the block
                    type: string
                  key:
                    properties:
                      tick_index_taker_to_maker:
                        format: int64
                        type: string
                      trade_pair_id:
                        properties:
                          maker_denom:
                            type: string
                          taker_denom:
                            type: string
                        type: object
                      tranche_key:
                        type: string
                    type: object
                  maker_price:
                    title: >-
                      This is the price of the LimitOrder denominated in the
                      opposite token. (ie. 1 TokenA with a maker_price of 10 is
                      worth 10 TokenB )
                    type: string
                  price_taker_to_maker:
                    description: >-
                      DEPRECATED: price_taker_to_maker will be removed in future
                      release, `maker_price` should always be used.
                    type: string
                  reserves_maker_denom:
                    type: string
                  reserves_taker_denom:
                    type: string
                  total_maker_denom:
                    type: string
                  total_taker_denom:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a LimitOrderTranche by index.
      tags:
        - Query
  /neutron/dex/limit_order_tranche_user:
    get:
      operationId: LimitOrderTrancheUserAll
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              limit_order_tranche_user:
                items:
                  properties:
                    address:
                      type: string
                    order_type:
                      default: GOOD_TIL_CANCELLED
                      enum:
                        - GOOD_TIL_CANCELLED
                        - FILL_OR_KILL
                        - IMMEDIATE_OR_CANCEL
                        - JUST_IN_TIME
                        - GOOD_TIL_TIME
                      type: string
                    shares_cancelled:
                      title: 'TODO: remove this in next release. It is no longer used'
                      type: string
                    shares_owned:
                      type: string
                    shares_withdrawn:
                      type: string
                    tick_index_taker_to_maker:
                      format: int64
                      type: string
                    trade_pair_id:
                      properties:
                        maker_denom:
                          type: string
                        taker_denom:
                          type: string
                      type: object
                    tranche_key:
                      type: string
                  type: object
                type: array
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a list of LimitOrderTranchUser items.
      tags:
        - Query
  /neutron/dex/limit_order_tranche_user/{address}/{tranche_key}:
    get:
      operationId: LimitOrderTrancheUser
      parameters:
        - in: path
          name: address
          required: true
          type: string
        - in: path
          name: tranche_key
          required: true
          type: string
        - in: query
          name: calc_withdrawable_shares
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              limit_order_tranche_user:
                properties:
                  address:
                    type: string
                  order_type:
                    default: GOOD_TIL_CANCELLED
                    enum:
                      - GOOD_TIL_CANCELLED
                      - FILL_OR_KILL
                      - IMMEDIATE_OR_CANCEL
                      - JUST_IN_TIME
                      - GOOD_TIL_TIME
                    type: string
                  shares_cancelled:
                    title: 'TODO: remove this in next release. It is no longer used'
                    type: string
                  shares_owned:
                    type: string
                  shares_withdrawn:
                    type: string
                  tick_index_taker_to_maker:
                    format: int64
                    type: string
                  trade_pair_id:
                    properties:
                      maker_denom:
                        type: string
                      taker_denom:
                        type: string
                    type: object
                  tranche_key:
                    type: string
                type: object
              withdrawable_shares:
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a LimitOrderTrancheUser by index.
      tags:
        - Query
  /neutron/dex/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
            properties:
              params:
                description: params holds all the parameters of this module.
                properties:
                  fee_tiers:
                    items:
                      format: uint64
                      type: string
                    type: array
                  good_til_purge_allowance:
                    format: uint64
                    type: string
                  max_jits_per_block:
                    format: uint64
                    type: string
                  paused:
                    type: boolean
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Parameters queries the parameters of the module.
      tags:
        - Query
  /neutron/dex/pool/{pair_id}/{tick_index}/{fee}:
    get:
      operationId: Pool
      parameters:
        - in: path
          name: pair_id
          required: true
          type: string
        - format: int64
          in: path
          name: tick_index
          required: true
          type: string
        - format: uint64
          in: path
          name: fee
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              pool:
                properties:
                  id:
                    format: uint64
                    type: string
                  lower_tick0:
                    properties:
                      key:
                        properties:
                          fee:
                            format: uint64
                            type: string
                          tick_index_taker_to_maker:
                            format: int64
                            type: string
                          trade_pair_id:
                            properties:
                              maker_denom:
                                type: string
                              taker_denom:
                                type: string
                            type: object
                        type: object
                      maker_price:
                        title: >-
                          This is the price of the PoolReserves denominated in
                          the opposite token. (ie. 1 TokenA with a maker_price
                          of 10 is worth 10 TokenB )
                        type: string
                      price_opposite_taker_to_maker:
                        description: >-
                          DEPRECATED: price_opposite_taker_maker was an internal
                          implementation detail and will be removed in a future
                          release.

                          It is being kept strictly for backwards compatibility.
                          The actual field value is unused.
                        type: string
                      price_taker_to_maker:
                        description: >-
                          DEPRECATED: price_taker_to_maker will be removed in
                          future release, `maker_price` should always be used.
                        type: string
                      reserves_maker_denom:
                        type: string
                    type: object
                  upper_tick1:
                    properties:
                      key:
                        properties:
                          fee:
                            format: uint64
                            type: string
                          tick_index_taker_to_maker:
                            format: int64
                            type: string
                          trade_pair_id:
                            properties:
                              maker_denom:
                                type: string
                              taker_denom:
                                type: string
                            type: object
                        type: object
                      maker_price:
                        title: >-
                          This is the price of the PoolReserves denominated in
                          the opposite token. (ie. 1 TokenA with a maker_price
                          of 10 is worth 10 TokenB )
                        type: string
                      price_opposite_taker_to_maker:
                        description: >-
                          DEPRECATED: price_opposite_taker_maker was an internal
                          implementation detail and will be removed in a future
                          release.

                          It is being kept strictly for backwards compatibility.
                          The actual field value is unused.
                        type: string
                      price_taker_to_maker:
                        description: >-
                          DEPRECATED: price_taker_to_maker will be removed in
                          future release, `maker_price` should always be used.
                        type: string
                      reserves_maker_denom:
                        type: string
                    type: object
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a pool by pair, tick and fee
      tags:
        - Query
  /neutron/dex/pool/{pool_id}:
    get:
      operationId: PoolByID
      parameters:
        - format: uint64
          in: path
          name: pool_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              pool:
                properties:
                  id:
                    format: uint64
                    type: string
                  lower_tick0:
                    properties:
                      key:
                        properties:
                          fee:
                            format: uint64
                            type: string
                          tick_index_taker_to_maker:
                            format: int64
                            type: string
                          trade_pair_id:
                            properties:
                              maker_denom:
                                type: string
                              taker_denom:
                                type: string
                            type: object
                        type: object
                      maker_price:
                        title: >-
                          This is the price of the PoolReserves denominated in
                          the opposite token. (ie. 1 TokenA with a maker_price
                          of 10 is worth 10 TokenB )
                        type: string
                      price_opposite_taker_to_maker:
                        description: >-
                          DEPRECATED: price_opposite_taker_maker was an internal
                          implementation detail and will be removed in a future
                          release.

                          It is being kept strictly for backwards compatibility.
                          The actual field value is unused.
                        type: string
                      price_taker_to_maker:
                        description: >-
                          DEPRECATED: price_taker_to_maker will be removed in
                          future release, `maker_price` should always be used.
                        type: string
                      reserves_maker_denom:
                        type: string
                    type: object
                  upper_tick1:
                    properties:
                      key:
                        properties:
                          fee:
                            format: uint64
                            type: string
                          tick_index_taker_to_maker:
                            format: int64
                            type: string
                          trade_pair_id:
                            properties:
                              maker_denom:
                                type: string
                              taker_denom:
                                type: string
                            type: object
                        type: object
                      maker_price:
                        title: >-
                          This is the price of the PoolReserves denominated in
                          the opposite token. (ie. 1 TokenA with a maker_price
                          of 10 is worth 10 TokenB )
                        type: string
                      price_opposite_taker_to_maker:
                        description: >-
                          DEPRECATED: price_opposite_taker_maker was an internal
                          implementation detail and will be removed in a future
                          release.

                          It is being kept strictly for backwards compatibility.
                          The actual field value is unused.
                        type: string
                      price_taker_to_maker:
                        description: >-
                          DEPRECATED: price_taker_to_maker will be removed in
                          future release, `maker_price` should always be used.
                        type: string
                      reserves_maker_denom:
                        type: string
                    type: object
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a pool by ID
      tags:
        - Query
  /neutron/dex/pool_metadata:
    get:
      operationId: PoolMetadataAll
      parameters:
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
              pool_metadata:
                items:
                  properties:
                    fee:
                      format: uint64
                      type: string
                    id:
                      format: uint64
                      type: string
                    pair_id:
                      properties:
                        token0:
                          type: string
                        token1:
                          type: string
                      type: object
                    tick:
                      format: int64
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a list of PoolMetadata items.
      tags:
        - Query
  /neutron/dex/pool_metadata/{id}:
    get:
      operationId: PoolMetadata
      parameters:
        - format: uint64
          in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              Pool_metadata:
                properties:
                  fee:
                    format: uint64
                    type: string
                  id:
                    format: uint64
                    type: string
                  pair_id:
                    properties:
                      token0:
                        type: string
                      token1:
                        type: string
                    type: object
                  tick:
                    format: int64
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a PoolMetadata by ID
      tags:
        - Query
  /neutron/dex/pool_reserves/{pair_id}/{token_in}:
    get:
      operationId: PoolReservesAll
      parameters:
        - in: path
          name: pair_id
          required: true
          type: string
        - in: path
          name: token_in
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
              pool_reserves:
                items:
                  properties:
                    key:
                      properties:
                        fee:
                          format: uint64
                          type: string
                        tick_index_taker_to_maker:
                          format: int64
                          type: string
                        trade_pair_id:
                          properties:
                            maker_denom:
                              type: string
                            taker_denom:
                              type: string
                          type: object
                      type: object
                    maker_price:
                      title: >-
                        This is the price of the PoolReserves denominated in the
                        opposite token. (ie. 1 TokenA with a maker_price of 10
                        is worth 10 TokenB )
                      type: string
                    price_opposite_taker_to_maker:
                      description: >-
                        DEPRECATED: price_opposite_taker_maker was an internal
                        implementation detail and will be removed in a future
                        release.

                        It is being kept strictly for backwards compatibility.
                        The actual field value is unused.
                      type: string
                    price_taker_to_maker:
                      description: >-
                        DEPRECATED: price_taker_to_maker will be removed in
                        future release, `maker_price` should always be used.
                      type: string
                    reserves_maker_denom:
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a list of PoolReserves items.
      tags:
        - Query
  /neutron/dex/pool_reserves/{pair_id}/{token_in}/{tick_index}/{fee}:
    get:
      operationId: PoolReserves
      parameters:
        - in: path
          name: pair_id
          required: true
          type: string
        - in: path
          name: token_in
          required: true
          type: string
        - format: int64
          in: path
          name: tick_index
          required: true
          type: string
        - format: uint64
          in: path
          name: fee
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              pool_reserves:
                properties:
                  key:
                    properties:
                      fee:
                        format: uint64
                        type: string
                      tick_index_taker_to_maker:
                        format: int64
                        type: string
                      trade_pair_id:
                        properties:
                          maker_denom:
                            type: string
                          taker_denom:
                            type: string
                        type: object
                    type: object
                  maker_price:
                    title: >-
                      This is the price of the PoolReserves denominated in the
                      opposite token. (ie. 1 TokenA with a maker_price of 10 is
                      worth 10 TokenB )
                    type: string
                  price_opposite_taker_to_maker:
                    description: >-
                      DEPRECATED: price_opposite_taker_maker was an internal
                      implementation detail and will be removed in a future
                      release.

                      It is being kept strictly for backwards compatibility. The
                      actual field value is unused.
                    type: string
                  price_taker_to_maker:
                    description: >-
                      DEPRECATED: price_taker_to_maker will be removed in future
                      release, `maker_price` should always be used.
                    type: string
                  reserves_maker_denom:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a PoolReserve by index
      tags:
        - Query
  /neutron/dex/simulate_cancel_limit_order:
    get:
      operationId: SimulateCancelLimitOrder
      parameters:
        - in: query
          name: msg.creator
          required: false
          type: string
        - in: query
          name: msg.tranche_key
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              resp:
                properties:
                  maker_coin_out:
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                    title: Total amount of maker reserves that were canceled
                  taker_coin_out:
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                    title: Total amount of taker reserves that were withdrawn
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Simulates MsgCancelLimitOrder
      tags:
        - Query
  /neutron/dex/simulate_deposit:
    get:
      operationId: SimulateDeposit
      parameters:
        - in: query
          name: msg.creator
          required: false
          type: string
        - in: query
          name: msg.receiver
          required: false
          type: string
        - in: query
          name: msg.token_a
          required: false
          type: string
        - in: query
          name: msg.token_b
          required: false
          type: string
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: msg.amounts_a
          required: false
          type: array
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: msg.amounts_b
          required: false
          type: array
        - collectionFormat: multi
          in: query
          items:
            format: int64
            type: string
          name: msg.tick_indexes_a_to_b
          required: false
          type: array
        - collectionFormat: multi
          in: query
          items:
            format: uint64
            type: string
          name: msg.fees
          required: false
          type: array
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              resp:
                properties:
                  failed_deposits:
                    items:
                      properties:
                        deposit_idx:
                          format: uint64
                          type: string
                        error:
                          type: string
                      type: object
                    type: array
                  reserve0_deposited:
                    items:
                      type: string
                    type: array
                  reserve1_deposited:
                    items:
                      type: string
                    type: array
                  shares_issued:
                    items:
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Simulates MsgDeposit
      tags:
        - Query
  /neutron/dex/simulate_multi_hop_swap:
    get:
      operationId: SimulateMultiHopSwap
      parameters:
        - in: query
          name: msg.creator
          required: false
          type: string
        - in: query
          name: msg.receiver
          required: false
          type: string
        - in: query
          name: msg.amount_in
          required: false
          type: string
        - in: query
          name: msg.exit_limit_price
          required: false
          type: string
        - description: >-
            If pickBestRoute == true then all routes are run and the route with
            the

            best price is chosen otherwise, the first succesful route is used.
          in: query
          name: msg.pick_best_route
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              resp:
                properties:
                  coin_out:
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                  dust:
                    items:
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  route:
                    properties:
                      hops:
                        items:
                          type: string
                        type: array
                    type: object
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Simulates MsgMultiHopSwap
      tags:
        - Query
  /neutron/dex/simulate_place_limit_order:
    get:
      operationId: SimulatePlaceLimitOrder
      parameters:
        - in: query
          name: msg.creator
          required: false
          type: string
        - in: query
          name: msg.receiver
          required: false
          type: string
        - in: query
          name: msg.token_in
          required: false
          type: string
        - in: query
          name: msg.token_out
          required: false
          type: string
        - description: >-
            DEPRECATED: tick_index_in_to_out will be removed in future release;
            limit_sell_price should be used instead.
          format: int64
          in: query
          name: msg.tick_index_in_to_out
          required: false
          type: string
        - in: query
          name: msg.amount_in
          required: false
          type: string
        - default: GOOD_TIL_CANCELLED
          enum:
            - GOOD_TIL_CANCELLED
            - FILL_OR_KILL
            - IMMEDIATE_OR_CANCEL
            - JUST_IN_TIME
            - GOOD_TIL_TIME
          in: query
          name: msg.order_type
          required: false
          type: string
        - description: expirationTime is only valid iff orderType == GOOD_TIL_TIME.
          format: date-time
          in: query
          name: msg.expiration_time
          required: false
          type: string
        - in: query
          name: msg.max_amount_out
          required: false
          type: string
        - in: query
          name: msg.limit_sell_price
          required: false
          type: string
        - description: >-
            min_average_sell_price is an optional parameter that sets a required
            minimum average price for the entire trade.

            if the min_average_sell_price is not met the trade will fail.

            If min_average_sell_price is omitted limit_sell_price will be used
            instead.
          in: query
          name: msg.min_average_sell_price
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              resp:
                properties:
                  coin_in:
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                    title: Total amount of coin used for the limit order
                  taker_coin_in:
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                    title: >-
                      Total amount of the token in that was immediately swapped
                      for takerOutCoin
                  taker_coin_out:
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                    title: >-
                      Total amount of coin received from the taker portion of
                      the limit order

                      This is the amount of coin immediately available in the
                      users account after

                      executing the limit order. It does not include any future
                      proceeds from the

                      maker portion which will have withdrawn in the future
                  trancheKey:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Simulates MsgPlaceLimitOrder
      tags:
        - Query
  /neutron/dex/simulate_withdraw_filled_limit_order:
    get:
      operationId: SimulateWithdrawFilledLimitOrder
      parameters:
        - in: query
          name: msg.creator
          required: false
          type: string
        - in: query
          name: msg.tranche_key
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              resp:
                properties:
                  maker_coin_out:
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                    title: >-
                      Total amount of maker reserves that were withdrawn --only
                      applies to inactive LimitOrders
                  taker_coin_out:
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                    title: Total amount of taker reserves that were withdrawn
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Simulates MsgWithdrawFilledLimitOrder
      tags:
        - Query
  /neutron/dex/simulate_withdrawal:
    get:
      operationId: SimulateWithdrawal
      parameters:
        - in: query
          name: msg.creator
          required: false
          type: string
        - in: query
          name: msg.receiver
          required: false
          type: string
        - in: query
          name: msg.token_a
          required: false
          type: string
        - in: query
          name: msg.token_b
          required: false
          type: string
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: msg.shares_to_remove
          required: false
          type: array
        - collectionFormat: multi
          in: query
          items:
            format: int64
            type: string
          name: msg.tick_indexes_a_to_b
          required: false
          type: array
        - collectionFormat: multi
          in: query
          items:
            format: uint64
            type: string
          name: msg.fees
          required: false
          type: array
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              resp:
                properties:
                  reserve0_withdrawn:
                    type: string
                  reserve1_withdrawn:
                    type: string
                  shares_burned:
                    items:
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Simulates MsgWithdrawal
      tags:
        - Query
  /neutron/dex/tick_liquidity/{pair_id}/{token_in}:
    get:
      operationId: TickLiquidityAll
      parameters:
        - in: path
          name: pair_id
          required: true
          type: string
        - in: path
          name: token_in
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
              tick_liquidity:
                items:
                  properties:
                    limit_order_tranche:
                      properties:
                        expiration_time:
                          format: date-time
                          title: >-
                            JIT orders also use expiration_time to handle
                            deletion but represent a special case

                            All JIT orders have a expiration_time of 0 and an
                            exception is made to still treat these orders as
                            live

                            Order deletion still functions the same and the
                            orders will be deleted at the end of the block
                          type: string
                        key:
                          properties:
                            tick_index_taker_to_maker:
                              format: int64
                              type: string
                            trade_pair_id:
                              properties:
                                maker_denom:
                                  type: string
                                taker_denom:
                                  type: string
                              type: object
                            tranche_key:
                              type: string
                          type: object
                        maker_price:
                          title: >-
                            This is the price of the LimitOrder denominated in
                            the opposite token. (ie. 1 TokenA with a maker_price
                            of 10 is worth 10 TokenB )
                          type: string
                        price_taker_to_maker:
                          description: >-
                            DEPRECATED: price_taker_to_maker will be removed in
                            future release, `maker_price` should always be used.
                          type: string
                        reserves_maker_denom:
                          type: string
                        reserves_taker_denom:
                          type: string
                        total_maker_denom:
                          type: string
                        total_taker_denom:
                          type: string
                      type: object
                    pool_reserves:
                      properties:
                        key:
                          properties:
                            fee:
                              format: uint64
                              type: string
                            tick_index_taker_to_maker:
                              format: int64
                              type: string
                            trade_pair_id:
                              properties:
                                maker_denom:
                                  type: string
                                taker_denom:
                                  type: string
                              type: object
                          type: object
                        maker_price:
                          title: >-
                            This is the price of the PoolReserves denominated in
                            the opposite token. (ie. 1 TokenA with a maker_price
                            of 10 is worth 10 TokenB )
                          type: string
                        price_opposite_taker_to_maker:
                          description: >-
                            DEPRECATED: price_opposite_taker_maker was an
                            internal implementation detail and will be removed
                            in a future release.

                            It is being kept strictly for backwards
                            compatibility. The actual field value is unused.
                          type: string
                        price_taker_to_maker:
                          description: >-
                            DEPRECATED: price_taker_to_maker will be removed in
                            future release, `maker_price` should always be used.
                          type: string
                        reserves_maker_denom:
                          type: string
                      type: object
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a list of TickLiquidity items.
      tags:
        - Query
  /neutron/dex/user/deposits/{address}:
    get:
      operationId: UserDepositsAll
      parameters:
        - in: path
          name: address
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
        - in: query
          name: include_pool_data
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              deposits:
                items:
                  properties:
                    center_tick_index:
                      format: int64
                      type: string
                    fee:
                      format: uint64
                      type: string
                    lower_tick_index:
                      format: int64
                      type: string
                    pair_id:
                      properties:
                        token0:
                          type: string
                        token1:
                          type: string
                      type: object
                    pool:
                      properties:
                        id:
                          format: uint64
                          type: string
                        lower_tick0:
                          properties:
                            key:
                              properties:
                                fee:
                                  format: uint64
                                  type: string
                                tick_index_taker_to_maker:
                                  format: int64
                                  type: string
                                trade_pair_id:
                                  properties:
                                    maker_denom:
                                      type: string
                                    taker_denom:
                                      type: string
                                  type: object
                              type: object
                            maker_price:
                              title: >-
                                This is the price of the PoolReserves
                                denominated in the opposite token. (ie. 1 TokenA
                                with a maker_price of 10 is worth 10 TokenB )
                              type: string
                            price_opposite_taker_to_maker:
                              description: >-
                                DEPRECATED: price_opposite_taker_maker was an
                                internal implementation detail and will be
                                removed in a future release.

                                It is being kept strictly for backwards
                                compatibility. The actual field value is unused.
                              type: string
                            price_taker_to_maker:
                              description: >-
                                DEPRECATED: price_taker_to_maker will be removed
                                in future release, `maker_price` should always
                                be used.
                              type: string
                            reserves_maker_denom:
                              type: string
                          type: object
                        upper_tick1:
                          properties:
                            key:
                              properties:
                                fee:
                                  format: uint64
                                  type: string
                                tick_index_taker_to_maker:
                                  format: int64
                                  type: string
                                trade_pair_id:
                                  properties:
                                    maker_denom:
                                      type: string
                                    taker_denom:
                                      type: string
                                  type: object
                              type: object
                            maker_price:
                              title: >-
                                This is the price of the PoolReserves
                                denominated in the opposite token. (ie. 1 TokenA
                                with a maker_price of 10 is worth 10 TokenB )
                              type: string
                            price_opposite_taker_to_maker:
                              description: >-
                                DEPRECATED: price_opposite_taker_maker was an
                                internal implementation detail and will be
                                removed in a future release.

                                It is being kept strictly for backwards
                                compatibility. The actual field value is unused.
                              type: string
                            price_taker_to_maker:
                              description: >-
                                DEPRECATED: price_taker_to_maker will be removed
                                in future release, `maker_price` should always
                                be used.
                              type: string
                            reserves_maker_denom:
                              type: string
                          type: object
                      type: object
                    shares_owned:
                      type: string
                    total_shares:
                      type: string
                    upper_tick_index:
                      format: int64
                      type: string
                  type: object
                type: array
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a list of UserDeposits items.
      tags:
        - Query
  /neutron/dex/user/limit_orders/{address}:
    get:
      operationId: LimitOrderTrancheUserAllByAddress
      parameters:
        - in: path
          name: address
          required: true
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              limit_orders:
                items:
                  properties:
                    address:
                      type: string
                    order_type:
                      default: GOOD_TIL_CANCELLED
                      enum:
                        - GOOD_TIL_CANCELLED
                        - FILL_OR_KILL
                        - IMMEDIATE_OR_CANCEL
                        - JUST_IN_TIME
                        - GOOD_TIL_TIME
                      type: string
                    shares_cancelled:
                      title: 'TODO: remove this in next release. It is no longer used'
                      type: string
                    shares_owned:
                      type: string
                    shares_withdrawn:
                      type: string
                    tick_index_taker_to_maker:
                      format: int64
                      type: string
                    trade_pair_id:
                      properties:
                        maker_denom:
                          type: string
                        taker_denom:
                          type: string
                      type: object
                    tranche_key:
                      type: string
                  type: object
                type: array
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Queries a list of LimitOrderTrancheUser items for a given address.
      tags:
        - Query
  /neutron/dynamicfees/v1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
            properties:
              params:
                description: params holds all the parameters of this module.
                properties:
                  ntrn_prices:
                    items:
                      description: >-
                        DecCoin defines a token with a denomination and a
                        decimal amount.


                        NOTE: The amount field is an Dec which implements the
                        custom method

                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: >-
                      List of asset prices by the NTRN

                      it's used in cooperation with feemarket module

                      ntrn_prices is a data source to convert gas_price from
                      feemarket's base_denom (untrn)

                      into a given asset
                    type: array
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Parameters queries the parameters of the module.
      tags:
        - Query
  /neutron/feeburner/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
            properties:
              params:
                description: params holds all the parameters of this module.
                properties:
                  neutron_denom:
                    title: >-
                      Defines Neutron denom, which will be burned during fee
                      processing, any

                      other denom will be sent to Treasury
                    type: string
                  reserve_address:
                    title: Deprecated in v0.4.4. Is not used anymore
                    type: string
                  treasury_address:
                    title: Defines treasury address
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Parameters queries the parameters of the module.
      tags:
        - Query
  /neutron/feeburner/total_burned_neutrons_amount:
    get:
      operationId: TotalBurnedNeutronsAmount
      responses:
        '200':
          description: A successful response.
          schema:
            description: |-
              QueryTotalBurnedNeutronsAmountResponse is response type for the
              Query/QueryTotalBurnedNeutronsAmount method.
            properties:
              total_burned_neutrons_amount:
                properties:
                  coin:
                    description: >-
                      Coin defines a token with a denomination and an amount.


                      NOTE: The amount field is an Int which implements the
                      custom method

                      signatures required by gogoproto.
                    properties:
                      amount:
                        type: string
                      denom:
                        type: string
                    type: object
                title: >-
                  TotalBurnedNeutronsAmount defines total amount of burned
                  neutron fees
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: TotalBurnedNeutronsAmount queries total amount of burned neutron fees.
      tags:
        - Query
  /neutron/ibc-rate-limit/v1beta1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              aramsResponse is the response type for the Query/Params RPC
              method.
            properties:
              params:
                description: params defines the parameters of the module.
                properties:
                  contract_address:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        Params defines a gRPC query method that returns the ibc-rate-limit
        module's

        parameters.
      tags:
        - Query
  /neutron/interchainqueries/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: Response type for the Query/Params RPC method.
            properties:
              params:
                description: Contains all parameters of the module.
                properties:
                  max_kv_query_keys_count:
                    format: uint64
                    title: Maximum amount of keys in a registered key value query
                    type: string
                  max_transactions_filters:
                    format: uint64
                    title: >-
                      max_transactions_filters defines maximum allowed amount of
                      tx filters in msgRegisterInterchainQuery
                    type: string
                  query_deposit:
                    description: >-
                      Amount of coins required to be provided as deposit on
                      Interchain Query registration.
                    items:
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  query_submit_timeout:
                    description: >-
                      The duration, measured in blocks, that must pass since the
                      query's registration or its last

                      result submission before the query becomes eligible for
                      removal by anyone. Is used to set

                      `submit_timeout` on Interchain Query registration.
                    format: uint64
                    type: string
                  tx_query_removal_limit:
                    description: >-
                      Amount of tx hashes to be removed during a single
                      EndBlock. Can vary to balance between

                      network cleaning speed and EndBlock duration. A zero value
                      means no limit.
                    format: uint64
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Fetches the current parameters of the interchainqueries module.
      tags:
        - Query
  /neutron/interchainqueries/query_result:
    get:
      operationId: QueryResult
      parameters:
        - description: ID of an Interchain Query.
          format: uint64
          in: query
          name: query_id
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: Response type for the Query/QueryResult RPC method.
            properties:
              result:
                description: The last successfully submitted result of an Interchain Query.
                properties:
                  allow_kv_callbacks:
                    description: >-
                      Whether to send the query result to the owner contract as
                      a sudo message. Only applicable for

                      KV type of Interchain Queries.
                    type: boolean
                  block:
                    description: >-
                      A TX Interchain Query execution result. Contains
                      metainformation about the blocks of the query

                      execution height. Only populated when submitting an
                      Interchain Query result for verification

                      and emptied when saving the result on chain.
                    properties:
                      header:
                        properties:
                          type_url:
                            type: string
                          value:
                            format: byte
                            type: string
                        type: object
                        description: >-
                          The header of the block the transaction is included
                          in. It is needed to know block header to

                          verify inclusion of the transaction.
                      next_block_header:
                        properties:
                          type_url:
                            type: string
                          value:
                            format: byte
                            type: string
                        type: object
                        description: >-
                          The header of the block next to the block the
                          transaction is included in. It is needed to know

                          block X+1 header to verify response of transaction for
                          block X since LastResultsHash is root

                          hash of all results of the txs from the previous
                          block.
                      tx:
                        description: >-
                          The transaction matched by the Interchain Query's
                          transaction filter.
                        properties:
                          data:
                            description: The arbitrary data typed body of the transaction.
                            format: byte
                            type: string
                          delivery_proof:
                            description: >-
                              The Merkle Proof which proves existence of
                              response in the block next to the block the

                              transaction is included in.
                            properties:
                              aunts:
                                items:
                                  format: byte
                                  type: string
                                type: array
                              index:
                                format: int64
                                type: string
                              leaf_hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: string
                            type: object
                          inclusion_proof:
                            description: >-
                              The Merkle Proof which proves inclusion of the
                              transaction in the block.
                            properties:
                              aunts:
                                items:
                                  format: byte
                                  type: string
                                type: array
                              index:
                                format: int64
                                type: string
                              leaf_hash:
                                format: byte
                                type: string
                              total:
                                format: int64
                                type: string
                            type: object
                          response:
                            description: The result of the transaction execution.
                            properties:
                              code:
                                format: int64
                                type: integer
                              codespace:
                                type: string
                              data:
                                format: byte
                                type: string
                              events:
                                items:
                                  description: >-
                                    Event allows application developers to
                                    attach additional information to

                                    ResponseFinalizeBlock and ResponseCheckTx.

                                    Later, transactions may be queried using
                                    these events.
                                  properties:
                                    attributes:
                                      items:
                                        description: >-
                                          EventAttribute is a single key-value
                                          pair, associated with an event.
                                        properties:
                                          index:
                                            type: boolean
                                          key:
                                            type: string
                                          value:
                                            type: string
                                        type: object
                                      type: array
                                    type:
                                      type: string
                                  type: object
                                type: array
                              gas_used:
                                format: int64
                                type: string
                              gas_wanted:
                                format: int64
                                type: string
                              info:
                                type: string
                              log:
                                type: string
                            type: object
                        type: object
                    type: object
                  height:
                    description: >-
                      The height of the chain at the moment of the Interchain
                      Query execution.
                    format: uint64
                    type: string
                  kv_results:
                    description: >-
                      A list of a KV Interchain Query execution results. Each
                      result contains query parameters, a

                      response value and a proof.
                    items:
                      description: A verifiable result of performing a single KVKey read.
                      properties:
                        Proof:
                          description: >-
                            The Merkle Proof which proves existence/nonexistence
                            of key-value pair in IAVL storage. Is

                            used to verify

                            the pair against the respective remote chain's
                            header.
                          properties:
                            ops:
                              items:
                                properties:
                                  data:
                                    format: byte
                                    type: string
                                  key:
                                    format: byte
                                    type: string
                                  type:
                                    type: string
                                title: >-
                                  ProofOp defines an operation used for
                                  calculating Merkle root

                                  The data could be arbitrary format, providing
                                  nessecary data

                                  for example neighbouring node hash
                                type: object
                              type: array
                          title: >-
                            ProofOps is Merkle proof defined by the list of
                            ProofOps
                          type: object
                        key:
                          description: >-
                            A bytes field representing the key of the data read
                            from the module's storage.
                          format: byte
                          type: string
                        storage_prefix:
                          description: >-
                            The substore name used in the read operation.
                            Typically, this corresponds to the keeper's

                            storeKey, usually the module's name, such as "bank",
                            "staking", etc.
                          type: string
                        value:
                          description: >-
                            A bytes field containing the value associated with
                            the key in the store.
                          format: byte
                          type: string
                      type: object
                    type: array
                  revision:
                    description: >-
                      The revision number of the chain at the moment of the
                      Interchain Query execution.
                    format: uint64
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        Retrieves the most recent successfully submitted result of an Interchain
        Query. This is only

        applicable for KV Interchain Queries.
      tags:
        - Query
  /neutron/interchainqueries/registered_queries:
    get:
      operationId: RegisteredQueries
      parameters:
        - collectionFormat: multi
          description: >-
            A list of owners of Interchain Queries. Query response will contain
            only Interchain Queries

            that are owned by one of the owners in the list. If none, Interchain
            Queries are not filtered

            out by the owner field.
          in: query
          items:
            type: string
          name: owners
          required: false
          type: array
        - description: >-
            IBC connection ID. Query response will contain only Interchain
            Queries that have the same IBC

            connection ID parameter. If none, Interchain Queries are not
            filtered out by the connection ID

            field.
          in: query
          name: connection_id
          required: false
          type: string
        - description: |-
            key is a value returned in PageResponse.next_key to begin
            querying the next page most efficiently. Only one of offset or key
            should be set.
          format: byte
          in: query
          name: pagination.key
          required: false
          type: string
        - description: >-
            offset is a numeric offset that can be used when key is unavailable.

            It is less efficient than using key. Only one of offset or key
            should

            be set.
          format: uint64
          in: query
          name: pagination.offset
          required: false
          type: string
        - description: >-
            limit is the total number of results to be returned in the result
            page.

            If left empty it will default to a value to be set by each app.
          format: uint64
          in: query
          name: pagination.limit
          required: false
          type: string
        - description: >-
            count_total is set to true  to indicate that the result set should
            include

            a count of the total number of items available for pagination in
            UIs.

            count_total is only respected when offset is used. It is ignored
            when key

            is set.
          in: query
          name: pagination.count_total
          required: false
          type: boolean
        - description: >-
            reverse is set to true if results are to be returned in the
            descending order.


            Since: cosmos-sdk 0.43
          in: query
          name: pagination.reverse
          required: false
          type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            description: Response type for the Query/RegisteredQueries RPC method.
            properties:
              pagination:
                description: >-
                  PageResponse is to be embedded in gRPC response messages where
                  the

                  corresponding request message has used PageRequest.

                   message SomeResponse {
                           repeated Bar results = 1;
                           PageResponse page = 2;
                   }
                properties:
                  next_key:
                    description: |-
                      next_key is the key to be passed to PageRequest.key to
                      query the next page most efficiently. It will be empty if
                      there are no more results.
                    format: byte
                    type: string
                  total:
                    format: uint64
                    title: >-
                      total is total number of results available if
                      PageRequest.count_total

                      was set, its value is undefined otherwise
                    type: string
                type: object
              registered_queries:
                description: A list of registered Interchain Queries.
                items:
                  description: >-
                    Information about an Interchain Query registered in the
                    interchainqueries module.
                  properties:
                    connection_id:
                      description: >-
                        The IBC connection ID to the remote chain (the source of
                        querying data). Is used for getting

                        ConsensusState from the respective IBC client to verify
                        query result proofs.
                      type: string
                    deposit:
                      description: >-
                        Amount of coins paid for the Interchain Query
                        registration. The deposit is paid back to the

                        remover. The remover can be either the query owner
                        (during the submit timeout) or anybody.
                      items:
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                      type: array
                    id:
                      description: The unique id of the registered query.
                      format: uint64
                      type: string
                    keys:
                      description: >-
                        The KV-storage keys for which to get values from the
                        remote chain. Only applicable for the

                        KV Interchain Queries. Max amount of keys is limited by
                        the module's `max_kv_query_keys_count`

                        parameters.
                      items:
                        description: Represents a path to an IAVL storage node.
                        properties:
                          key:
                            description: >-
                              A bytes field representing the key for specific
                              data in the module's storage.
                            format: byte
                            type: string
                          path:
                            description: >-
                              The substore name used in an Interchain Query.
                              Typically, this corresponds to the keeper's

                              storeKey, usually the module's name, such as
                              "bank", "staking", etc.
                            type: string
                        type: object
                      type: array
                    last_submitted_result_local_height:
                      description: >-
                        The local chain block height of the last query results
                        update.
                      format: uint64
                      type: string
                    last_submitted_result_remote_height:
                      description: >-
                        The remote chain block height that corresponds to the
                        last query result update.
                      properties:
                        revision_height:
                          format: uint64
                          title: the height within the given revision
                          type: string
                        revision_number:
                          format: uint64
                          title: the revision that the client is currently on
                          type: string
                      title: >-
                        Height is a monotonically increasing data type

                        that can be compared against another Height for the
                        purposes of updating and

                        freezing clients
                      type: object
                    owner:
                      description: The address of the contract that registered the query.
                      type: string
                    query_type:
                      description: 'The query type identifier: `kv` or `tx`.'
                      type: string
                    registered_at_height:
                      description: >-
                        The local chain block height of the Interchain Query
                        registration.
                      format: uint64
                      type: string
                    submit_timeout:
                      description: >-
                        The duration, measured in blocks, that must pass since
                        the query's registration or its last

                        result submission before the query becomes eligible for
                        removal by anyone.
                      format: uint64
                      type: string
                    transactions_filter:
                      description: >-
                        A stringified list of filters for remote transactions
                        search. Only applicable for the TX

                        Interchain Queries. Example:
                        "[{\"field\":\"tx.height\",\"op\":\"Gte\",\"value\":2644737}]".

                        Supported operators: "eq", "lt", "gt", "lte", "gte". Max
                        amount of filter conditions is limited

                        by the module's `max_transactions_filters` parameters.
                      type: string
                    update_period:
                      description: >-
                        Parameter that defines the minimal delay between
                        consecutive query executions (i.e. the

                        minimal delay between query results update).
                      format: uint64
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        Retrieves all registered Interchain Queries in the module, with optional
        filtering by owner

        and/or connection ID.
      tags:
        - Query
  /neutron/interchainqueries/registered_query:
    get:
      operationId: RegisteredQuery
      parameters:
        - description: ID of an Interchain Query.
          format: uint64
          in: query
          name: query_id
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: Response type for the Query/RegisteredQuery RPC method.
            properties:
              registered_query:
                description: >-
                  Information about an Interchain Query registered in the
                  interchainqueries module.
                properties:
                  connection_id:
                    description: >-
                      The IBC connection ID to the remote chain (the source of
                      querying data). Is used for getting

                      ConsensusState from the respective IBC client to verify
                      query result proofs.
                    type: string
                  deposit:
                    description: >-
                      Amount of coins paid for the Interchain Query
                      registration. The deposit is paid back to the

                      remover. The remover can be either the query owner (during
                      the submit timeout) or anybody.
                    items:
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  id:
                    description: The unique id of the registered query.
                    format: uint64
                    type: string
                  keys:
                    description: >-
                      The KV-storage keys for which to get values from the
                      remote chain. Only applicable for the

                      KV Interchain Queries. Max amount of keys is limited by
                      the module's `max_kv_query_keys_count`

                      parameters.
                    items:
                      description: Represents a path to an IAVL storage node.
                      properties:
                        key:
                          description: >-
                            A bytes field representing the key for specific data
                            in the module's storage.
                          format: byte
                          type: string
                        path:
                          description: >-
                            The substore name used in an Interchain Query.
                            Typically, this corresponds to the keeper's

                            storeKey, usually the module's name, such as "bank",
                            "staking", etc.
                          type: string
                      type: object
                    type: array
                  last_submitted_result_local_height:
                    description: >-
                      The local chain block height of the last query results
                      update.
                    format: uint64
                    type: string
                  last_submitted_result_remote_height:
                    description: >-
                      The remote chain block height that corresponds to the last
                      query result update.
                    properties:
                      revision_height:
                        format: uint64
                        title: the height within the given revision
                        type: string
                      revision_number:
                        format: uint64
                        title: the revision that the client is currently on
                        type: string
                    title: >-
                      Height is a monotonically increasing data type

                      that can be compared against another Height for the
                      purposes of updating and

                      freezing clients
                    type: object
                  owner:
                    description: The address of the contract that registered the query.
                    type: string
                  query_type:
                    description: 'The query type identifier: `kv` or `tx`.'
                    type: string
                  registered_at_height:
                    description: >-
                      The local chain block height of the Interchain Query
                      registration.
                    format: uint64
                    type: string
                  submit_timeout:
                    description: >-
                      The duration, measured in blocks, that must pass since the
                      query's registration or its last

                      result submission before the query becomes eligible for
                      removal by anyone.
                    format: uint64
                    type: string
                  transactions_filter:
                    description: >-
                      A stringified list of filters for remote transactions
                      search. Only applicable for the TX

                      Interchain Queries. Example:
                      "[{\"field\":\"tx.height\",\"op\":\"Gte\",\"value\":2644737}]".

                      Supported operators: "eq", "lt", "gt", "lte", "gte". Max
                      amount of filter conditions is limited

                      by the module's `max_transactions_filters` parameters.
                    type: string
                  update_period:
                    description: >-
                      Parameter that defines the minimal delay between
                      consecutive query executions (i.e. the

                      minimal delay between query results update).
                    format: uint64
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Fetches details of a registered Interchain Query using its ID.
      tags:
        - Query
  /neutron/interchainqueries/remote_height:
    get:
      operationId: LastRemoteHeight
      parameters:
        - description: >-
            Connection ID of an IBC connection to a remote chain. Determines the
            IBC client used in query

            handling.
          in: query
          name: connection_id
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: Response type for the Query/LastRemoteHeight RPC method.
            properties:
              height:
                description: The height of the chain that the IBC client is currently on.
                format: uint64
                type: string
              revision:
                description: The revision of the chain that the IBC client is currently on.
                format: uint64
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        Retrieves the most recent height of a remote chain as known by the IBC
        client associated with

        a given connection ID.
      tags:
        - Query
  /neutron/interchaintxs/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryParamsResponse is response type for the Query/Params RPC
              method.
            properties:
              params:
                description: params holds all the parameters of this module.
                properties:
                  msg_submit_tx_max_messages:
                    format: uint64
                    title: >-
                      Defines maximum amount of messages to be passed in
                      MsgSubmitTx
                    type: string
                  register_fee:
                    items:
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    title: >-
                      Defines a minimum fee required to register interchain
                      account
                    type: array
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Parameters queries the parameters of the module.
      tags:
        - Query
  /neutron/interchaintxs/{owner_address}/{interchain_account_id}/{connection_id}/interchain_account_address:
    get:
      operationId: InterchainAccountAddress
      parameters:
        - description: >-
            owner_address is the owner of the interchain account on the
            controller

            chain
          in: path
          name: owner_address
          required: true
          type: string
        - description: >-
            interchain_account_id is an identifier of your interchain account
            from

            which you want to execute msgs
          in: path
          name: interchain_account_id
          required: true
          type: string
        - description: >-
            connection_id is an IBC connection identifier between Neutron and
            remote

            chain
          in: path
          name: connection_id
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            properties:
              interchain_account_address:
                title: The corresponding interchain account address on the host chain
                type: string
            title: Query response for an interchain account address
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
        - Query
  /osmosis/tokenfactory/v1beta1/denoms/factory/{creator}/{subdenom}/authority_metadata:
    get:
      operationId: DenomAuthorityMetadata
      parameters:
        - in: path
          name: creator
          required: true
          type: string
        - in: path
          name: subdenom
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryDenomAuthorityMetadataResponse defines the response structure
              for the

              DenomAuthorityMetadata gRPC query.
            properties:
              authority_metadata:
                description: >-
                  DenomAuthorityMetadata specifies metadata for addresses that
                  have specific

                  capabilities over a token factory denom. Right now there is
                  only one Admin

                  permission, but is planned to be extended to the future.
                properties:
                  Admin:
                    title: Can be empty for no admin, or a valid osmosis address
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: |-
        DenomAuthorityMetadata defines a gRPC query method for fetching
        DenomAuthorityMetadata for a particular denom.
      tags:
        - Query
  /osmosis/tokenfactory/v1beta1/denoms/factory/{creator}/{subdenom}/before_send_hook:
    get:
      operationId: BeforeSendHookAddress
      parameters:
        - in: path
          name: creator
          required: true
          type: string
        - in: path
          name: subdenom
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryBeforeSendHookAddressResponse defines the response structure
              for the

              BeforeSendHookAddress gRPC query.
            properties:
              contract_addr:
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: |-
        BeforeSendHookAddress defines a gRPC query method for
        getting the address registered for the before send hook.
      tags:
        - Query
  /osmosis/tokenfactory/v1beta1/denoms/factory/{creator}/{subdenom}/full_denom:
    get:
      operationId: FullDenom
      parameters:
        - in: path
          name: creator
          required: true
          type: string
        - in: path
          name: subdenom
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: |-
              QueryFullDenomResponse defines the response structure for the
              FullDenom gRPC query.
            properties:
              full_denom:
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: |-
        FullDenom defines a gRPC query method for getting full denom name
        from the creator and subdenom strings.
      tags:
        - Query
  /osmosis/tokenfactory/v1beta1/denoms_from_creator/{creator}:
    get:
      operationId: DenomsFromCreator
      parameters:
        - in: path
          name: creator
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryDenomsFromCreatorRequest defines the response structure for
              the

              DenomsFromCreator gRPC query.
            properties:
              denoms:
                items:
                  type: string
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: |-
        DenomsFromCreator defines a gRPC query method for fetching all
        denominations created by a specific admin/creator.
      tags:
        - Query
  /osmosis/tokenfactory/v1beta1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
            properties:
              params:
                description: params defines the parameters of the module.
                properties:
                  denom_creation_fee:
                    description: >-
                      DenomCreationFee defines the fee to be charged on the
                      creation of a new

                      denom. The fee is drawn from the MsgCreateDenom's sender
                      account, and

                      transferred to the community pool.
                    items:
                      description: >-
                        Coin defines a token with a denomination and an amount.


                        NOTE: The amount field is an Int which implements the
                        custom method

                        signatures required by gogoproto.
                      properties:
                        amount:
                          type: string
                        denom:
                          type: string
                      type: object
                    type: array
                  denom_creation_gas_consume:
                    description: >-
                      DenomCreationGasConsume defines the gas cost for creating
                      a new denom.

                      This is intended as a spam deterrence mechanism.


                      See: https://github.com/CosmWasm/token-factory/issues/11
                    format: uint64
                    type: string
                  fee_collector_address:
                    title: >-
                      FeeCollectorAddress is the address where fees collected
                      from denom creation

                      are sent to
                    type: string
                  whitelisted_hooks:
                    items:
                      properties:
                        code_id:
                          format: uint64
                          type: string
                        denom_creator:
                          type: string
                      title: >-
                        WhitelistedHook describes a beforeSendHook which is
                        allowed to be added and executed

                        SetBeforeSendHook can only be called on denoms where the
                        denom creator and

                        code_id for the `contract_addr` match a WhitelistedHook
                      type: object
                    title: >-
                      whitelisted_hooks is the list of hooks which are allowed
                      to be added and executed
                    type: array
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        Params defines a gRPC query method that returns the tokenfactory
        module's

        parameters.
      tags:
        - Query
  /slinky/alerts/v1/alerts:
    get:
      operationId: Alerts
      parameters:
        - default: CONCLUSION_STATUS_UNSPECIFIED
          enum:
            - CONCLUSION_STATUS_UNSPECIFIED
            - CONCLUSION_STATUS_UNCONCLUDED
            - CONCLUSION_STATUS_CONCLUDED
          in: query
          name: status
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              AlertsResponse is the response type for the Query.Alerts RPC
              method, it

              contains the list of Alerts that are being tracked by the alerts
              module.
            properties:
              alerts:
                items:
                  description: >-
                    Alert defines the basic meta-data necessary for the alerts
                    module to resolve

                    a claim that the price of a CurrencyPair on-chain is
                    deviating from the price

                    off-chain.
                  properties:
                    currency_pair:
                      description: >-
                        currency_pair is the currency-pair that this claim
                        asserts is deviating

                        from the price off-chain.
                      properties:
                        Base:
                          type: string
                        Quote:
                          type: string
                      title: >-
                        CurrencyPair is the standard representation of a pair of
                        assets, where one

                        (Base) is priced in terms of the other (Quote)
                      type: object
                    height:
                      description: >-
                        height represents the height for which the alert is
                        filed.
                      format: uint64
                      type: string
                    signer:
                      description: >-
                        signer is the signer of this alert, this is the address
                        that will receive

                        the reward in the case of a positive conclusion, or
                        whose bond will get

                        slashed in the event of a negative conclusion.
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: |-
        Alerts gets all alerts in state under the given status. If no status is
        given, all Alerts are returned
      tags:
        - Query
  /slinky/alerts/v1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              ParamsResponse is the response type for the Query.Params RPC
              method, it

              contains the Params of the module.
            properties:
              params:
                description: Params is the set of parameters for the x/Alerts module.
                properties:
                  alert_params:
                    description: >-
                      AlertParams is the set of parameters for the x/Alerts
                      module's Alerting.
                    properties:
                      bond_amount:
                        description: >-
                          Coin defines a token with a denomination and an
                          amount.


                          NOTE: The amount field is an Int which implements the
                          custom method

                          signatures required by gogoproto.
                        properties:
                          amount:
                            type: string
                          denom:
                            type: string
                        type: object
                        title: >-
                          BondAmount is the minimum amount of bond required to
                          submit an

                          Alert
                      enabled:
                        title: >-
                          Enabled is a boolean defining whether or not Alerts
                          can be submitted

                          to the module
                        type: boolean
                      max_block_age:
                        description: >-
                          MaxBlockAge defines the maximum age of an Alert before
                          it is pruned, notice

                          this is defined wrt. the height that the Alert
                          references, i.e Alerts are

                          only relevant until Alert.Height + MaxBlockAge is
                          reached.
                        format: uint64
                        type: string
                    type: object
                  conclusion_verification_params:
                    properties:
                      type_url:
                        type: string
                      value:
                        format: byte
                        type: string
                    type: object
                    description: >-
                      ConclusionVerificationParams is the set of parameters for
                      the x/Alerts

                      module's conclusion verification.
                  pruning_params:
                    description: >-
                      PruningParams is the set of parameters for the x/Alerts
                      module's pruning.
                    properties:
                      blocks_to_prune:
                        description: >-
                          BlocksToPrune defines the number of blocks until an
                          Alert will be pruned

                          from state, notice this is defined wrt. the current
                          block height, i.e

                          Alerts will be stored in state until current_height +
                          BlocksToPrune is

                          reached.
                        format: uint64
                        type: string
                      enabled:
                        title: Enabled defines whether Alerts are to be pruned
                        type: boolean
                    type: object
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
        - Query
  /slinky/incentives/v1/get_all_incentives:
    get:
      operationId: GetAllIncentives
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              GetAllIncentivesResponse is the response type for the
              Query/GetAllIncentives

              RPC method.
            properties:
              registry:
                description: Registry is the list of all incentives, grouped by type.
                items:
                  description: >-
                    IncentivesByType encapsulates a list of incentives by type.
                    Each of the

                    entries here must correspond to the same incentive type
                    defined here.
                  properties:
                    entries:
                      description: Entries is a list of incentive bytes.
                      items:
                        format: byte
                        type: string
                      type: array
                    incentive_type:
                      description: >-
                        IncentiveType is the incentive type i.e.
                        (BadPriceIncentiveType,

                        GoodPriceIncentiveType).
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetAllIncentives returns all incentives.
      tags:
        - Query
  /slinky/incentives/v1/get_incentives_by_type/{incentive_type}:
    get:
      operationId: GetIncentivesByType
      parameters:
        - description: |-
            IncentiveType is the incentive type i.e. (BadPriceIncentiveType,
            GoodPriceIncentiveType).
          in: path
          name: incentive_type
          required: true
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: |-
              GetIncentivesByTypeResponse is the response type for the
              Query/GetIncentivesByType RPC method.
            properties:
              entries:
                description: Entries is the list of incentives of the given type.
                items:
                  format: byte
                  type: string
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        GetIncentivesByType returns all incentives of a given type. If the type
        is

        not registered with the module, an error is returned.
      tags:
        - Query
  /slinky/marketmap/v1/last_updated:
    get:
      operationId: LastUpdated
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              LastUpdatedResponse is the response type for the Query/LastUpdated
              RPC

              method.
            properties:
              last_updated:
                format: uint64
                type: string
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: LastUpdated returns the last height the market map was updated at.
      tags:
        - Query
  /slinky/marketmap/v1/market:
    get:
      operationId: Market
      parameters:
        - in: query
          name: currency_pair.Base
          required: false
          type: string
        - in: query
          name: currency_pair.Quote
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: MarketResponse is the query response for the Market query.
            properties:
              market:
                description: >-
                  Market encapsulates a Ticker and its provider-specific
                  configuration.
                properties:
                  provider_configs:
                    description: >-
                      ProviderConfigs is the list of provider-specific configs
                      for this Market.
                    items:
                      properties:
                        invert:
                          title: >-
                            Invert is a boolean indicating if the BASE and QUOTE
                            of the market should

                            be inverted. i.e. BASE -> QUOTE, QUOTE -> BASE
                          type: boolean
                        metadata_JSON:
                          description: >-
                            MetadataJSON is a string of JSON that encodes any
                            extra configuration

                            for the given provider config.
                          type: string
                        name:
                          description: >-
                            Name corresponds to the name of the provider for
                            which the configuration is

                            being set.
                          type: string
                        normalize_by_pair:
                          description: >-
                            NormalizeByPair is the currency pair for this ticker
                            to be normalized by.

                            For example, if the desired Ticker is BTC/USD, this
                            market could be reached

                            using: OffChainTicker = BTC/USDT NormalizeByPair =
                            USDT/USD This field is

                            optional and nullable.
                          properties:
                            Base:
                              type: string
                            Quote:
                              type: string
                          title: >-
                            CurrencyPair is the standard representation of a
                            pair of assets, where one

                            (Base) is priced in terms of the other (Quote)
                          type: object
                        off_chain_ticker:
                          description: >-
                            OffChainTicker is the off-chain representation of
                            the ticker i.e. BTC/USD.

                            The off-chain ticker is unique to a given provider
                            and is used to fetch the

                            price of the ticker from the provider.
                          type: string
                      type: object
                    type: array
                  ticker:
                    description: >-
                      Ticker represents a price feed for a given asset pair i.e.
                      BTC/USD. The

                      price feed is scaled to a number of decimal places and has
                      a minimum number

                      of providers required to consider the ticker valid.
                    properties:
                      currency_pair:
                        description: CurrencyPair is the currency pair for this ticker.
                        properties:
                          Base:
                            type: string
                          Quote:
                            type: string
                        title: >-
                          CurrencyPair is the standard representation of a pair
                          of assets, where one

                          (Base) is priced in terms of the other (Quote)
                        type: object
                      decimals:
                        description: >-
                          Decimals is the number of decimal places for the
                          ticker. The number of

                          decimal places is used to convert the price to a
                          human-readable format.
                        format: uint64
                        type: string
                      enabled:
                        description: >-
                          Enabled is the flag that denotes if the Ticker is
                          enabled for price

                          fetching by an oracle.
                        type: boolean
                      metadata_JSON:
                        description: >-
                          MetadataJSON is a string of JSON that encodes any
                          extra configuration

                          for the given ticker.
                        type: string
                      min_provider_count:
                        description: >-
                          MinProviderCount is the minimum number of providers
                          required to consider

                          the ticker valid.
                        format: uint64
                        type: string
                    type: object
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: |-
        Market returns a market stored in the x/marketmap
        module.
      tags:
        - Query
  /slinky/marketmap/v1/marketmap:
    get:
      operationId: MarketMap
      responses:
        '200':
          description: A successful response.
          schema:
            description: MarketMapResponse is the query response for the MarketMap query.
            properties:
              chain_id:
                description: ChainId is the chain identifier for the market map.
                type: string
              last_updated:
                description: >-
                  LastUpdated is the last block height that the market map was
                  updated.

                  This field can be used as an optimization for clients checking
                  if there

                  is a new update to the map.
                format: uint64
                type: string
              market_map:
                description: >-
                  MarketMap defines the global set of market configurations for
                  all providers

                  and markets.
                properties:
                  markets:
                    additionalProperties:
                      description: >-
                        Market encapsulates a Ticker and its provider-specific
                        configuration.
                      properties:
                        provider_configs:
                          description: >-
                            ProviderConfigs is the list of provider-specific
                            configs for this Market.
                          items:
                            properties:
                              invert:
                                title: >-
                                  Invert is a boolean indicating if the BASE and
                                  QUOTE of the market should

                                  be inverted. i.e. BASE -> QUOTE, QUOTE -> BASE
                                type: boolean
                              metadata_JSON:
                                description: >-
                                  MetadataJSON is a string of JSON that encodes
                                  any extra configuration

                                  for the given provider config.
                                type: string
                              name:
                                description: >-
                                  Name corresponds to the name of the provider
                                  for which the configuration is

                                  being set.
                                type: string
                              normalize_by_pair:
                                description: >-
                                  NormalizeByPair is the currency pair for this
                                  ticker to be normalized by.

                                  For example, if the desired Ticker is BTC/USD,
                                  this market could be reached

                                  using: OffChainTicker = BTC/USDT
                                  NormalizeByPair = USDT/USD This field is

                                  optional and nullable.
                                properties:
                                  Base:
                                    type: string
                                  Quote:
                                    type: string
                                title: >-
                                  CurrencyPair is the standard representation of
                                  a pair of assets, where one

                                  (Base) is priced in terms of the other (Quote)
                                type: object
                              off_chain_ticker:
                                description: >-
                                  OffChainTicker is the off-chain representation
                                  of the ticker i.e. BTC/USD.

                                  The off-chain ticker is unique to a given
                                  provider and is used to fetch the

                                  price of the ticker from the provider.
                                type: string
                            type: object
                          type: array
                        ticker:
                          description: >-
                            Ticker represents a price feed for a given asset
                            pair i.e. BTC/USD. The

                            price feed is scaled to a number of decimal places
                            and has a minimum number

                            of providers required to consider the ticker valid.
                          properties:
                            currency_pair:
                              description: >-
                                CurrencyPair is the currency pair for this
                                ticker.
                              properties:
                                Base:
                                  type: string
                                Quote:
                                  type: string
                              title: >-
                                CurrencyPair is the standard representation of a
                                pair of assets, where one

                                (Base) is priced in terms of the other (Quote)
                              type: object
                            decimals:
                              description: >-
                                Decimals is the number of decimal places for the
                                ticker. The number of

                                decimal places is used to convert the price to a
                                human-readable format.
                              format: uint64
                              type: string
                            enabled:
                              description: >-
                                Enabled is the flag that denotes if the Ticker
                                is enabled for price

                                fetching by an oracle.
                              type: boolean
                            metadata_JSON:
                              description: >-
                                MetadataJSON is a string of JSON that encodes
                                any extra configuration

                                for the given ticker.
                              type: string
                            min_provider_count:
                              description: >-
                                MinProviderCount is the minimum number of
                                providers required to consider

                                the ticker valid.
                              format: uint64
                              type: string
                          type: object
                      type: object
                    description: >-
                      Markets is the full list of tickers and their associated
                      configurations

                      to be stored on-chain.
                    type: object
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: |-
        MarketMap returns the full market map stored in the x/marketmap
        module.
      tags:
        - Query
  /slinky/marketmap/v1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              ParamsResponse is the response type for the Query/Params RPC
              method.
            properties:
              params:
                description: Params defines the parameters for the x/marketmap module.
                properties:
                  admin:
                    description: >-
                      Admin is an address that can remove addresses from the
                      MarketAuthorities

                      list. Only governance can add to the MarketAuthorities or
                      change the Admin.
                    type: string
                  market_authorities:
                    description: >-
                      MarketAuthorities is the list of authority accounts that
                      are able to

                      control updating the marketmap.
                    items:
                      type: string
                    type: array
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params returns the current x/marketmap module parameters.
      tags:
        - Query
  /slinky/oracle/v1/get_all_tickers:
    get:
      operationId: GetAllCurrencyPairs
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              GetAllCurrencyPairsResponse returns all CurrencyPairs that the
              module is

              currently tracking.
            properties:
              currency_pairs:
                items:
                  properties:
                    Base:
                      type: string
                    Quote:
                      type: string
                  title: >-
                    CurrencyPair is the standard representation of a pair of
                    assets, where one

                    (Base) is priced in terms of the other (Quote)
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        Get all the currency pairs the x/oracle module is tracking price-data
        for.
      tags:
        - Query
  /slinky/oracle/v1/get_currency_pair_mapping:
    get:
      operationId: GetCurrencyPairMapping
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              GetCurrencyPairMappingResponse is the GetCurrencyPairMapping
              response type.
            properties:
              currency_pair_mapping:
                additionalProperties:
                  properties:
                    Base:
                      type: string
                    Quote:
                      type: string
                  title: >-
                    CurrencyPair is the standard representation of a pair of
                    assets, where one

                    (Base) is priced in terms of the other (Quote)
                  type: object
                description: >-
                  currency_pair_mapping is a mapping of the id representing the
                  currency pair

                  to the currency pair itself.
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        Get the mapping of currency pair ID -> currency pair. This is useful for

        indexers that have access to the ID of a currency pair, but no way to
        get

        the underlying currency pair from it.
      tags:
        - Query
  /slinky/oracle/v1/get_price:
    get:
      operationId: GetPrice
      parameters:
        - in: query
          name: currency_pair.Base
          required: false
          type: string
        - in: query
          name: currency_pair.Quote
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              GetPriceResponse is the response from the GetPrice grpc method
              exposed from

              the x/oracle query service.
            properties:
              decimals:
                description: >-
                  decimals represents the number of decimals that the
                  quote-price is

                  represented in. For Pairs where ETHEREUM is the quote this
                  will be 18,

                  otherwise it will be 8.
                format: uint64
                type: string
              id:
                description: ID represents the identifier for the CurrencyPair.
                format: uint64
                type: string
              nonce:
                format: uint64
                title: >-
                  nonce represents the nonce for the CurrencyPair if it exists
                  in state
                type: string
              price:
                title: >-
                  QuotePrice represents the quote-price for the CurrencyPair
                  given in

                  GetPriceRequest (possibly nil if no update has been made)
                properties:
                  block_height:
                    format: uint64
                    title: BlockHeight is height of block mentioned above
                    type: string
                  block_timestamp:
                    format: date-time
                    title: >-
                      BlockTimestamp tracks the block height associated with
                      this price update.

                      We include block timestamp alongside the price to ensure
                      that smart

                      contracts and applications are not utilizing stale oracle
                      prices
                    type: string
                  price:
                    type: string
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: >-
        Given a CurrencyPair (or its identifier) return the latest QuotePrice
        for

        that CurrencyPair.
      tags:
        - Query
  /slinky/oracle/v1/get_prices:
    get:
      operationId: GetPrices
      parameters:
        - collectionFormat: multi
          in: query
          items:
            type: string
          name: currency_pair_ids
          required: false
          type: array
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              GetPricesResponse is the response from the GetPrices grpc method
              exposed from

              the x/oracle query service.
            properties:
              prices:
                items:
                  description: >-
                    GetPriceResponse is the response from the GetPrice grpc
                    method exposed from

                    the x/oracle query service.
                  properties:
                    decimals:
                      description: >-
                        decimals represents the number of decimals that the
                        quote-price is

                        represented in. For Pairs where ETHEREUM is the quote
                        this will be 18,

                        otherwise it will be 8.
                      format: uint64
                      type: string
                    id:
                      description: ID represents the identifier for the CurrencyPair.
                      format: uint64
                      type: string
                    nonce:
                      format: uint64
                      title: >-
                        nonce represents the nonce for the CurrencyPair if it
                        exists in state
                      type: string
                    price:
                      title: >-
                        QuotePrice represents the quote-price for the
                        CurrencyPair given in

                        GetPriceRequest (possibly nil if no update has been
                        made)
                      properties:
                        block_height:
                          format: uint64
                          title: BlockHeight is height of block mentioned above
                          type: string
                        block_timestamp:
                          format: date-time
                          title: >-
                            BlockTimestamp tracks the block height associated
                            with this price update.

                            We include block timestamp alongside the price to
                            ensure that smart

                            contracts and applications are not utilizing stale
                            oracle prices
                          type: string
                        price:
                          type: string
                      type: object
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      tags:
        - Query
  /slinky/sla/v1/params:
    get:
      operationId: Params
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryParamsResponse is the response type for the Query/Params RPC
              method.
            properties:
              params:
                description: Params defines the parameters for the sla module.
                properties:
                  enabled:
                    description: Enabled is a flag to enable or disable the sla module.
                    type: boolean
                type: object
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: Params returns the current SLA module parameters.
      tags:
        - Query
  /slinky/sla/v1/price_feeds:
    get:
      operationId: GetPriceFeeds
      parameters:
        - description: ID defines the SLA to query price feeds for.
          in: query
          name: id
          required: false
          type: string
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryGetPriceFeedsResponse is the response type for the
              Query/GetPriceFeeds

              RPC method.
            properties:
              price_feeds:
                description: PriceFeeds defines the price feeds for the given SLA.
                items:
                  description: >-
                    PriceFeed defines the object type that will be utilized to
                    monitor how

                    frequently validators are voting with price updates across
                    the network.
                  properties:
                    currency_pair:
                      properties:
                        Base:
                          type: string
                        Quote:
                          type: string
                      title: >-
                        CurrencyPair is the standard representation of a pair of
                        assets, where one

                        (Base) is priced in terms of the other (Quote)
                      type: object
                      description: >-
                        CurrencyPair represents the currency pair that this SLA
                        corresponds to.
                    id:
                      description: >-
                        ID corresponds to the SLA ID that this price feed
                        corresponds to.
                      type: string
                    inclusion_map:
                      description: >-
                        InclusionMap represents the relevant moving window of
                        blocks that the

                        validator has voted on.
                      format: byte
                      type: string
                    index:
                      description: Index corresponds to the current index into the bitmap.
                      format: uint64
                      type: string
                    maximum_viable_window:
                      description: >-
                        MaximumViableWindow represents the maximum number of
                        blocks that can be

                        represented by the bit map.
                      format: uint64
                      type: string
                    update_map:
                      description: >-
                        UpdateMap represents the relevant moving window of price
                        feed updates.
                      format: byte
                      type: string
                    validator:
                      description: >-
                        Validator represents the validator that this SLA
                        corresponds to.
                      format: byte
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: |-
        GetPriceFeeds returns all price feeds that the module is currently
        tracking. This request type inputs the SLA ID to query price feeds for.
      tags:
        - Query
  /slinky/sla/v1/slas:
    get:
      operationId: GetAllSLAs
      responses:
        '200':
          description: A successful response.
          schema:
            description: >-
              QueryAllSLAsResponse is the response type for the Query/GetAllSLAs
              RPC

              method.
            properties:
              slas:
                items:
                  description: >-
                    PriceFeedSLA defines the the desired SLA for a given set of
                    price feeds. A

                    price feed is defined to be a set of price prices for the
                    same (currency

                    pair, validator).
                  properties:
                    expected_uptime:
                      description: >-
                        ExpectedUptime is the expected uptime for the given
                        validator and price

                        feed.
                      type: string
                    frequency:
                      description: >-
                        Frequency is the frequency at which we will check the
                        SLA.
                      format: uint64
                      type: string
                    id:
                      description: ID is the unique identifier for the SLA.
                      type: string
                    maximum_viable_window:
                      description: >-
                        MaximumViableWindow is the maximum time window that we
                        are interested

                        for the SLA. This is used to determine the moving window
                        of blocks that

                        we are interested in.
                      format: uint64
                      type: string
                    minimum_block_updates:
                      description: >-
                        MinimumBlockUpdates is the minimum number of blocks that
                        the

                        validator had to have voted on in the maximum viable
                        window

                        in order to be considered for the SLA.
                      format: uint64
                      type: string
                    slash_constant:
                      description: >-
                        SlashConstant is the constant by which we will multiply
                        the deviation from

                        the expected uptime.
                      type: string
                  type: object
                type: array
            type: object
        default:
          description: An unexpected error response.
          schema:
            properties:
              code:
                format: int32
                type: integer
              details:
                items:
                  properties:
                    type_url:
                      type: string
                    value:
                      format: byte
                      type: string
                  type: object
                type: array
              error:
                type: string
              message:
                type: string
            type: object
      summary: GetAllSLAs returns all SLAs that the module is currently enforcing.
      tags:
        - Query
produces:
  - application/json
swagger: '2.0'
